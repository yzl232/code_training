# encoding=utf-8
'''
Write a function that given a sequence and a number b between [-10,10] return a new sequence. Sequences are generated by this: http://en.wikipedia.org/wiki/Look-and-say_sequence a number b if equal to 0 the function will return the input sequence Valid sequences: 1 11 21 1211 111221 ... Example: input: 1211, +1 output: 111221 Example: input: 111221, -1 output: 1211
'''
#-1   是count and say 的反向
#就是分割成2个2个一组。 arr[i]是数目。 arr[i+1]是元素

class Solution:
    # @return a string
    def solve(self, s, n):
        if n==0: return s
        if n>0: return self.plus(s, n)
        return self.minus(s, -n)


    def countAndSay(self, n):
        s = '1'
        for i in range(n-1):
            s1=''; j=0
            while j<len(s):
                cnt=1
                while (j+1)<len(s) and s[j]==s[j+1]: #先写容易错的j+1<len(s)
                    j+=1;  cnt+=1   #先写容易忘的j+=1
                s1+=str(cnt)+s[j]
                j+=1 #先写容易忘的j+=1
            s=s1
        return s

    def minus(self, s, n):
        for i in range(n):
            s1=''
            for j in range(0,  len(n)-1, 2):   # 就是分割成2个2个一组。 arr[i]是数目。 arr[i+1]是元素
                s1+=   s[j+1]*int(s[j])
            s = s1
        return s
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BookmarkManager">
    <bookmark url="file://$PROJECT_DIR$/code_training_leet_code/Binary Tree Zigzag Level Order Traversal.py" description="class Solution:&#10;    def zigzagLevelOrder(self, roo..." line="30" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Excel Sheet Column Number.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Excel Sheet Column Title.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Missing Ranges.py" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/code_training_leet_code/Write a function to get the intersection point of two Linked Lists..py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/Find the pair of words in a dictionary that don't share no same letter and the product of these two words' length is maximum0.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a charactor board[4][4] and a dictionary, count valid words within the board.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/Inplace M x N size matrix transpose.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/What is the maximum number of edges you could add to n vertexes to make a acyclic undirected graph.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/game of life.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/stream of strings.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/假设有许多geographically distributed servers，用户可以向这些server request a ID。要求：1、ID必须globally unique；2、ID的ordering需要尽可能的反映现实时间；3、效率。.py" afterPath="" />
      <change type="MOVED" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Remove “b” and “ac” from a given string.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Remove “b” and “ac” from a given string.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/#abcdef (eg 0x1F2A3B) 这种形式， 每个字母代表四个bit (hex)，两个字母代表一种 原色.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/#abcdef (eg 0x1F2A3B) 这种形式， 每个字母代表四个bit (hex)，两个字母代表一种 原色.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/#k“形式的代表这个数字k，两个数字“i j”形式的代表取前 i 个 数字做 j 长的 circular重复，.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/#k“形式的代表这个数字k，两个数字“i j”形式的代表取前 i 个 数字做 j 长的 circular重复，.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/+1 North America ... +1950 Northern Cal … +44 UK +4420 London +447 UK Mobile +44750 Vodafoned …  and we have a phone number, for instance +447507439854795 +44989045454.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/+1 North America ... +1950 Northern Cal … +44 UK +4420 London +447 UK Mobile +44750 Vodafoned …  and we have a phone number, for instance +447507439854795 +44989045454.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/0-1 Knapsack Problem.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/0-1 Knapsack Problem.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/2d rectangular array of positive integers representing the height map of a continent.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/2d rectangular array of positive integers representing the height map of a continent.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/3Sum Closest.py" afterPath="$PROJECT_DIR$/code_training_leet_code/3Sum Closest.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/A k-palindrome is a string which transforms into a palindrome on removing at most k characters.  Given a string S, and an interger K, print &quot;YES&quot; if S is a k-palindrome; otherwise print &quot;NO.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/A k-palindrome is a string which transforms into a palindrome on removing at most k characters.  Given a string S, and an interger K, print &quot;YES&quot; if S is a k-palindrome; otherwise print &quot;NO.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Add Binary.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Add Binary.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/linkedlist/Alternating split of a given Singly Linked List.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/linkedlist/Alternating split of a given Singly Linked List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Assume some binary (each pixel is either black or white ) images, have same width and height, and the length is power of 2. Present it by quadtree:.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Assume some binary (each pixel is either black or white ) images, have same width and height, and the length is power of 2. Present it by quadtree:.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/BST, given a min and a max, can you trim the tree so that the remaining nodes are within the range of (min, max)_Remove BST keys outside the given range.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/BST, given a min and a max, can you trim the tree so that the remaining nodes are within the range of (min, max)_Remove BST keys outside the given range.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Maximum Path Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Maximum Path Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Postorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Postorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Upside Down.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Upside Down.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Zigzag Level Order Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Zigzag Level Order Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Binary representation of a given number.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Binary representation of a given number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Candy.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Candy.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Check if a binary tree is subtree of another binary tree.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Check if a binary tree is subtree of another binary tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Check whether a given Binary Tree is Complete or not.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Check whether a given Binary Tree is Complete or not.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Clone Graph.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Clone Graph.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Clone a Binary Tree with Random Pointers.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Clone a Binary Tree with Random Pointers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combination Sum II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combination Sum II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combination Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combination Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Compare Version Numbers.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Compare Version Numbers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Consider a hashtable with M slots. Suppose hash value is uniformly distributed between 1 to M, and it uses linked list to handle conflicts.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Consider a hashtable with M slots. Suppose hash value is uniformly distributed between 1 to M, and it uses linked list to handle conflicts.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Consider in Java arraylist we have mix of int, double, float, string, etc. How will you find if a given index of arraylist have string. No need to worry about generics and type safe..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Consider in Java arraylist we have mix of int, double, float, string, etc. How will you find if a given index of arraylist have string. No need to worry about generics and type safe..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Construct BST from given preorder traversal_Given a preorder traversal, create a binary search tree   in optimized time.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Construct BST from given preorder traversal_Given a preorder traversal, create a binary search tree   in optimized time.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Inorder and Postorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Inorder and Postorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Preorder and Inorder Traversal .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Preorder and Inorder Traversal .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Construct Complete Binary Tree from its Linked List Representation.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Construct Complete Binary Tree from its Linked List Representation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Container With Most Water.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Container With Most Water.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Convert Sorted Array to Binary Search Tree .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Convert Sorted Array to Binary Search Tree .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Convert Sorted List to Binary Search Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Convert Sorted List to Binary Search Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/Convert string into new string e.g. &quot;abcD&quot;-&gt;&quot;cdeF&quot; and &quot;plxY&quot; -&gt; &quot;rnzA&quot;.py" afterPath="$PROJECT_DIR$/mianJing111111/epic/Convert string into new string e.g. &quot;abcD&quot;-&gt;&quot;cdeF&quot; and &quot;plxY&quot; -&gt; &quot;rnzA&quot;.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Copy List with Random Pointer.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Copy List with Random Pointer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n____square_sum.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n____square_sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Count number of binary strings without consecutive 1’s.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Count number of binary strings without consecutive 1’s.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Count the number of positive integers less than N that   does not contains digit 4.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Count the number of positive integers less than N that   does not contains digit 4.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Count the number of possible triangles.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Count the number of possible triangles.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Count trailing zeroes in factorial of a number.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Count trailing zeroes in factorial of a number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Create a matrix with alternating rectangles of O and X.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Create a matrix with alternating rectangles of O and X.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Criterion : Given a word find out if the word can be broken into smaller word, by removing one alphabet at a time..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Criterion : Given a word find out if the word can be broken into smaller word, by removing one alphabet at a time..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Deepest left leaf node in a binary tree.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Deepest left leaf node in a binary tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Delete a Tree..py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Delete a Tree..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Design Short URL__tinyURL..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design Short URL__tinyURL..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Design a class to serialize and deserialize an object.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design a class to serialize and deserialize an object.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Design a mobile phone class. For example, iPhone is manufactured by Apple and the software iOS is also from Apple.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design a mobile phone class. For example, iPhone is manufactured by Apple and the software iOS is also from Apple.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/trie/Design a phonebook dictionary which on input any characters gives names and phone number of all the matching names(prefix).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/trie/Design a phonebook dictionary which on input any characters gives names and phone number of all the matching names(prefix).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Design an 0(n logn) algorithm to order the first sequence according to the order imposed by the permutation. In other words, for each i, Xi should appear in the position given in ai. F.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design an 0(n logn) algorithm to order the first sequence according to the order imposed by the permutation. In other words, for each i, Xi should appear in the position given in ai. F.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Design and implement a class to generate random numbers in an arbitrary probability distribution given by an array of integer weights.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design and implement a class to generate random numbers in an arbitrary probability distribution given by an array of integer weights.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Design data structure: insert, remove, contains, get random element, all at O1.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design data structure: insert, remove, contains, get random element, all at O1.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Determine minimum sequence of adjacent values in the input parameter array that is greater than input parameter sum___minimum sliding window_Smallest subarray with sum greater than a given value.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Determine minimum sequence of adjacent values in the input parameter array that is greater than input parameter sum___minimum sliding window_Smallest subarray with sum greater than a given value.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Diameter of a Binary Tree.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Diameter of a Binary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Divide Two Integers.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Divide Two Integers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Do a quick approximation of the number of bytes needed to store a timestamp value in microseconds  that will span until the beginning of 2020?.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Do a quick approximation of the number of bytes needed to store a timestamp value in microseconds  that will span until the beginning of 2020?.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Dungeon Game.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Dungeon Game.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Edit Distance&#10;Edit Distance.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Edit Distance&#10;Edit Distance.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Evaluate Reverse Polish Notation.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Evaluate Reverse Polish Notation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Explain a load balancer data structure and algorithm..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Explain a load balancer data structure and algorithm..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Explain what happens, step by step, after you type a URL into a browser. Use as much detail as possible..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Explain what happens, step by step, after you type a URL into a browser. Use as much detail as possible..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Extract Leaves of a Binary Tree in a Doubly Linked List_flatten.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Extract Leaves of a Binary Tree in a Doubly Linked List_flatten.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Fibonacci.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Fibonacci.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Find Height of Binary Tree represented by Parent array.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find Height of Binary Tree represented by Parent array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Find a minimum range contain a number from each row. For above array it should be (1000-1002) range.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find a minimum range contain a number from each row. For above array it should be (1000-1002) range.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Find a pair with given sum in a Balanced BST.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Find a pair with given sum in a Balanced BST.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Find if there is a triplet in a Balanced BST that adds to zero.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Find if there is a triplet in a Balanced BST that adds to zero.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Find if two rectangles overlap.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find if two rectangles overlap.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Find subarray with given sum.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find subarray with given sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Find the 90th percentile of a stream of numbers between 1 and 10^6.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find the 90th percentile of a stream of numbers between 1 and 10^6.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Find the closest pair from two sorted arrays.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Find the closest pair from two sorted arrays.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Find the k'th largest element in a binary search tree. Write code for.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find the k'th largest element in a binary search tree. Write code for.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Find the longest words in a given list of words that can be constructed from a given list of letters..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find the longest words in a given list of words that can be constructed from a given list of letters..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Find the maximum path sum between two leaves of a binary tree.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Find the maximum path sum between two leaves of a binary tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Find the most frequently occurring element in a BST. In this BST we can have leftnode&lt;=rootnode&lt;=rightnode..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find the most frequently occurring element in a BST. In this BST we can have leftnode&lt;=rootnode&lt;=rightnode..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Finding a pair of elements from two sorted lists.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Finding a pair of elements from two sorted lists.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/First Missing Positive.py" afterPath="$PROJECT_DIR$/code_training_leet_code/First Missing Positive.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Flatten Binary Tree to Linked List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Flatten Binary Tree to Linked List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Flip a monochrome bitmap around its centre-line, where input is: char *bytes, int width, int height.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Flip a monochrome bitmap around its centre-line, where input is: char *bytes, int width, int height.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Forced context switching.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Forced context switching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Fraction to Recurring Decimal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Fraction to Recurring Decimal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Friend Suggestion，知道一个人在network里的Friends，求Friends的Friends里和这个人最多common friends的人.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Friend Suggestion，知道一个人在network里的Friends，求Friends的Friends里和这个人最多common friends的人.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Give a min and max of an integer array, write a function to randomly return a number inside of this range, but not in the list. Also write a class that contains this function..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Give a min and max of an integer array, write a function to randomly return a number inside of this range, but not in the list. Also write a class that contains this function..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Give efficient implementation of the following problem.  An item consist of different keys say k1, k2, k3.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Give efficient implementation of the following problem.  An item consist of different keys say k1, k2, k3.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given N dices.Each dice has A faces.That means each dice has numbers from 1 to A.Given Sum S,Find the number of ways to make the sum S if dices are rolled together..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given N dices.Each dice has A faces.That means each dice has numbers from 1 to A.Given Sum S,Find the number of ways to make the sum S if dices are rolled together..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a 2D rectangular matrix of boolean values, write a function which returns whether or not the matrix is the same when rotated 180 degrees..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a 2D rectangular matrix of boolean values, write a function which returns whether or not the matrix is the same when rotated 180 degrees..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a Binary Search tree of integers, you need to return the number of nodes having values between two given integers. You can assume that you already have some extra information at each node.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a Binary Search tree of integers, you need to return the number of nodes having values between two given integers. You can assume that you already have some extra information at each node.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a NxN matrix which contains all distinct 1 to n^2 numbers, write code to print sequence of increasing adjacent sequential numbers.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a NxN matrix which contains all distinct 1 to n^2 numbers, write code to print sequence of increasing adjacent sequential numbers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a board made of 2 x n squares, and boards made of 2 x 1 squares, write a function that will calculate the number of possible ways to arrange the 2 x 1 boards on the 2 x n board, in a way that will fill it completely..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a board made of 2 x n squares, and boards made of 2 x 1 squares, write a function that will calculate the number of possible ways to arrange the 2 x 1 boards on the 2 x n board, in a way that will fill it completely..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a byte array, which is an encoding of characters. Here is the rule.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a byte array, which is an encoding of characters. Here is the rule.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a circle with N defined points and a point M outside the circle, find the point that is closest to M among the set of N. O(LogN).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a circle with N defined points and a point M outside the circle, find the point that is closest to M among the set of N. O(LogN).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a dictionary of words, and a set of characters, judge if all the characters can form the words from the dictionary, without any characters left.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a dictionary of words, and a set of characters, judge if all the characters can form the words from the dictionary, without any characters left.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a family tree for a few generations for the entire population and two people write a routine that will find out if they are blood related. Siblings are blood related since they have the same parents.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a family tree for a few generations for the entire population and two people write a routine that will find out if they are blood related. Siblings are blood related since they have the same parents.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a huge N*N matrix, we need to query the GCD of numbers in any given submatrix range（x1,y1,x2,y2）. Design a way to preprocess the matrix to accelerate the query speed..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a huge N*N matrix, we need to query the GCD of numbers in any given submatrix range（x1,y1,x2,y2）. Design a way to preprocess the matrix to accelerate the query speed..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a kernal code in &quot;0&quot;th machine. How soon you can replicate the kernal across N machines. Now if the machines has upload and download bandwidth constraints, how can you impove the copy time..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a kernal code in &quot;0&quot;th machine. How soon you can replicate the kernal across N machines. Now if the machines has upload and download bandwidth constraints, how can you impove the copy time..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a list of integers, How can we find the biggest interval that has all its members in the given list?  E.g. given list 1,3,5,7,4,6,10 then answer would be [3, 7]. Because it has all the elements between 3 and 7..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a list of integers, How can we find the biggest interval that has all its members in the given list?  E.g. given list 1,3,5,7,4,6,10 then answer would be [3, 7]. Because it has all the elements between 3 and 7..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Given a number N, write a program that returns all possible combinations of numbers that add up to N, as lists..py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Given a number N, write a program that returns all possible combinations of numbers that add up to N, as lists..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a number n (n&gt;4), return true if n is sum of two odd prime numbers; else return false*.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a number n (n&gt;4), return true if n is sum of two odd prime numbers; else return false*.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a polygon with N vertexes and N edges. There is an int number(could be negative) on every vertex and an operation in set(*,+) on every edge.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a polygon with N vertexes and N edges. There is an int number(could be negative) on every vertex and an operation in set(*,+) on every edge.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a rope of length n meters, cut the rope in different parts of integer lengths in a way that maximizes product of lengths of all parts. You must make at least one cut. Assume that the length of rope is more than 2 meters..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a rope of length n meters, cut the rope in different parts of integer lengths in a way that maximizes product of lengths of all parts. You must make at least one cut. Assume that the length of rope is more than 2 meters..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a sequence of numbers such that A[0] &gt;= A[1] and A[N-1] &gt;= A[N-2] find at-least one triplet such that A[n-1] &gt;= A[n] &lt;= A[n+1]. Better than linear time is expected.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a sequence of numbers such that A[0] &gt;= A[1] and A[N-1] &gt;= A[N-2] find at-least one triplet such that A[n-1] &gt;= A[n] &lt;= A[n+1]. Better than linear time is expected.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a set of busy time intervals of two people as in a calendar, find the free time intervals of both the people so as to arrange a new meeting.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a set of busy time intervals of two people as in a calendar, find the free time intervals of both the people so as to arrange a new meeting.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a set of intervals, find the interval which has the maximum number of intersections.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a set of intervals, find the interval which has the maximum number of intersections.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a sorted array of integers, write a function that will return the number with the biggest number of repetitions..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a sorted array of integers, write a function that will return the number with the biggest number of repetitions..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a sorted dictionary of an alien language, find order of characters_topological_sort.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a sorted dictionary of an alien language, find order of characters_topological_sort.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a string (1-d array) , find if there is any sub-sequence that repeats itself. Here, sub-sequence can be a non-contiguous pattern, with the same relative order..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a string (1-d array) , find if there is any sub-sequence that repeats itself. Here, sub-sequence can be a non-contiguous pattern, with the same relative order..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a string of digits, find the minimum number of additions required for the string to equal some target number. Each addition is the equivalent of inserting a plus sign somewhere into the string of digits..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a string of digits, find the minimum number of additions required for the string to equal some target number. Each addition is the equivalent of inserting a plus sign somewhere into the string of digits..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a string with multiple spaces write a function to in-place trim all spaces leaving a single space between words.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a string with multiple spaces write a function to in-place trim all spaces leaving a single space between words.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a table of [Url, Content] pairs produce a new table of [Url, Set of duplicate Url.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a table of [Url, Content] pairs produce a new table of [Url, Set of duplicate Url.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a undirected graph with corresponding edges. Find the number of possible triangles.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a undirected graph with corresponding edges. Find the number of possible triangles.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Given a value N, if we want to make change for N cents, and we have infinite supply of each of S = { S1, S2, .. , Sm} valued coins, how many ways can we make the change? The order of coins doesn’t matter.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Given a value N, if we want to make change for N cents, and we have infinite supply of each of S = { S1, S2, .. , Sm} valued coins, how many ways can we make the change? The order of coins doesn’t matter.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a very very very large integer(with 1 million digits, say), how would you convert this integer to an ASCII string.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a very very very large integer(with 1 million digits, say), how would you convert this integer to an ASCII string.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given an 8x8 chess board, you have a bishop that moves from the current to the target position. write a code to find the minimum path from the current to the target position..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an 8x8 chess board, you have a bishop that moves from the current to the target position. write a code to find the minimum path from the current to the target position..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given an array A of N integers, we draw N discs in a 2D plane such that the I-th disc is centered on (0,I) and has a radius of A[I.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an array A of N integers, we draw N discs in a 2D plane such that the I-th disc is centered on (0,I) and has a radius of A[I.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given an array of integers. Find two disjoint contiguous sub-arrays such that the absolute difference between the sum of two sub-array is maximum..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an array of integers. Find two disjoint contiguous sub-arrays such that the absolute difference between the sum of two sub-array is maximum..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/random/Given an array of integers. We have to find the max element of the array, which is at multiple places in the array and return any one of the indices randomly..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/random/Given an array of integers. We have to find the max element of the array, which is at multiple places in the array and return any one of the indices randomly..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/Given an array of meetings, find out the minimum number of conference rooms requiredGiven n intervals  , find the maximum number of overlapping intervals.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/Given an array of meetings, find out the minimum number of conference rooms requiredGiven n intervals  , find the maximum number of overlapping intervals.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given an array of object A, and an array of object B. All A's have different sizes, and all B's have different sizes. Any object A is of the.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an array of object A, and an array of object B. All A's have different sizes, and all B's have different sizes. Any object A is of the.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given an array of pairs of the form &lt;a, b&gt;. We have to find a sub-array such that the 1st element in the pairs are in increasing order and the sum of 2nd element of the pairs in the sub-array is maximum possible.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an array of pairs of the form &lt;a, b&gt;. We have to find a sub-array such that the 1st element in the pairs are in increasing order and the sum of 2nd element of the pairs in the sub-array is maximum possible.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Given an array, find all unique three-member subsets, with unique being that [0,2,3] and [3,2,0] are the same set. Should run in faster than 2^n time.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Given an array, find all unique three-member subsets, with unique being that [0,2,3] and [3,2,0] are the same set. Should run in faster than 2^n time.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Given an array, print the Next Greater Element (NGE) for every element.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Given an array, print the Next Greater Element (NGE) for every element.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Given an array, remove the duplicates and return a unique array keeping the first occurrence of the duplicates and the order.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Given an array, remove the duplicates and return a unique array keeping the first occurrence of the duplicates and the order.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given an input file and any criteria write a function that will find the best score line and return it..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an input file and any criteria write a function that will find the best score line and return it..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given an integer array, adjust each integers so that the difference of every adjcent integers are not greater than a given number target..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an integer array, adjust each integers so that the difference of every adjcent integers are not greater than a given number target..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given an unsorted array of integers, you need to return maximum possible n such that the array consists at least n values greater than or equals to n. Array can contain duplicate values..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an unsorted array of integers, you need to return maximum possible n such that the array consists at least n values greater than or equals to n. Array can contain duplicate values..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given multiple stream of input numbers each of which may not fit in memory (we can assume each source to be individually sorted) give an API design to merge and store a fully sorted array..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given multiple stream of input numbers each of which may not fit in memory (we can assume each source to be individually sorted) give an API design to merge and store a fully sorted array..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given set amount of memory and ram, how do you implement a process that takes the longest amount of time to finish.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given set amount of memory and ram, how do you implement a process that takes the longest amount of time to finish.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given the relative positions (S, W, N, E, SW, NW, SE, NE) of some pairs of points on a 2D plane.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given the relative positions (S, W, N, E, SW, NW, SE, NE) of some pairs of points on a 2D plane.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given two aligned sequences `a` and `b`. Write a function &quot;findCommon&quot;, that finds the longest substring of the longer sequence that align to the smaller sequence in such a way that.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given two aligned sequences `a` and `b`. Write a function &quot;findCommon&quot;, that finds the longest substring of the longer sequence that align to the smaller sequence in such a way that.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Graph is Tree or not.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Graph is Tree or not.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Gray Code.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Gray Code.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Hailstone 数列，从一个数n开始，如果n是奇数 乘3 +1， 如果是偶数就除以2.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Hailstone 数列，从一个数n开始，如果n是奇数 乘3 +1， 如果是偶数就除以2.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Hash_table_Design and implement a hash table which uses chaining (linked lists) to handle collisions.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Hash_table_Design and implement a hash table which uses chaining (linked lists) to handle collisions.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/How can I represent the following in a data structure ? &lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;span&gt;T.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/How can I represent the following in a data structure ? &lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;span&gt;T.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/How do you make sure an API does not leak memory?.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/How do you make sure an API does not leak memory?.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/How does a site like Facebook store &quot;Likes&quot; ?.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/How does a site like Facebook store &quot;Likes&quot; ?.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/How to find if a number is power of 4 in O(loglogn)..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/How to find if a number is power of 4 in O(loglogn)..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/How to find medium of 1 billion numbers across N distributed machines efficiently?.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/How to find medium of 1 billion numbers across N distributed machines efficiently?.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/How would you synchronize a linked list across multiple computers. If nodes are added removed to a linked list on one computer, all others must reflect this change.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/How would you synchronize a linked list across multiple computers. If nodes are added removed to a linked list on one computer, all others must reflect this change.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Imagine you have a sequence of the form 0123456789101112131415... where each digit is in a position.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Imagine you have a sequence of the form 0123456789101112131415... where each digit is in a position.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement Array Class in java..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement Array Class in java..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement Iterator class with peek() functionality in Java..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement Iterator class with peek() functionality in Java..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement Queue using Stacks.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement Queue using Stacks.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement a Boolean vector: T, F, F, T, F, … with the following operations.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement a Boolean vector: T, F, F, T, F, … with the following operations.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement a circular queue of integers of user-specified size using a simple array. Provide routines to initialize(), enqueue() and dequeue() the queue. Make it thread safe..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement a circular queue of integers of user-specified size using a simple array. Provide routines to initialize(), enqueue() and dequeue() the queue. Make it thread safe..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement a counter that returns the number of function calls in the past minute.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement a counter that returns the number of function calls in the past minute.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement a vector-like data structure from scratch..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement a vector-like data structure from scratch..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement memcpy(void* src, void* dst, int len).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement memcpy(void* src, void* dst, int len).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Implement strStr().py" afterPath="$PROJECT_DIR$/code_training_leet_code/Implement strStr().py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/In a party there are n different-flavored cakes of volume V1, V2, V3 ... Vn each. Need to divide them into K people present in the party such that.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/In a party there are n different-flavored cakes of volume V1, V2, V3 ... Vn each. Need to divide them into K people present in the party such that.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/In an unsorted array of numbers that occurs an odd number of times except one that occurs an even number of times, find the number that occurs an even number of times.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/In an unsorted array of numbers that occurs an odd number of times except one that occurs an even number of times, find the number that occurs an even number of times.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/In java, a method declared as private restrict access to within the class ..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/In java, a method declared as private restrict access to within the class ..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Insertion Sort List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Insertion Sort List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Interleaving String.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Interleaving String.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Intersection of Two Linked Lists.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Intersection of Two Linked Lists.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Jump Game II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Jump Game II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Jump Game.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Jump Game.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Knowing all of a,b,c,d, find x1, x2, x3. As you might notice, this is high school math. But it's hard to write the code for solving it..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Knowing all of a,b,c,d, find x1, x2, x3. As you might notice, this is high school math. But it's hard to write the code for solving it..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/LRU Cache.py" afterPath="$PROJECT_DIR$/code_training_leet_code/LRU Cache.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Largest Number.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Largest Number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Length of Last Word.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Length of Last Word.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Let island is represented as (0,0) to (N-1,N-1) (i.e NxN matrix) &amp; person is standing at given co-ordinates.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Let island is represented as (0,0) to (N-1,N-1) (i.e NxN matrix) &amp; person is standing at given co-ordinates.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Letter Combinations of a Phone Number .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Letter Combinations of a Phone Number .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Linked List Cycle II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Linked List Cycle II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Linked List Cycle.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Linked List Cycle.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Common Prefix&#10;Longest Common Prefix.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Common Prefix&#10;Longest Common Prefix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Longest Common Subsequence__increasing Subsequence_  substring.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Longest Common Subsequence__increasing Subsequence_  substring.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Consecutive Sequence.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Consecutive Sequence.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Palindromic Substring.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Palindromic Substring.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Substring Without Repeating Characters.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Substring Without Repeating Characters.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Longest Substring with At Most Two Distinct Characters.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Longest Substring with At Most Two Distinct Characters.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Valid Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Valid Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Lowest Common Ancestor in a Binary Tree__binary search tree_bst.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Lowest Common Ancestor in a Binary Tree__binary search tree_bst.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Majority Element.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Majority Element.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/random/Make a fair coin from a biased coin.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/random/Make a fair coin from a biased coin.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Matrix Chain Multiplication.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Matrix Chain Multiplication.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Matrix_0s_1s_largest_connected_number_Of_Areas.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Matrix_0s_1s_largest_connected_number_Of_Areas.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Max Cycle Length.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Max Cycle Length.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Max Points on a Line.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Max Points on a Line.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximum Product Subarray.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximum Product Subarray.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximum Subarray.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximum Subarray.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Two Sorted Lists.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Two Sorted Lists.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge k Sorted Lists.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge k Sorted Lists.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Microsoft Excel numbers cells as 1...26 and after that AA, AB.... AAA, AAB...ZZZ and so on.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Microsoft Excel numbers cells as 1...26 and after that AA, AB.... AAA, AAB...ZZZ and so on.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Depth of Binary Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Depth of Binary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Path Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Path Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Missing Ranges Given a sorted integer array where the range of elements are [0, 99] inclusive, return its missing ranges.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Missing Ranges Given a sorted integer array where the range of elements are [0, 99] inclusive, return its missing ranges.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Move all zeroes to end of array_minimum_swap_steps.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Move all zeroes to end of array_minimum_swap_steps.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Multiply Strings.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Multiply Strings.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Multiply all fields except it's own position__Product Array Puzzle.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Multiply all fields except it's own position__Product Array Puzzle.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/N-Queens II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/N-Queens II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/N-Queens.py" afterPath="$PROJECT_DIR$/code_training_leet_code/N-Queens.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Next Permutation.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Next Permutation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Next higher number with same number of set bits.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Next higher number with same number of set bits.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/One Edit Distance.py" afterPath="$PROJECT_DIR$/code_training_leet_code/One Edit Distance.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Output top N positive integer in string comparison order. For example, let's say N=1000, then you need to output in string comparison order as below.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Output top N positive integer in string comparison order. For example, let's say N=1000, then you need to output in string comparison order as below.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Palindrome Number.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Palindrome Number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Partition List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Partition List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Partition problem.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Partition problem.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Pascal's Triangle II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Pascal's Triangle II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Pascal's Triangle.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Pascal's Triangle.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Path Sum II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Path Sum II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutations II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutations II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutations.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutations.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" afterPath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Print Matrix Diagonally.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Print Matrix Diagonally.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Print all factors of the product of a given list of distinct primes..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Print all factors of the product of a given list of distinct primes..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Print all interleavings of given two strings.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Print all interleavings of given two strings.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Print all permutations with repetition of characters.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Print all permutations with repetition of characters.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Print combinations of strings from List of List of String.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Print combinations of strings from List of List of String.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Question: You are given a CSV file with 3 columns -- all integers:  id,parent,weight.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Question: You are given a CSV file with 3 columns -- all integers:  id,parent,weight.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4 II - Call multiple times.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4 II - Call multiple times.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Recover Binary Search Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Recover Binary Search Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted Array II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted Array II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted Array.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted Array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Element.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Element.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Nth Node From End of List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Nth Node From End of List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reorder List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reorder List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Restore IP Addresses&#10;Restore IP Addresses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Restore IP Addresses&#10;Restore IP Addresses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Return the pair of indices that forms the slice where the difference between the maximum and minimum in the slice &lt;= 2.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Return the pair of indices that forms the slice where the difference between the maximum and minimum in the slice &lt;= 2.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reverse Integer.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reverse Integer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Reverse Words in a String II.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Reverse Words in a String II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reverse Words in a String.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reverse Words in a String.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Roman to Integer.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Roman to Integer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Search Insert Position.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Search Insert Position.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Search a 2D Matrix.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Search a 2D Matrix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Search for a Range.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Search for a Range.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Search in Rotated Sorted Array II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Search in Rotated Sorted Array II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Search in Rotated Sorted Array.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Search in Rotated Sorted Array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Serialize and Deserialize a Binary Tree.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Serialize and Deserialize a Binary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Serialize and Deserialize an N-ary Tree.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Serialize and Deserialize an N-ary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Set&lt;String&gt; 中找出common suffix.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Set&lt;String&gt; 中找出common suffix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/random/Shuffle a given array_random.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/random/Shuffle a given array_random.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Simplify Path.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Simplify Path.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Single Number II .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Single Number II .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Sliding Window Maximum_Maximum element of all subarrays of size k.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Sliding Window Maximum_Maximum element of all subarrays of size k.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Sorted insert for circular linked list.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Sorted insert for circular linked list.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Spiral Matrix II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Spiral Matrix II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Spiral Matrix.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Spiral Matrix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sqrt(x).py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sqrt(x).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/String compressor that turns 123abkkkkc to 123ab5xkc. Decompressor is already written and must remain unchanged.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/String compressor that turns 123abkkkkc to 123ab5xkc. Decompressor is already written and must remain unchanged.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/String to Integer (atoi).py" afterPath="$PROJECT_DIR$/code_training_leet_code/String to Integer (atoi).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Subsets II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Subsets II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Subsets.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Subsets.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sudoku Solver.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sudoku Solver.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Suppose the sub-requests can be queued at each server, and the servers are running all the time. Discuss feasible on-line algorithms that can achieve sub-optimal solutions with N ~ 10000.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Suppose the sub-requests can be queued at each server, and the servers are running all the time. Discuss feasible on-line algorithms that can achieve sub-optimal solutions with N ~ 10000.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Suppose we use binary search tree to implement set, design an algorithm that we can get an random element from the set, while maintain all the other set operations have same complexities..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Suppose we use binary search tree to implement set, design an algorithm that we can get an random element from the set, while maintain all the other set operations have same complexities..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Suppose you have N machines connected to a network. Now you generate a new file on one machine, and want to sync up across all machines. please design a system to accomplish this task and also analyze the error tolerance issue..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Suppose you have N machines connected to a network. Now you generate a new file on one machine, and want to sync up across all machines. please design a system to accomplish this task and also analyze the error tolerance issue..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Surrounded Regions .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Surrounded Regions .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Swap Kth node from beginning with Kth node from end in a Linked List.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Swap Kth node from beginning with Kth node from end in a Linked List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Text Justification.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Text Justification.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/The commit number is unique and is generated in synchronous order. There is exactly 1 unique author.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/The commit number is unique and is generated in synchronous order. There is exactly 1 unique author.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/The decimal and octal values of some numbers are both palindromes sometimes. Find such numbers within a given range.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/The decimal and octal values of some numbers are both palindromes sometimes. Find such numbers within a given range.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/The getCountInLastX functions should return the number of times increment was called_Second_Minute_Hour_Day.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/The getCountInLastX functions should return the number of times increment was called_Second_Minute_Hour_Day.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/There are 10,000 balls and may be 500 different colors of ball.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/There are 10,000 balls and may be 500 different colors of ball.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/There are n coins in a line. (Assume n is even). Two players take turns to take a coin from one of the ends of the line until there are no more coins left. The player with the larger amount of money wins.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/There are n coins in a line. (Assume n is even). Two players take turns to take a coin from one of the ends of the line until there are no more coins left. The player with the larger amount of money wins.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Three coke machines. Each one has two values min &amp; max, which means if you get coke from this machine it will load you a random volume in the range.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Three coke machines. Each one has two values min &amp; max, which means if you get coke from this machine it will load you a random volume in the range.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Traveler wants to travel from city “A” to city “D”. There is a path from city “A” to city “D.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Traveler wants to travel from city “A” to city “D”. There is a path from city “A” to city “D.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Triangle.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Triangle.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/trie/Trie_implement.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/trie/Trie_implement.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Two elements whose sum is closest to zero.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Two elements whose sum is closest to zero.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Unique Paths.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Unique Paths.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Use the shorest unique prefix to represent each word in the array.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Use the shorest unique prefix to represent each word in the array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Number.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Palindrome .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Palindrome .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Validate Binary Search Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Validate Binary Search Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/We define C(n) as the number of ways to take n identical objects out of a bucket, where objects may be taken 1, 2, or 3 at a time..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/We define C(n) as the number of ways to take n identical objects out of a bucket, where objects may be taken 1, 2, or 3 at a time..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/We have a list of N nodes with each node pointing to one of the N nodes..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/We have a list of N nodes with each node pointing to one of the N nodes..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/What happens during and after a query is being typed (autocomplete) in a search box whether the user is trying to go to a website or asking a question etc,.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/What happens during and after a query is being typed (autocomplete) in a search box whether the user is trying to go to a website or asking a question etc,.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/What is the Minimum Amount not possible using an infinite supply of coins (Unbounded knapsack).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/What is the Minimum Amount not possible using an infinite supply of coins (Unbounded knapsack).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/What is the difference between a computers heap and it's stack?.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/What is the difference between a computers heap and it's stack?.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/What is the maximum number of edges you could add to n vertexes to make a acyclic undirected graph?  Follow up: What is the maximum number of edges you could add to n vertexes to make a acyclic directed graph?.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/What is the maximum number of edges you could add to n vertexes to make a acyclic undirected graph?  Follow up: What is the maximum number of edges you could add to n vertexes to make a acyclic directed graph?.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Wildcard Matching.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Wildcard Matching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Break.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Break.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Ladder ii.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Ladder ii.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Ladder.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Ladder.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Search.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Search.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Write a class DominoChecker that has a method called addBox(int[]) that takes a box of five dominoes, described as a list of 10 integers (explained after), adds it to a collection,.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write a class DominoChecker that has a method called addBox(int[]) that takes a box of five dominoes, described as a list of 10 integers (explained after), adds it to a collection,.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/random/Write a function that generates one of 3 numbers according to given probabilities.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/random/Write a function that generates one of 3 numbers according to given probabilities.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Write a function that takes 2 strings , search returns true if any anagram of string1(needle) is present in string2(haystack).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write a function that takes 2 strings , search returns true if any anagram of string1(needle) is present in string2(haystack).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Write a method that takes a camilCase string as a parameter and returns underscore_case as output. Assume that input can be null or empty.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write a method that takes a camilCase string as a parameter and returns underscore_case as output. Assume that input can be null or empty.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Write a program for a word search.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Write a program for a word search.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Write an Efficient C Function to Convert a Binary Tree into its Mirror Tree.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Write an Efficient C Function to Convert a Binary Tree into its Mirror Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Write atof in Java, which converts a string representation of a float (like &quot;342.18E-10&quot;) to an actual float without using any built-in parsing functions..py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Write atof in Java, which converts a string representation of a float (like &quot;342.18E-10&quot;) to an actual float without using any built-in parsing functions..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Write methods to implement the multiply, subtract, and divide operations for integers. Use only the add operator.q_7_4_oprations.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/Write methods to implement the multiply, subtract, and divide operations for integers. Use only the add operator.q_7_4_oprations.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/trie/You have a dictionary which is an array of words and array of strings.  Write two functions  1. Prepare the array of strings to be searched in the dictionary 2. Check if the string contains all valid words or not..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/trie/You have a dictionary which is an array of words and array of strings.  Write two functions  1. Prepare the array of strings to be searched in the dictionary 2. Check if the string contains all valid words or not..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/You have a lists with integers. Find all the pairs of numbers that sum less than or equal to to a particular number k. The list contains minimum 5 Million number.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/You have a lists with integers. Find all the pairs of numbers that sum less than or equal to to a particular number k. The list contains minimum 5 Million number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/You have k lists of sorted integers. Find the smallest range that includes at least one number from each of the k lists..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/You have k lists of sorted integers. Find the smallest range that includes at least one number from each of the k lists..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/You have two arrays src, tgt, containing two permutations of the numbers 0..n-1.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/You have two arrays src, tgt, containing two permutations of the numbers 0..n-1.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/You have two integer arrays. Treat these arrays as if they were big numbers, with one digit in each slot. Perform addition on these two arrays and store the results in a new array.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/You have two integer arrays. Treat these arrays as if they were big numbers, with one digit in each slot. Perform addition on these two arrays and store the results in a new array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/You visited a list of places recently, but you do not remember the order in which you visited them.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/You visited a list of places recently, but you do not remember the order in which you visited them.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/ZigZag Conversion.py" afterPath="$PROJECT_DIR$/code_training_leet_code/ZigZag Conversion.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/a deadlock example_.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/a deadlock example_.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/a list of countries and its corresponding population.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/a list of countries and its corresponding population.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/at most eight servers in a data center. Each server has got a capacity memory limit. There can be at most 8 tasks that need to be scheduled on those servers. Each task requires certain capacity.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/at most eight servers in a data center. Each server has got a capacity memory limit. There can be at most 8 tasks that need to be scheduled on those servers. Each task requires certain capacity.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/balanced parenthesis O(1) space.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/balanced parenthesis O(1) space.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/binary_search_tree_insert_find_delete.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/binary_search_tree_insert_find_delete.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/bst_duplicates.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/bst_duplicates.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/build_tree_from_array.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/build_tree_from_array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/code 插入元素到max heap.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/code 插入元素到max heap.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/compress Strings.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/compress Strings.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/cookies.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/cookies.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/count inversions in an unordered array.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/count inversions in an unordered array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/count_and_say_Write a function that given a sequence and a number b between [-10,10] return a new sequence.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/count_and_say_Write a function that given a sequence and a number b between [-10,10] return a new sequence.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/decimal representation of the rational number.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/decimal representation of the rational number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/decode ways G家.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/decode ways G家.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/decode_ways.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/decode_ways.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/decorator in python.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/decorator in python.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/design a system to return an unique ID for each request. For most of requests, the ID value should increase as time goes, the system should handle 1000 requests per second at least..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/design a system to return an unique ID for each request. For most of requests, the ID value should increase as time goes, the system should handle 1000 requests per second at least..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project__topological sort.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project__topological sort.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/explain and write algorithm that implements and infinite binary counter, where add() takes O(1) time complexity.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/explain and write algorithm that implements and infinite binary counter, where add() takes O(1) time complexity.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/find a non-empty subset whose sum is a multiple of N..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/find a non-empty subset whose sum is a multiple of N..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/find longest increasing sub sequence in 2d array_matrix.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/find longest increasing sub sequence in 2d array_matrix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/flip Coin.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/flip Coin.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/generate Parenthesis &amp; remove minimum Number parentheses.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/generate Parenthesis &amp; remove minimum Number parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/give a list of &lt;id, parent id, weight&gt;, build the tree(not limited to a binary tree.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/give a list of &lt;id, parent id, weight&gt;, build the tree(not limited to a binary tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/given 10 files (text files) each of size of 900 Mb. givena another file named &quot;hello&quot;. match the contents of this file with other 10 file and return the.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/given 10 files (text files) each of size of 900 Mb. givena another file named &quot;hello&quot;. match the contents of this file with other 10 file and return the.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/given 2 Dimensional array P -- String[][] input = { { &quot;abc&quot;, &quot;def&quot;, &quot;gh&quot; }.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/given 2 Dimensional array P -- String[][] input = { { &quot;abc&quot;, &quot;def&quot;, &quot;gh&quot; }.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/given a board with black (1) and white (0), black are all connected. find the min rectangle that contains all black.  example: 0 0 0 0 0 0 1 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/given a board with black (1) and white (0), black are all connected. find the min rectangle that contains all black.  example: 0 0 0 0 0 0 1 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/given a dictionary of wrods,find the pair of word with following property: 1,the two word don't have same letter. 2,the multiple of the two word's length is maximum..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/given a dictionary of wrods,find the pair of word with following property: 1,the two word don't have same letter. 2,the multiple of the two word's length is maximum..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/given a double linked list and an array of nodes in that dll，output number of clusters  example: dll: n1 n2 n3 n4 n5; array: n1 n4 n5; output 2( (n1) (n4 n5)).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/given a double linked list and an array of nodes in that dll，output number of clusters  example: dll: n1 n2 n3 n4 n5; array: n1 n4 n5; output 2( (n1) (n4 n5)).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/how to search “n bits” in a byte array.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/how to search “n bits” in a byte array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/implement java iterator interface_count_and_say.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/implement java iterator interface_count_and_say.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/implement the method generate(), which return the next integer based on the probability in the dict.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/implement the method generate(), which return the next integer based on the probability in the dict.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/individual numbers which could be permuted in 4 factorial ways. permutation of these 4 integers is an 0indexedarray consisting of 4 digits in some order when integers are different..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/individual numbers which could be permuted in 4 factorial ways. permutation of these 4 integers is an 0indexedarray consisting of 4 digits in some order when integers are different..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/interface和抽象类的区别.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/interface和抽象类的区别.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/interleave iterator of iterators_join iterator of iterators.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/interleave iterator of iterators_join iterator of iterators.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/leaves eaten by caterpillars.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/leaves eaten by caterpillars.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/level order traversal  forest.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/level order traversal  forest.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mapReduce/mapper.py" afterPath="$PROJECT_DIR$/mapReduce/mapper.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/matrix中间一个区域的数目之和，然后我之前看面经看过这个，然后用容斥原理做了，然后他说这是trade off.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/matrix中间一个区域的数目之和，然后我之前看面经看过这个，然后用容斥原理做了，然后他说这是trade off.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/maximum path sum  a b c d.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/maximum path sum  a b c d.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/merge K sorted Arrays.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/merge K sorted Arrays.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/min stack.py" afterPath="$PROJECT_DIR$/code_training_leet_code/min stack.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/modify the file to have a max of 80 characters per line and create a new perl file.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/modify the file to have a max of 80 characters per line and create a new perl file.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/n boxes, k balls, expected number of empty boxes..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/n boxes, k balls, expected number of empty boxes..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/not algorithm: get radnom from distributed system, no duplication.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/not algorithm: get radnom from distributed system, no duplication.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/ode a function that receives a string composed by words separated by spaces and returns a string where words appear in the same order but than the original string, but every word is inverted..py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/ode a function that receives a string composed by words separated by spaces and returns a string where words appear in the same order but than the original string, but every word is inverted..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/paper_cut_price_给一张L_W的纸_给一堆 l(i)_ w(i)的模板_每个size的模板有各自的price p(i)_求这张纸所能剪出的最大.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/paper_cut_price_给一张L_W的纸_给一堆 l(i)_ w(i)的模板_每个size的模板有各自的price p(i)_求这张纸所能剪出的最大.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/pattern match 比如输入pattern： 2p2 和一个string：apple 输出 true，因为2匹配任意2个char，或者是 11mm9.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/pattern match 比如输入pattern： 2p2 和一个string：apple 输出 true，因为2匹配任意2个char，或者是 11mm9.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/pattern_matching_expression_.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/pattern_matching_expression_.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/powerOf3.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/powerOf3.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/random/random5random7.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/random/random5random7.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/random/randomInStream.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/random/randomInStream.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/random/random_With probability 1 divide (2 ^ n) returns 1  other times returns 0  given a function  Generating one 0 or 1  with probability 0.5.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/random/random_With probability 1 divide (2 ^ n) returns 1  other times returns 0  given a function  Generating one 0 or 1  with probability 0.5.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/read4k_chars_read4096.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/read4k_chars_read4096.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/rearrange_small_big_small_big.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/rearrange_small_big_small_big.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mapReduce/reducer.py" afterPath="$PROJECT_DIR$/mapReduce/reducer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/remove_comments.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/remove_comments.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/reverseArray_ Write a function rotate(ar[], d, n) that rotates arr[] of size n by d elements.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/reverseArray_ Write a function rotate(ar[], d, n) that rotates arr[] of size n by d elements.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/serialize a string and deserialize a string.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/serialize a string and deserialize a string.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/sort_string_alphabetical_different_strings.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/sort_string_alphabetical_different_strings.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/spiral_matrix.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/spiral_matrix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/square_sum_number_minimum找出一个数由最少几个平方的和的组成.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/square_sum_number_minimum找出一个数由最少几个平方的和的组成.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/stream of strings like this &quot;1 3 4 5 6&quot;.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/stream of strings like this &quot;1 3 4 5 6&quot;.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/strstr using recursion.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/strstr using recursion.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/subarray_Given an array write a function to print all continuous subsequences in the array which sum of 0——cumulative_..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/subarray_Given an array write a function to print all continuous subsequences in the array which sum of 0——cumulative_..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/subsets with a specific length.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/subsets with a specific length.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test.py" afterPath="$PROJECT_DIR$/test.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test2.py" afterPath="$PROJECT_DIR$/test2.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test9.py" afterPath="$PROJECT_DIR$/test9.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/there are N nuts and N bolts, all unique pairs of Nuts and Bolts. You cant compare Nut with Nut and a Bolt with Bolt. Now ,how would you figure out matching pairs of nut and bolt from the given N Nuts and Bolts..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/there are N nuts and N bolts, all unique pairs of Nuts and Bolts. You cant compare Nut with Nut and a Bolt with Bolt. Now ,how would you figure out matching pairs of nut and bolt from the given N Nuts and Bolts..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/thread_safe_LRU_Cache.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/thread_safe_LRU_Cache.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/triplet_password_decode.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/triplet_password_decode.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/ugly_numbers_Design an algorithm to find the kth number such that the only prime factors are 3,5, and 7.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/ugly_numbers_Design an algorithm to find the kth number such that the only prime factors are 3,5, and 7.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/unsigned char read_byte(); ← side effect that it advances a byte pointer in the stream.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/unsigned char read_byte(); ← side effect that it advances a byte pointer in the stream.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/validate_utf8_String.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/validate_utf8_String.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/void minMSwap(int[] num, int m), return the min array after m swaps.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/void minMSwap(int[] num, int m), return the min array after m swaps.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/we have a random list of people. each person knows his own height and the number of tall people in front of him. write a code to make the equivalent queue.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/we have a random list of people. each person knows his own height and the number of tall people in front of him. write a code to make the equivalent queue.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/when the levels are very deep (such as 50 levels), we cannot manually write the for loop body directly just like above codes.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/when the levels are very deep (such as 50 levels), we cannot manually write the for loop body directly just like above codes.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/word break how many How many spaces can we add to a word such that.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/word break how many How many spaces can we add to a word such that.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/word: cat, it has 4 prefixes.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/word: cat, it has 4 prefixes.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/you have data provided to you in pairs. the relationship is that the 2nd element is a child of the first element. print out the final output with tabs as shown in examples below.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/you have data provided to you in pairs. the relationship is that the 2nd element is a child of the first element. print out the final output with tabs as shown in examples below.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/youtube上如何对用户推荐视频.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/youtube上如何对用户推荐视频.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/一个bit的stream， 每次读取6个bit。转化成char。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/一个bit的stream， 每次读取6个bit。转化成char。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/一个cipher类 ，有一个member function是对输入加密，加密方法为对input的每16个Byte和一个 increasing counter做xor.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/一个cipher类 ，有一个member function是对输入加密，加密方法为对input的每16个Byte和一个 increasing counter做xor.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/一个log里有页面的访问记录，如何获得前1000popular的（hash_map + heap） followup,log里存在多个machine里.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/一个log里有页面的访问记录，如何获得前1000popular的（hash_map + heap） followup,log里存在多个machine里.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/一个很大的List(假设你用java，不过没关系)，请写一个getRandom，即随机返回 其中一个。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/一个很大的List(假设你用java，不过没关系)，请写一个getRandom，即随机返回 其中一个。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/一个数，比如7可以拆成 1+3+3 或者3+4。 求拆成的因子相乘积最大的那个 值。 我先给了个 recursion的solution， 每次从1开始拆。 他说不够有效，然后我又 改成dp，用了10分钟，刚好到45分钟，面试结束。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/一个数，比如7可以拆成 1+3+3 或者3+4。 求拆成的因子相乘积最大的那个 值。 我先给了个 recursion的solution， 每次从1开始拆。 他说不够有效，然后我又 改成dp，用了10分钟，刚好到45分钟，面试结束。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/一个程序自动在网上不断的搜集不同的URL, 个数是billions级别了.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/一个程序自动在网上不断的搜集不同的URL, 个数是billions级别了.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/个游戏,叫做“生或死” a.k.a. Game of Life,在一个棋盘上,规则如下: 每格有两种状 态:生,或者死.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/个游戏,叫做“生或死” a.k.a. Game of Life,在一个棋盘上,规则如下: 每格有两种状 态:生,或者死.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/个特殊的国家忌讳7这个数字，所有包含7的数字他们都不用，改用下一个数字， 比如7他们用8代替，17用19代替，给定这个国家的数字，翻译成我们用的数字.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/个特殊的国家忌讳7这个数字，所有包含7的数字他们都不用，改用下一个数字， 比如7他们用8代替，17用19代替，给定这个国家的数字，翻译成我们用的数字.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/你一个Node class，有getID, setID, getChildren（返回iterator）三个method。 有一个图，图里面有的node有ID，有的没有，怎么在1个pass之内把所有node都set上ID.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/你一个Node class，有getID, setID, getChildren（返回iterator）三个method。 有一个图，图里面有的node有ID，有的没有，怎么在1个pass之内把所有node都set上ID.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/假设有一个显示一个公司实时估价的网站，不断的会有最新价格进来（每个价格都会贴上一个timestamp，用于标识），要求提供几个方法查询highest price,和latest price。问如何实现。。。同时该系统支持add(timestamp, price)，和update(timestamp, price)。add()即添加新价格.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/假设有一个显示一个公司实时估价的网站，不断的会有最新价格进来（每个价格都会贴上一个timestamp，用于标识），要求提供几个方法查询highest price,和latest price。问如何实现。。。同时该系统支持add(timestamp, price)，和update(timestamp, price)。add()即添加新价格.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/假设有许多geographically distributed servers，用户可以向这些server request a ID.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/假设有许多geographically distributed servers，用户可以向这些server request a ID.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/algorithms/关于segment tree__union_find.py" afterPath="$PROJECT_DIR$/algorithms/关于segment tree__union_find.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/写一个bst的类，要求包含查找最小的节点的方法。并利用这个函数实现findNext()。 最后再写一个函数输出BST的inorder，非递归，用前面两个函数很容易写。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/写一个bst的类，要求包含查找最小的节点的方法。并利用这个函数实现findNext()。 最后再写一个函数输出BST的inorder，非递归，用前面两个函数很容易写。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/写一个filteredIterator， 给了你accept函数。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/写一个filteredIterator， 给了你accept函数。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/写一个树（非二叉树）的iterator,注意不是traversal，并分析复杂度。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/写一个树（非二叉树）的iterator,注意不是traversal，并分析复杂度。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/写一个程序，找出 5^1234566789893943的从底位开始的1000位数字.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/写一个程序，找出 5^1234566789893943的从底位开始的1000位数字.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/写出长度小于N的所有旋转对称数.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/写出长度小于N的所有旋转对称数.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/十进制十八进制转换，十八进制加法..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/十进制十八进制转换，十八进制加法..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/同时讨论何时使用异常，何时用error code.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/同时讨论何时使用异常，何时用error code.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/在某个游戏中设计一个排名更新算法。排名是根据各玩家的分数决定的，从高到低。设计数据结构。实现两个函数：第一个：输入是玩家名，输出是玩家排名；第二个：输入是玩家名和玩家的新分数，要求更新排名。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/在某个游戏中设计一个排名更新算法。排名是根据各玩家的分数决定的，从高到低。设计数据结构。实现两个函数：第一个：输入是玩家名，输出是玩家排名；第二个：输入是玩家名和玩家的新分数，要求更新排名。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/多叉树——后序遍历不让递归，要用栈.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/多叉树——后序遍历不让递归，要用栈.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/多态是什么，好处是__过程语言vs面向对象.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/多态是什么，好处是__过程语言vs面向对象.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/如何找到一个点为出发点 能实现总共取货路径最短？ 每次只能拿一个货物，遇到障碍 需要绕开，拿到以后要放回出发点，然后再取另一个.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/如何找到一个点为出发点 能实现总共取货路径最短？ 每次只能拿一个货物，遇到障碍 需要绕开，拿到以后要放回出发点，然后再取另一个.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/实现一个class LicensePlateAnagramFinder, class的constructor接受一个字典 建立索引，然后实现一个方法，快速找到car plate里面的字母的anagram，如果没有就找最接近的那个.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/实现一个class LicensePlateAnagramFinder, class的constructor接受一个字典 建立索引，然后实现一个方法，快速找到car plate里面的字母的anagram，如果没有就找最接近的那个.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/实现另一个函数， input: N(N files from 1 to N)， enough machine for using.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/实现另一个函数， input: N(N files from 1 to N)， enough machine for using.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/对于一个totally random的array，长度为n，这个min平均会被reassign多少次.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/对于一个totally random的array，长度为n，这个min平均会被reassign多少次.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/就是按照给定数组的顺序， A[]=5,6,10,11,15,1,2,3  output=3, 也就是 1，2，3；.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/就是按照给定数组的顺序， A[]=5,6,10,11,15,1,2,3  output=3, 也就是 1，2，3；.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/就是比如说给定一个数 n, 一个digit k (k = 0,1,....9)  从 0-n 之间的数字 （十进制）里面 k 出现的次数的和 （每一位上）.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/就是比如说给定一个数 n, 一个digit k (k = 0,1,....9)  从 0-n 之间的数字 （十进制）里面 k 出现的次数的和 （每一位上）.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/归并排序的机制，我答了。然 后问我它哪里好。我说归并排序稳定，可以用于外部排序，处理大文件的时候不需要全部 装入内存，是一种分治策略.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/归并排序的机制，我答了。然 后问我它哪里好。我说归并排序稳定，可以用于外部排序，处理大文件的时候不需要全部 装入内存，是一种分治策略.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/打印webpage的title和link page的title: BFS.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/打印webpage的title和link page的title: BFS.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/扩展的斐波那契数列。Sn = Sn-j + Sn-k (0&lt;j&lt;k). 写一个generator类。有实现next()方法。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/扩展的斐波那契数列。Sn = Sn-j + Sn-k (0&lt;j&lt;k). 写一个generator类。有实现next()方法。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/抛硬币问题：抛一次出现正反面的概率都是50%。求抛5000次，最后正反两 面出现次数相同的概率。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/抛硬币问题：抛一次出现正反面的概率都是50%。求抛5000次，最后正反两 面出现次数相同的概率。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/数字有重复，比如如果sum是10，{2,2,2,8,8}里面算两个(2,8)pair。求pair总数。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/数字有重复，比如如果sum是10，{2,2,2,8,8}里面算两个(2,8)pair。求pair总数。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/数组中每个元素表示他能走的步数，技能向左走 又能向右走，能到A[0]的点有A[1]和A[4].py" afterPath="$PROJECT_DIR$/mianJing111111/Google/数组中每个元素表示他能走的步数，技能向左走 又能向右走，能到A[0]的点有A[1]和A[4].py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/有N个node,每个都不停的向外发送timestamps,具体发送哪些timestamp.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/有N个node,每个都不停的向外发送timestamps,具体发送哪些timestamp.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/有一些set of names, 比如first name, middle name, last name,写个iterator打印.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/有一些set of names, 比如first name, middle name, last name,写个iterator打印.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/有一堆黑格子和白格子，摆成一排，颜色相同的相邻的格子不能超过两个，问有多少种组合方法。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/有一堆黑格子和白格子，摆成一排，颜色相同的相邻的格子不能超过两个，问有多少种组合方法。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/有一把四位数的密码锁密码忘掉了，每一位都是0-9。现在需 要我把这个密码试出来。这是一把滑动密码锁，每试完一个数字，前三位都滑到后三位.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/有一把四位数的密码锁密码忘掉了，每一位都是0-9。现在需 要我把这个密码试出来。这是一把滑动密码锁，每试完一个数字，前三位都滑到后三位.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/有两个数组 让你求两个数组的差 比如{1,2,3,4,5,5,} {2,5}  输出就是1 3 4 5.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/有两个数组 让你求两个数组的差 比如{1,2,3,4,5,5,} {2,5}  输出就是1 3 4 5.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/比较有意思地是设计一个系统，修改月球上100个服务器 的kernal.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/比较有意思地是设计一个系统，修改月球上100个服务器 的kernal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/然后实现next(), hasNext(). next()返回传入iterator的next().next().py" afterPath="$PROJECT_DIR$/mianJing111111/Google/然后实现next(), hasNext(). next()返回传入iterator的next().next().py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/生成迷宫.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/生成迷宫.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/用同样的代码同样的数据跑测试，为啥结果会不一样，有两种可能.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/用同样的代码同样的数据跑测试，为啥结果会不一样，有两种可能.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/直接上题。给了一个Quack的类，里面有三个方法： pop(): 随机从头或者尾扔出一个元素.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/直接上题。给了一个Quack的类，里面有三个方法： pop(): 随机从头或者尾扔出一个元素.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/社交网络中，如何实现好友推荐。抽象成图，然后找出共同好友最多的那个人。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/社交网络中，如何实现好友推荐。抽象成图，然后找出共同好友最多的那个人。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/给TreeNode写Iterator，使得以上代码可以in order traversal.py" afterPath="$PROJECT_DIR$/mianJing111111/new_leetcode_new/给TreeNode写Iterator，使得以上代码可以in order traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给一个array of int，以及一个range (low, high)，找出array中 所有的continuos subsequence使得这个subsequence的和在range之中.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给一个array of int，以及一个range (low, high)，找出array中 所有的continuos subsequence使得这个subsequence的和在range之中.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给一个dictionary, 再给一个set of coding string （g5, goo3, goog2, go2le.........). return all string from dictionary that can be matched with the coding string.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给一个dictionary, 再给一个set of coding string （g5, goo3, goog2, go2le.........). return all string from dictionary that can be matched with the coding string.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给一个int[] array, e.g {1,5,0,6}和一个int target，e.g. target = 21; 问是否存在某种分法把array分成几部分，每部分看成一个int，这几部分加起来等于target。e.g. {1,5}{0}{6},三部分加起来是21。{1,5}{0,6}也是21。target=25则false.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给一个int[] array, e.g {1,5,0,6}和一个int target，e.g. target = 21; 问是否存在某种分法把array分成几部分，每部分看成一个int，这几部分加起来等于target。e.g. {1,5}{0}{6},三部分加起来是21。{1,5}{0,6}也是21。target=25则false.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给一个数组a[n]，令s[i]为a[i+1..n-1]中比a[i]大的数的数量。求最大的s[i]。要求O(nlogn).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给一个数组a[n]，令s[i]为a[i+1..n-1]中比a[i]大的数的数量。求最大的s[i]。要求O(nlogn).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给一个整形数组，找离数组的平均值最近的数 写完后问如果该成一个可能随时加数进去的list，怎么找最近的数。分别说说怎么实现add(int)和findNearestAvg()。我想了想说大概用list或者用tree维持一个sorted list然后再二分查找，但是感觉不能同时保证add和find都是logN的.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给一个整形数组，找离数组的平均值最近的数 写完后问如果该成一个可能随时加数进去的list，怎么找最近的数。分别说说怎么实现add(int)和findNearestAvg()。我想了想说大概用list或者用tree维持一个sorted list然后再二分查找，但是感觉不能同时保证add和find都是logN的.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给个Binary Search Tree. 中间有很多重复的数字（你没看错，就是有重复的）。要求找到出现次数最多的那个数字。现场coding的话关键注意点在如何inorder遍历的同时刷新max。此外如果max是最后的一组数是个边界条件。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给个Binary Search Tree. 中间有很多重复的数字（你没看错，就是有重复的）。要求找到出现次数最多的那个数字。现场coding的话关键注意点在如何inorder遍历的同时刷新max。此外如果max是最后的一组数是个边界条件。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给个大的0 1二维矩阵，求所有长宽为a、b，里面1个数为k的矩形.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给个大的0 1二维矩阵，求所有长宽为a、b，里面1个数为k的矩形.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给你getParent(), getNextSibling(), getFirstChild()  要实现getNextNode(node).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给你getParent(), getNextSibling(), getFirstChild()  要实现getNextNode(node).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给你一个File，然后删除它。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给你一个File，然后删除它。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给你一串正整数。1，2，3.。。。10， 11，12.。。。 给你一个int n，要你返回哪一位的数。比如 给你10，返回的就是1.给11，返回的就是0.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给你一串正整数。1，2，3.。。。10， 11，12.。。。 给你一个int n，要你返回哪一位的数。比如 给你10，返回的就是1.给11，返回的就是0.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/给定一个自定义的List，长得和ArrayList差不多， 这个List已经有序 只支持一个函数get(index)，复杂度为O(1).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/给定一个自定义的List，长得和ArrayList差不多， 这个List已经有序 只支持一个函数get(index)，复杂度为O(1).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/trie/设计.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/trie/设计.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/设计自动售货机.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/设计自动售货机.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/输出一堆photo, photo有文件名和时间, 输出是一堆album, 要给每个album命名名字, 最多100个photo, 然后分的时候, 要做到user-friendly. 这个面试官是个烙印, 我代码没写完. 大概的思路就是, 按照天数来分, 每个album的名字就是起止时间. 当然还有很多小细节, 比如一天的照片数可能大于100.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/输出一堆photo, photo有文件名和时间, 输出是一堆album, 要给每个album命名名字, 最多100个photo, 然后分的时候, 要做到user-friendly. 这个面试官是个烙印, 我代码没写完. 大概的思路就是, 按照天数来分, 每个album的名字就是起止时间. 当然还有很多小细节, 比如一天的照片数可能大于100.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/里面每个variable所占的空间都不同 ，比如a,b是int 所以分别占4byte. bool的c只占1byte。还有其他变量，可能占8bytes 或者16bytes。都是2的次方就是。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/里面每个variable所占的空间都不同 ，比如a,b是int 所以分别占4byte. bool的c只占1byte。还有其他变量，可能占8bytes 或者16bytes。都是2的次方就是。.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/random/重复最多的数是3，这些3 的index分别是0 3 6，那么要求程序以相等的概率返回这3个index.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/random/重复最多的数是3，这些3 的index分别是0 3 6，那么要求程序以相等的概率返回这3个index.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。.py" />
    </list>
    <ignored path="code_training.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="code_training" />
  </component>
  <component name="FileEditorManager">
    <leaf />
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="true" />
    </FindUsagesManager>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/mianJing111111/Google/写一个程序，找出 5^1234566789893943的从底位开始的1000位数字.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/写出长度小于N的所有旋转对称数.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/十进制十八进制转换，十八进制加法..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/同时讨论何时使用异常，何时用error code.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/在某个游戏中设计一个排名更新算法。排名是根据各玩家的分数决定的，从高到低。设计数据结构。实现两个函数：第一个：输入是玩家名，输出是玩家排名；第二个：输入是玩家名和玩家的新分数，要求更新排名。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/多叉树——后序遍历不让递归，要用栈.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/多态是什么，好处是__过程语言vs面向对象.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/如何找到一个点为出发点 能实现总共取货路径最短？ 每次只能拿一个货物，遇到障碍 需要绕开，拿到以后要放回出发点，然后再取另一个.py" />
        <option value="$PROJECT_DIR$/mapReduce/mapper.py" />
        <option value="$PROJECT_DIR$/mapReduce/reducer.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/实现另一个函数， input: N(N files from 1 to N)， enough machine for using.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/对于一个totally random的array，长度为n，这个min平均会被reassign多少次.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/就是按照给定数组的顺序， A[]=5,6,10,11,15,1,2,3  output=3, 也就是 1，2，3；.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/归并排序的机制，我答了。然 后问我它哪里好。我说归并排序稳定，可以用于外部排序，处理大文件的时候不需要全部 装入内存，是一种分治策略.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/打印webpage的title和link page的title: BFS.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/抛硬币问题：抛一次出现正反面的概率都是50%。求抛5000次，最后正反两 面出现次数相同的概率。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/数字有重复，比如如果sum是10，{2,2,2,8,8}里面算两个(2,8)pair。求pair总数。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/数组中每个元素表示他能走的步数，技能向左走 又能向右走，能到A[0]的点有A[1]和A[4].py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/We have a list of N nodes with each node pointing to one of the N nodes..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Graph is Tree or not.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/有N个node,每个都不停的向外发送timestamps,具体发送哪些timestamp.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/有一些set of names, 比如first name, middle name, last name,写个iterator打印.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/有一把四位数的密码锁密码忘掉了，每一位都是0-9。现在需 要我把这个密码试出来。这是一把滑动密码锁，每试完一个数字，前三位都滑到后三位.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/有两个数组 让你求两个数组的差 比如{1,2,3,4,5,5,} {2,5}  输出就是1 3 4 5.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/比较有意思地是设计一个系统，修改月球上100个服务器 的kernal.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/然后实现next(), hasNext(). next()返回传入iterator的next().next().py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/生成迷宫.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/用同样的代码同样的数据跑测试，为啥结果会不一样，有两种可能.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/直接上题。给了一个Quack的类，里面有三个方法： pop(): 随机从头或者尾扔出一个元素.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Friend Suggestion，知道一个人在network里的Friends，求Friends的Friends里和这个人最多common friends的人.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/社交网络中，如何实现好友推荐。抽象成图，然后找出共同好友最多的那个人。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给一个dictionary, 再给一个set of coding string （g5, goo3, goog2, go2le.........). return all string from dictionary that can be matched with the coding string.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给一个int[] array, e.g {1,5,0,6}和一个int target，e.g. target = 21; 问是否存在某种分法把array分成几部分，每部分看成一个int，这几部分加起来等于target。e.g. {1,5}{0}{6},三部分加起来是21。{1,5}{0,6}也是21。target=25则false.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给一个数组a[n]，令s[i]为a[i+1..n-1]中比a[i]大的数的数量。求最大的s[i]。要求O(nlogn).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/count inversions in an unordered array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给一个整形数组，找离数组的平均值最近的数 写完后问如果该成一个可能随时加数进去的list，怎么找最近的数。分别说说怎么实现add(int)和findNearestAvg()。我想了想说大概用list或者用tree维持一个sorted list然后再二分查找，但是感觉不能同时保证add和find都是logN的.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给个Binary Search Tree. 中间有很多重复的数字（你没看错，就是有重复的）。要求找到出现次数最多的那个数字。现场coding的话关键注意点在如何inorder遍历的同时刷新max。此外如果max是最后的一组数是个边界条件。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给个大的0 1二维矩阵，求所有长宽为a、b，里面1个数为k的矩形.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给你getParent(), getNextSibling(), getFirstChild()  要实现getNextNode(node).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给你一个File，然后删除它。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给你一串正整数。1，2，3.。。。10， 11，12.。。。 给你一个int n，要你返回哪一位的数。比如 给你10，返回的就是1.给11，返回的就是0.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给定一个自定义的List，长得和ArrayList差不多， 这个List已经有序 只支持一个函数get(index)，复杂度为O(1).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/设计自动售货机.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/输出一堆photo, photo有文件名和时间, 输出是一堆album, 要给每个album命名名字, 最多100个photo, 然后分的时候, 要做到user-friendly. 这个面试官是个烙印, 我代码没写完. 大概的思路就是, 按照天数来分, 每个album的名字就是起止时间. 当然还有很多小细节, 比如一天的照片数可能大于100.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/里面每个variable所占的空间都不同 ，比如a,b是int 所以分别占4byte. bool的c只占1byte。还有其他变量，可能占8bytes 或者16bytes。都是2的次方就是。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和.py" />
        <option value="$PROJECT_DIR$/test.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Design Short URL__tinyURL..py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="337" />
    <option name="y" value="23" />
    <option name="width" value="1154" />
    <option name="height" value="842" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>Buildout</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="2" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../courseProjects" />
    <property name="options.lastSelected" value="editor.preferences.completion" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="options.searchVisible" value="true" />
    <property name="SearchEverywhereHistoryKey" value="url&#9;null&#9;null&#10;&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。.py&#10;test&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/test.py&#10;Imagine you have a sequence of the form 0123456789101112131415&#9;null&#9;null&#10;inversion&#9;null&#9;null&#10;pattern match 比如输入pattern： 2p2 和一个string：apple 输出 true&#9;null&#9;null&#10;Given a string of digits, find the minimum number of additions required &#9;null&#9;null&#10;Friend Suggestion，知道一个人在network里的Friends，求Friends的Friends里和这个人最多common friends的人&#9;null&#9;null&#10;called times function hits gethits&#9;null&#9;null&#10;flatten iterator&#9;null&#9;null&#10;We have a list of N nodes with each node pointing to one of the N nodes.&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/We have a list of N nodes with each node pointing to one of the N nodes..py&#10;Graph is Tree or not&#9;null&#9;null&#10;map  reduce&#9;null&#9;null&#10;preorder&#9;null&#9;null&#10;peek&#9;null&#9;null&#10;design a system to return an unique ID for each request. For most of requests, the ID value should increase as time goes, the system should handle 1000 requests per second at least.&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/design a system to return an unique ID for each request. For most of requests, the ID value should increase as time goes, the system should handle 1000 requests per second at least..py&#10;test.py&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/test.py&#10;square&#9;null&#9;null&#10;x*x&#9;null&#9;null&#10;singlet&#9;null&#9;null&#10;add binary&#9;null&#9;null&#10;test.&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/test.py&#10;union fin&#9;null&#9;null&#10;water machine&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml.py&#10;machine&#9;null&#9;null&#10;strstr&#9;null&#9;null&#10;reverse wor&#9;null&#9;null&#10;next gre&#9;null&#9;null&#10;window&#9;null&#9;null&#10;count and &#9;null&#9;null&#10;tes&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/test.py&#10;build tree&#9;null&#9;null&#10;build&#9;null&#9;null&#10;zigza&#9;null&#9;null&#10;power &#9;null&#9;null&#10;coin&#9;null&#9;null&#10;level order&#9;null&#9;null&#10;tree itera&#9;null&#9;null&#10;tree iterator&#9;null&#9;null&#10;thread safe&#9;null&#9;null&#10;Count the number of positive integers less than N that   does not contains digit 4&#9;null&#9;null&#10;个特殊的国家忌讳7这个数字，所有包含7的数字他们都不用，改用下一个数字， 比如7他们用8代替，17用19代替，给定这个国家的数字，翻译成我们用的数字&#9;null&#9;null&#10;count 2&#9;null&#9;null&#10;t&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/test.py&#10;Printing Longest Common Subsequence&#9;null&#9;null&#10;merge  sorted&#9;null&#9;null&#10;nuts&#9;null&#9;null&#10;maximum subarr&#9;null&#9;null&#10;Determine minimum sequence of adjacent values in the input parameter array that is greater than input parameter sum&#9;null&#9;null&#10;friends&#9;null&#9;null" />
    <property name="recentsLimit" value="5" />
    <property name="FullScreen" value="false" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings />
    </option>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <recent name="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <recent name="$PROJECT_DIR$/mianJing111111/facebook" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/Google" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree" />
      <recent name="$PROJECT_DIR$/mianJing111111/new_leetcode_new" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/design" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/bit" />
    </key>
  </component>
  <component name="RunManager" selected="Python.题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。">
    <configuration default="false" name="test" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/test.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="给一堆数，代表时间戳访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="里面每个variable所占的空间都不同 ，比如a,b是int 所以分别占4byte. bool的c只占1byte。还有其他变量，可能占8bytes 或者16bytes。都是2的次方就是。" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/里面每个variable所占的空间都不同 ，比如a,b是int 所以分别占4byte. bool的c只占1byte。还有其他变量，可能占8bytes 或者16bytes。都是2的次方就是。.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="testToRun" value="" />
      <option name="keywords" value="" />
      <option name="params" value="" />
      <option name="USE_PARAM" value="false" />
      <option name="USE_KEYWORD" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Nosetests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PUREUNITTEST" value="true" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Attests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="false" name="Given a rope of length n meters, cut the rope in different parts of integer lengths in a way that maximizes product of lengths of all parts. You must make at least one cut. Assume that the length of rope is more than 2 meters." type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/Given a rope of length n meters, cut the rope in different parts of integer lengths in a way that maximizes product of lengths of all parts. You must make at least one cut. Assume that the length of rope is more than 2 meters..py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Find the Increasing subsequence of length three with maximum product" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Find the Increasing subsequence of length three with maximum product.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Sliding Window Maximum_Maximum element of all subarrays of size k" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/Sliding Window Maximum_Maximum element of all subarrays of size k.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PyDebugRunner" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PyDebugRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel/给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <list size="9">
      <item index="0" class="java.lang.String" itemvalue="Python.Given a rope of length n meters, cut the rope in different parts of integer lengths in a way that maximizes product of lengths of all parts. You must make at least one cut. Assume that the length of rope is more than 2 meters." />
      <item index="1" class="java.lang.String" itemvalue="Python.Find the Increasing subsequence of length three with maximum product" />
      <item index="2" class="java.lang.String" itemvalue="Python.Sliding Window Maximum_Maximum element of all subarrays of size k" />
      <item index="3" class="java.lang.String" itemvalue="Python.给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" />
      <item index="4" class="java.lang.String" itemvalue="Python.test" />
      <item index="5" class="java.lang.String" itemvalue="Python.给一堆数，代表时间戳访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳" />
      <item index="6" class="java.lang.String" itemvalue="Python.里面每个variable所占的空间都不同 ，比如a,b是int 所以分别占4byte. bool的c只占1byte。还有其他变量，可能占8bytes 或者16bytes。都是2的次方就是。" />
      <item index="7" class="java.lang.String" itemvalue="Python.题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和" />
      <item index="8" class="java.lang.String" itemvalue="Python.题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="Python.题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。" />
        <item index="1" class="java.lang.String" itemvalue="Python.test" />
        <item index="2" class="java.lang.String" itemvalue="Python.题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和" />
        <item index="3" class="java.lang.String" itemvalue="Python.里面每个variable所占的空间都不同 ，比如a,b是int 所以分别占4byte. bool的c只占1byte。还有其他变量，可能占8bytes 或者16bytes。都是2的次方就是。" />
        <item index="4" class="java.lang.String" itemvalue="Python.给一堆数，代表时间戳访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="" />
      <created>1416632866407</created>
      <updated>1416632866407</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="337" y="23" width="1154" height="842" extended-state="0" />
    <editor active="false" />
    <layout>
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32952926" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.24886052" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.17122683" sideWeight="0.4990758" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3953168" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.20504732" sideWeight="0.5009242" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.1908284" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3292011" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.315427" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
    </layout>
    <layout-to-restore>
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32952926" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.31656805" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3953168" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.20504732" sideWeight="0.5009242" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.24886052" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.15645161" sideWeight="0.4990758" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.10128388" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="myTodoPanelSettings">
      <TodoPanelSettings />
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints-dialog>
        <breakpoints-dialog />
      </breakpoints-dialog>
      <option name="time" value="11" />
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/有一把四位数的密码锁密码忘掉了，每一位都是0-9。现在需 要我把这个密码试出来。这是一把滑动密码锁，每试完一个数字，前三位都滑到后三位.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.31657356" vertical-offset="0" max-vertical-offset="537">
          <caret line="8" column="15" selection-start-line="0" selection-start-column="0" selection-end-line="8" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/有两个数组 让你求两个数组的差 比如{1,2,3,4,5,5,} {2,5}  输出就是1 3 4 5.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="204">
          <caret line="6" column="19" selection-start-line="6" selection-start-column="19" selection-end-line="6" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/有很多这样的block. 然后问有&quot;foo&quot;的block的个数..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.4857143" vertical-offset="0" max-vertical-offset="560">
          <caret line="16" column="21" selection-start-line="16" selection-start-column="21" selection-end-line="16" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/检查一个字符串是否包含k位a进制数的所有表示形式。保证原字符串的所有字串都是合法的k位a进制数。&quot;00110, a=2, k=2&quot;.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="238">
          <caret line="8" column="30" selection-start-line="8" selection-start-column="30" selection-end-line="8" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/比较有意思地是设计一个系统，修改月球上100个服务器 的kernal.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="459">
          <caret line="18" column="4" selection-start-line="18" selection-start-column="4" selection-end-line="18" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/然后实现next(), hasNext(). next()返回传入iterator的next().next().py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.425" vertical-offset="0" max-vertical-offset="560">
          <caret line="14" column="30" selection-start-line="14" selection-start-column="30" selection-end-line="14" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/生产者_消费者问题.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="833">
          <caret line="28" column="18" selection-start-line="28" selection-start-column="18" selection-end-line="28" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/生成迷宫.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="510">
          <caret line="18" column="3" selection-start-line="18" selection-start-column="3" selection-end-line="18" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="2856">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/用同样的代码同样的数据跑测试，为啥结果会不一样，有两种可能.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="578">
          <caret line="9" column="24" selection-start-line="9" selection-start-column="24" selection-end-line="9" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/直接上题。给了一个Quack的类，里面有三个方法： pop(): 随机从头或者尾扔出一个元素.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="697">
          <caret line="25" column="24" selection-start-line="25" selection-start-column="24" selection-end-line="25" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/社交网络中，如何实现好友推荐。抽象成图，然后找出共同好友最多的那个人。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="442">
          <caret line="19" column="3" selection-start-line="19" selection-start-column="0" selection-end-line="20" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Friend Suggestion，知道一个人在network里的Friends，求Friends的Friends里和这个人最多common friends的人.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="5" max-vertical-offset="782">
          <caret line="23" column="0" selection-start-line="23" selection-start-column="0" selection-end-line="23" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/第一个设计一个API，实现用户A发送消息给B，内容包含一个title和context.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="652">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一个array表示的数字，比如['1', '2', '3'] 和一个unsigned int，返回它们的加和，返回的也要是一个array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="187">
          <caret line="1" column="45" selection-start-line="1" selection-start-column="45" selection-end-line="1" selection-end-column="45" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一个dictionary, 再给一个set of coding string （g5, goo3, goog2, go2le.........). return all string from dictionary that can be matched with the coding string.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="2.1044488" vertical-offset="0" max-vertical-offset="2720">
          <caret line="64" column="18" selection-start-line="64" selection-start-column="18" selection-end-line="64" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a string of digits, find the minimum number of additions required for the string to equal some target number. Each addition is the equivalent of inserting a plus sign somewhere into the string of digits..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.2630561" vertical-offset="0" max-vertical-offset="816">
          <caret line="5" column="0" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一个int[] array, e.g {1,5,0,6}和一个int target，e.g. target = 21; 问是否存在某种分法把array分成几部分，每部分看成一个int，这几部分加起来等于target。e.g. {1,5}{0}{6},三部分加起来是21。{1,5}{0,6}也是21。target=25则false.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1020">
          <caret line="12" column="3" selection-start-line="12" selection-start-column="3" selection-end-line="12" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一个matrix，然后里面都是非负数，代表这一个点的高度。然后看这个matrix最大可以装多少水，和leetcode上的差不多，不过是二维的，要考虑上下左右.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="517">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/pattern match 比如输入pattern： 2p2 和一个string：apple 输出 true，因为2匹配任意2个char，或者是 11mm9.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.2630561" vertical-offset="0" max-vertical-offset="527">
          <caret line="7" column="15" selection-start-line="7" selection-start-column="15" selection-end-line="7" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一个String 可以包含数字或者字母 找出里面的是否存在一个substring全是数字而且这个substring表示的数字可以被36整除，并且不能是0.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.22037037" vertical-offset="0" max-vertical-offset="540">
          <caret line="7" column="69" selection-start-line="7" selection-start-column="69" selection-end-line="7" selection-end-column="69" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/count inversions in an unordered array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="68" max-vertical-offset="1343">
          <caret line="17" column="41" selection-start-line="17" selection-start-column="41" selection-end-line="17" selection-end-column="41" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一个数组a[n]，令s[i]为a[i+1..n-1]中比a[i]大的数的数量。求最大的s[i]。要求O(nlogn).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="765">
          <caret line="8" column="16" selection-start-line="8" selection-start-column="16" selection-end-line="8" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一个整形数组，找离数组的平均值最近的数 写完后问如果该成一个可能随时加数进去的list，怎么找最近的数。分别说说怎么实现add(int)和findNearestAvg()。我想了想说大概用list或者用tree维持一个sorted list然后再二分查找，但是感觉不能同时保证add和find都是logN的.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="255">
          <caret line="8" column="42" selection-start-line="8" selection-start-column="42" selection-end-line="8" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="489" max-vertical-offset="1054">
          <caret line="33" column="0" selection-start-line="33" selection-start-column="0" selection-end-line="33" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一段输入文字，统计所有2-gram及出现次数。dataset有100G怎么办？你有100台32-bit机器（4G内存），怎么分发给100台机器处理？瓶颈在哪里？.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="542">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给个Binary Search Tree. 中间有很多重复的数字（你没看错，就是有重复的）。要求找到出现次数最多的那个数字。现场coding的话关键注意点在如何inorder遍历的同时刷新max。此外如果max是最后的一组数是个边界条件。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="493">
          <caret line="17" column="19" selection-start-line="17" selection-start-column="19" selection-end-line="17" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给个大的0 1二维矩阵，求所有长宽为a、b，里面1个数为k的矩形.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.24355301" vertical-offset="0" max-vertical-offset="698">
          <caret line="10" column="31" selection-start-line="10" selection-start-column="31" selection-end-line="10" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给你getParent(), getNextSibling(), getFirstChild()  要实现getNextNode(node).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="101" max-vertical-offset="799">
          <caret line="41" column="15" selection-start-line="41" selection-start-column="15" selection-end-line="41" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给你一个File，然后删除它。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="595">
          <caret line="28" column="16" selection-start-line="28" selection-start-column="16" selection-end-line="28" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给你一串正整数。1，2，3.。。。10， 11，12.。。。 给你一个int n，要你返回哪一位的数。比如 给你10，返回的就是1.给11，返回的就是0.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7131902" vertical-offset="113" max-vertical-offset="867">
          <caret line="32" column="9" selection-start-line="32" selection-start-column="9" selection-end-line="32" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给你一个nxn的grid 表示一个博物馆里nxn个房间，然后每个房间可能是打开的 也可能是关着的 或者是有警卫的。要你求所有开门的房间距离最近的警卫的距离.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="119">
          <caret line="1" column="78" selection-start-line="1" selection-start-column="78" selection-end-line="1" selection-end-column="78" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Imagine you have a sequence of the form 0123456789101112131415... where each digit is in a position.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="260" max-vertical-offset="935">
          <caret line="19" column="0" selection-start-line="19" selection-start-column="0" selection-end-line="19" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给定一个大小为K的窗口，有一个数字输入流，要求随着流的输入，输出窗口中数字的众数。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="153">
          <caret line="0" column="16" selection-start-line="0" selection-start-column="16" selection-end-line="0" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给定一个自定义的List，长得和ArrayList差不多， 这个List已经有序 只支持一个函数get(index)，复杂度为O(1).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="272">
          <caret line="8" column="12" selection-start-line="8" selection-start-column="12" selection-end-line="8" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/让我实现一个callLater函数。传进去的参数是一个函数 指针，还有delay的时间。让实现delay那么多时间后调用那个函数.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="675">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/设计自动售货机.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="1444" max-vertical-offset="2142">
          <caret line="9" column="31" selection-start-line="9" selection-start-column="31" selection-end-line="9" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/输入为String类型的正整数，创建一个function做减1操作，比如: &quot;123&quot; - &gt; &quot;122&quot;, &quot;100&quot; - &gt; &quot;99&quot;.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="323">
          <caret line="13" column="21" selection-start-line="0" selection-start-column="0" selection-end-line="13" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/返回值有可能出错概率是 p=0.00001.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="652">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/这个window从array的一开 始滑动到最后，找出来在滑动的过程中每次window中int的和，比如一个array是[1,2,3 ,4,5]，然后window的宽度是2，那么就输出[3,5,7,9].py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="652">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/输出一堆photo, photo有文件名和时间, 输出是一堆album, 要给每个album命名名字, 最多100个photo, 然后分的时候, 要做到user-friendly. 这个面试官是个烙印, 我代码没写完. 大概的思路就是, 按照天数来分, 每个album的名字就是起止时间. 当然还有很多小细节, 比如一天的照片数可能大于100.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.8174847" vertical-offset="351" max-vertical-offset="1003">
          <caret line="49" column="0" selection-start-line="49" selection-start-column="0" selection-end-line="49" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/里面每个variable所占的空间都不同 ，比如a,b是int 所以分别占4byte. bool的c只占1byte。还有其他变量，可能占8bytes 或者16bytes。都是2的次方就是。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="199" max-vertical-offset="867">
          <caret line="32" column="37" selection-start-line="32" selection-start-column="37" selection-end-line="32" selection-end-column="37" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/问linuxsys call，没太明白问的是什么，说ls系统里发生了什么.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="526">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/问了一个Java的问题 假设有两个class，A和B，B是A的子类，.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.4335155" vertical-offset="0" max-vertical-offset="549">
          <caret line="14" column="8" selection-start-line="14" selection-start-column="8" selection-end-line="14" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="1661" max-vertical-offset="3145">
          <caret line="98" column="0" selection-start-line="98" selection-start-column="0" selection-end-line="98" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/题目：MapReduce(filter a collection of documents, the words which occur more than 5000 times).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="569">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5774379" vertical-offset="395" max-vertical-offset="918">
          <caret line="41" column="0" selection-start-line="41" selection-start-column="0" selection-end-line="41" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/题目是给一个string，返回含有word的list。word的定义是空格(大于 等于一个）之间的或者引号之间的，如果引号里面有空格要做为一个word返回 根据空格分隔字符串，但是引号内的是整体，不可分割.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.12820514" vertical-offset="202" max-vertical-offset="748">
          <caret line="15" column="21" selection-start-line="15" selection-start-column="21" selection-end-line="15" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="323">
          <caret line="13" column="20" selection-start-line="13" selection-start-column="20" selection-end-line="13" selection-end-column="20" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/题：假设咱俩去抢银行，银行保险柜的锁是0到9、4位的密码锁。你在电话另一边给我念密码，我就一个一个试。假设你有一个string，所有的密码组合都是这个string的substring，问这个string的最小长度是多少。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="34" max-vertical-offset="4131">
          <caret line="2" column="89" selection-start-line="2" selection-start-column="89" selection-end-line="2" selection-end-column="89" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Design Short URL__tinyURL..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-3.045016" vertical-offset="2846" max-vertical-offset="3468">
          <caret line="50" column="46" selection-start-line="50" selection-start-column="46" selection-end-line="50" selection-end-column="46" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>


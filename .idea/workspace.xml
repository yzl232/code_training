<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design a two player battleship game to be played over internet.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Extend. If you can remove three walls, then what is the shortest path from start to the target.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find the 90th percentile of a stream of numbers between 1 and 10^6.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find the longest words in a given list of words that can be constructed from a given list of letters..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find the peakRAM when the input is a collection of LogEntry objects.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Give efficient implementation of the following problem.  An item consist of different keys say k1, k2, k3.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a Binary Search tree of integers, you need to return the number of nodes having values between two given integers. You can assume that you already have some extra information at each node.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a NxN matrix which contains all distinct 1 to n^2 numbers, write code to print sequence of increasing adjacent sequential numbers.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a number M (N-digit integer) and K-swap operations(a swap operation can swap 2 digits), devise an algorithm to get the maximum possible integer?.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a string (1-d array) , find if there is any sub-sequence that repeats itself. Here, sub-sequence can be a non-contiguous pattern, with the same relative order..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a string (for example: &quot;a?bc?def?g&quot;), write a program to generate all the possible strings by replacing ? with 0 and 1.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a string with multiple spaces write a function to in-place trim all spaces leaving a single space between words.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an array of object A, and an array of object B. All A's have different sizes, and all B's have different sizes. Any object A is of the.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an unsorted array of integers, you need to return maximum possible n such that the array consists at least n values greater than or equals to n. Array can contain duplicate values..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/In an unsorted array of numbers that occurs an odd number of times except one that occurs an even number of times, find the number that occurs an even number of times.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Interviewer expected the list of system-calls made, file-descriptors involved etc..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Output top N positive integer in string comparison order. For example, let's say N=1000, then you need to output in string comparison order as below.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Sets the rate, from 1 to 1000000 queries per second.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Swap 2 nodes in a Binary tree.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Traveler wants to travel from city “A” to city “D”. There is a path from city “A” to city “D.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Search.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write a program to implement Double Linked List from Stack with min. complexity..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/at most eight servers in a data center. Each server has got a capacity memory limit. There can be at most 8 tasks that need to be scheduled on those servers. Each task requires certain capacity.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/You are given information about hotels in a country/city. X and Y coordinates of each hotel are known. You need to suggest the list of nearest hotels to a user who is querying from a particular point.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/given 10 files (text files) each of size of 900 Mb. givena another file named &quot;hello&quot;. match the contents of this file with other 10 file and return the.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/left growing tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Add Binary.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Add Binary.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Add Two Numbers .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Add Two Numbers .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Anagrams.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Anagrams.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Balanced Binary Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Balanced Binary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Maximum Path Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Maximum Path Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Postorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Postorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Preorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Preorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Climbing Stairs.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Climbing Stairs.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combination Sum II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combination Sum II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combination Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combination Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combinations.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combinations.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Inorder and Postorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Inorder and Postorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Preorder and Inorder Traversal .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Preorder and Inorder Traversal .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Determine minimum sequence of adjacent values in the input parameter array that is greater than input parameter sum___minimum sliding window_Smallest subarray with sum greater than a given value.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Determine minimum sequence of adjacent values in the input parameter array that is greater than input parameter sum___minimum sliding window_Smallest subarray with sum greater than a given value.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Divide Two Integers.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Divide Two Integers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Evaluate Reverse Polish Notation.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Evaluate Reverse Polish Notation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Generate Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Generate Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/rocket_Fuel/Given a number, can you remove k digits from the number so that the new formatted number is smallest possible..py" afterPath="$PROJECT_DIR$/mianJing111111/rocket_Fuel/Given a number, can you remove k digits from the number so that the new formatted number is smallest possible..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Implement strStr().py" afterPath="$PROJECT_DIR$/code_training_leet_code/Implement strStr().py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/ImplementLog2UsingSqrt.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/ImplementLog2UsingSqrt.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Insertion Sort List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Insertion Sort List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Integer to Roman.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Integer to Roman.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/LRU Cache.py" afterPath="$PROJECT_DIR$/code_training_leet_code/LRU Cache.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Length of Last Word.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Length of Last Word.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Common Prefix&#10;Longest Common Prefix.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Common Prefix&#10;Longest Common Prefix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Longest Common Subsequence__increasing Subsequence_  substring.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Longest Common Subsequence__increasing Subsequence_  substring.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Valid Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Valid Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Max Points on a Line.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Max Points on a Line.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximum Product Subarray.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximum Product Subarray.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Depth of Binary Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Depth of Binary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Multiply Strings.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Multiply Strings.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/N-Queens II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/N-Queens II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/N-Queens.py" afterPath="$PROJECT_DIR$/code_training_leet_code/N-Queens.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Next Permutation.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Next Permutation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Partition List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Partition List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Path Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Path Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutations II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutations II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutations.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutations.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Plus One.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Plus One.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" afterPath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Recover Binary Search Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Recover Binary Search Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List&#10;Remove Duplicates from Sorted List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List&#10;Remove Duplicates from Sorted List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reorder List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reorder List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Restore IP Addresses&#10;Restore IP Addresses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Restore IP Addresses&#10;Restore IP Addresses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reverse Integer.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reverse Integer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reverse Linked List II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reverse Linked List II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Roman to Integer.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Roman to Integer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Rotate List .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Rotate List .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Scramble String.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Scramble String.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Search a 2D Matrix.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Search a 2D Matrix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Simplify Path.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Simplify Path.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Single Number II .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Single Number II .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Single Number.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Single Number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sort Colors.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sort Colors.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sqrt(x).py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sqrt(x).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/String to Integer (atoi).py" afterPath="$PROJECT_DIR$/code_training_leet_code/String to Integer (atoi).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Subsets II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Subsets II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sudoku Solver.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sudoku Solver.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sum Root to Leaf Numbers.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sum Root to Leaf Numbers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Surrounded Regions .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Surrounded Regions .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Swap Nodes in Pairs .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Swap Nodes in Pairs .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Symmetric Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Symmetric Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Text Justification.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Text Justification.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Number.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Sudoku.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Sudoku.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Validate Binary Search Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Validate Binary Search Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Wildcard Matching.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Wildcard Matching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Break.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Break.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Ladder ii.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Ladder ii.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Ladder.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Ladder.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Write an Efficient C Function to Convert a Binary Tree into its Mirror Tree.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Write an Efficient C Function to Convert a Binary Tree into its Mirror Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/ZigZag Conversion.py" afterPath="$PROJECT_DIR$/code_training_leet_code/ZigZag Conversion.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/min stack.py" afterPath="$PROJECT_DIR$/code_training_leet_code/min stack.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/algorithms/quickSort.py" afterPath="$PROJECT_DIR$/algorithms/quickSort.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test.py" afterPath="$PROJECT_DIR$/test.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test9.py" afterPath="$PROJECT_DIR$/test9.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/there are N nuts and N bolts, all unique pairs of Nuts and Bolts. You cant compare Nut with Nut and a Bolt with Bolt. Now ,how would you figure out matching pairs of nut and bolt from the given N Nuts and Bolts..py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/there are N nuts and N bolts, all unique pairs of Nuts and Bolts. You cant compare Nut with Nut and a Bolt with Bolt. Now ,how would you figure out matching pairs of nut and bolt from the given N Nuts and Bolts..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" />
    </list>
    <ignored path="code_training.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="code_training" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="Interviewer expected the list of system-calls made, file-descriptors involved etc..py" pinned="false" current="true" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Interviewer expected the list of system-calls made, file-descriptors involved etc..py">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="513">
              <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="true" />
    </FindUsagesManager>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/code_training_leet_code/Text Justification.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Valid Number.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Wildcard Matching.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/decimal representation of the rational number.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/flip Coin.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/strstr using recursion.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/random/randomInStream.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/有一堆黑格子和白格子，摆成一排，颜色相同的相邻的格子不能超过两个，问有多少种组合方法。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/stream of strings.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a set of busy time intervals of two people as in a calendar, find the free time intervals of both the people so as to arrange a new meeting.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given an array of object A, and an array of object B. All A's have different sizes, and all B's have different sizes. Any object A is of the.py" />
        <option value="$PROJECT_DIR$/algorithms/quickSort.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/there are N nuts and N bolts, all unique pairs of Nuts and Bolts. You cant compare Nut with Nut and a Bolt with Bolt. Now ,how would you figure out matching pairs of nut and bolt from the given N Nuts and Bolts..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Sets the rate, from 1 to 1000000 queries per second.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/left growing tree.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Longest Common Subsequence__increasing Subsequence_  substring.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a string (1-d array) , find if there is any sub-sequence that repeats itself. Here, sub-sequence can be a non-contiguous pattern, with the same relative order..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a program to implement Double Linked List from Stack with min. complexity..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Find the 90th percentile of a stream of numbers between 1 and 10^6.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You are given a string S. Each character of S is either ‘a’, or ‘b’..py" />
        <option value="$PROJECT_DIR$/test.py" />
        <option value="$PROJECT_DIR$/test9.py" />
        <option value="$PROJECT_DIR$/mianJing111111/rocket_Fuel/Given a number, can you remove k digits from the number so that the new formatted number is smallest possible..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a number M (N-digit integer) and K-swap operations(a swap operation can swap 2 digits), devise an algorithm to get the maximum possible integer?.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Extend. If you can remove three walls, then what is the shortest path from start to the target.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/at most eight servers in a data center. Each server has got a capacity memory limit. There can be at most 8 tasks that need to be scheduled on those servers. Each task requires certain capacity.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Find the longest words in a given list of words that can be constructed from a given list of letters..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Output top N positive integer in string comparison order. For example, let's say N=1000, then you need to output in string comparison order as below.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a NxN matrix which contains all distinct 1 to n^2 numbers, write code to print sequence of increasing adjacent sequential numbers.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Write an Efficient C Function to Convert a Binary Tree into its Mirror Tree.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Swap 2 nodes in a Binary tree.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Give efficient implementation of the following problem.  An item consist of different keys say k1, k2, k3.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/In an unsorted array of numbers that occurs an odd number of times except one that occurs an even number of times, find the number that occurs an even number of times.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Traveler wants to travel from city “A” to city “D”. There is a path from city “A” to city “D.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given an unsorted array of integers, you need to return maximum possible n such that the array consists at least n values greater than or equals to n. Array can contain duplicate values..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a Binary Search tree of integers, you need to return the number of nodes having values between two given integers. You can assume that you already have some extra information at each node.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You are given information about hotels in a country/city. X and Y coordinates of each hotel are known. You need to suggest the list of nearest hotels to a user who is querying from a particular point.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a complete binary tree, Find a Max element.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/ImplementLog2UsingSqrt.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Design a two player battleship game to be played over internet.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a string with multiple spaces write a function to in-place trim all spaces leaving a single space between words.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a string (for example: &quot;a?bc?def?g&quot;), write a program to generate all the possible strings by replacing ? with 0 and 1.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/given 10 files (text files) each of size of 900 Mb. givena another file named &quot;hello&quot;. match the contents of this file with other 10 file and return the.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Find the peakRAM when the input is a collection of LogEntry objects.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Determine minimum sequence of adjacent values in the input parameter array that is greater than input parameter sum___minimum sliding window_Smallest subarray with sum greater than a given value.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Interviewer expected the list of system-calls made, file-descriptors involved etc..py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="182" />
    <option name="y" value="31" />
    <option name="width" value="1069" />
    <option name="height" value="841" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>Buildout</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="2" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="rocket_Fuel" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="Google" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="Google" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="You are given information about hotels in a country" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../courseProjects" />
    <property name="options.lastSelected" value="editor.preferences.completion" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="options.searchVisible" value="true" />
    <property name="SearchEverywhereHistoryKey" value="sequence of adjacent values&#9;null&#9;null&#10;meeting&#9;null&#9;null&#10;reverse words&#9;null&#9;null&#10;reverse&#9;null&#9;null&#10;&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Reverse Words in a String.py&#10;reverse wor&#9;null&#9;null&#10;log2&#9;null&#9;null&#10;cycle&#9;null&#9;null&#10;mirror&#9;null&#9;null&#10;snake&#9;null&#9;null&#10;longest incres&#9;null&#9;null&#10;two sum&#9;null&#9;null&#10;first five 10 digit prime numbers.&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/prime/Write a method to return first five 10 digit prime numbers.py&#10;project&#9;null&#9;null&#10;trie&#9;null&#9;null&#10;positive nega&#9;null&#9;null&#10;merge&#9;null&#9;null&#10;longest &#9;null&#9;null&#10;coin&#9;null&#9;null&#10;hit&#9;null&#9;null&#10;nuts&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/there are N nuts and N bolts, all unique pairs of Nuts and Bolts. You cant compare Nut with Nut and a Bolt with Bolt. Now ,how would you figure out matching pairs of nut and bolt from the given N Nuts and Bolts..py&#10;quick&#9;null&#9;null&#10;Count number of binary strings without consecutive 1’s&#9;null&#9;null&#10;fibonacci&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/Fibonacci.py&#10;justi&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Text Justification.py&#10;decimal&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/decimal representation of the rational number.py&#10;concat&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Substring with Concatenation of All Words.py&#10;minimum&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Minimum Window Substring&#10;implement log&#9;null&#9;null&#10;mer sorted array&#9;null&#9;null&#10;wild&#9;null&#9;null&#10;valid number&#9;null&#9;null&#10;justifi&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Text Justification.py&#10;scramble&#9;null&#9;null&#10;window&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Minimum Window Substring&#10;anagram of string 1&#9;null&#9;null&#10;words   &#9;null&#9;null&#10;line&#9;null&#9;null&#10;anag&#9;null&#9;null&#10;evaluat&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Evaluate Reverse Polish Notation.py&#10;gas stat&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Gas Station.py&#10;single&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Single Number.py&#10;Max Points on a Line&#9;null&#9;null&#10;Add Two Numbers&#9;null&#9;null&#10;swap nodes&#9;null&#9;null&#10;pow(&#9;null&#9;null&#10;Rotate List&#9;null&#9;null&#10;sqrt&#9;null&#9;null&#10;sqrt(x&#9;null&#9;null&#10;simpl&#9;null&#9;null" />
    <property name="recentsLimit" value="5" />
    <property name="FullScreen" value="false" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings />
    </option>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <recent name="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <recent name="$PROJECT_DIR$/mianJing111111/facebook" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch" />
      <recent name="$PROJECT_DIR$/python" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/graph" />
      <recent name="$PROJECT_DIR$/mianJing111111/facebook" />
    </key>
  </component>
  <component name="RunManager" selected="Python.Find the peakRAM when the input is a collection of LogEntry objects">
    <configuration default="false" name="Given an unsorted array of integers, you need to return maximum possible n such that the array consists at least n values greater than or equals to n. Array can contain duplicate values." type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/Given an unsorted array of integers, you need to return maximum possible n such that the array consists at least n values greater than or equals to n. Array can contain duplicate values..py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="ImplementLog2UsingSqrt" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/facebook" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/facebook/ImplementLog2UsingSqrt.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Given a string with multiple spaces write a function to in-place trim all spaces leaving a single space between words" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/Given a string with multiple spaces write a function to in-place trim all spaces leaving a single space between words.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Given a string (for example: &quot;a?bc?def?g&quot;), write a program to generate all the possible strings by replacing ? with 0 and 1" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/Given a string (for example: &quot;a?bc?def?g&quot;), write a program to generate all the possible strings by replacing ? with 0 and 1.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Find the peakRAM when the input is a collection of LogEntry objects" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/Find the peakRAM when the input is a collection of LogEntry objects.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="testToRun" value="" />
      <option name="keywords" value="" />
      <option name="params" value="" />
      <option name="USE_PARAM" value="false" />
      <option name="USE_KEYWORD" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Nosetests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PUREUNITTEST" value="true" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Attests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="false" name="Sliding Window Maximum_Maximum element of all subarrays of size k" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Sliding Window Maximum_Maximum element of all subarrays of size k.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel/给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <list size="7">
      <item index="0" class="java.lang.String" itemvalue="Python.Sliding Window Maximum_Maximum element of all subarrays of size k" />
      <item index="1" class="java.lang.String" itemvalue="Python.给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" />
      <item index="2" class="java.lang.String" itemvalue="Python.Given an unsorted array of integers, you need to return maximum possible n such that the array consists at least n values greater than or equals to n. Array can contain duplicate values." />
      <item index="3" class="java.lang.String" itemvalue="Python.ImplementLog2UsingSqrt" />
      <item index="4" class="java.lang.String" itemvalue="Python.Given a string with multiple spaces write a function to in-place trim all spaces leaving a single space between words" />
      <item index="5" class="java.lang.String" itemvalue="Python.Given a string (for example: &quot;a?bc?def?g&quot;), write a program to generate all the possible strings by replacing ? with 0 and 1" />
      <item index="6" class="java.lang.String" itemvalue="Python.Find the peakRAM when the input is a collection of LogEntry objects" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="Python.Find the peakRAM when the input is a collection of LogEntry objects" />
        <item index="1" class="java.lang.String" itemvalue="Python.Given a string (for example: &quot;a?bc?def?g&quot;), write a program to generate all the possible strings by replacing ? with 0 and 1" />
        <item index="2" class="java.lang.String" itemvalue="Python.Given a string with multiple spaces write a function to in-place trim all spaces leaving a single space between words" />
        <item index="3" class="java.lang.String" itemvalue="Python.ImplementLog2UsingSqrt" />
        <item index="4" class="java.lang.String" itemvalue="Python.Given an unsorted array of integers, you need to return maximum possible n such that the array consists at least n values greater than or equals to n. Array can contain duplicate values." />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="" />
      <created>1416632866407</created>
      <updated>1416632866407</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="182" y="31" width="1069" height="841" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32444444" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.1860687" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.2537931" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
    </layout>
    <layout-to-restore>
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32689655" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="8" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.17663044" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.2557143" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="myTodoPanelSettings">
      <TodoPanelSettings />
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="5" />
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/有一个gym，用block表示。里面有健身器材，还有障碍物。让找一个最佳的位 置放置椅子，使得椅子到所有健身器材的曼哈顿距离最短.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="519">
          <caret line="0" column="8" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/algorithms/quickSort.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.7398721" vertical-offset="432" max-vertical-offset="901">
          <caret line="5" column="0" selection-start-line="5" selection-start-column="0" selection-end-line="11" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/there are N nuts and N bolts, all unique pairs of Nuts and Bolts. You cant compare Nut with Nut and a Bolt with Bolt. Now ,how would you figure out matching pairs of nut and bolt from the given N Nuts and Bolts..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="2.4515367" vertical-offset="0" max-vertical-offset="1666">
          <caret line="59" column="16" selection-start-line="59" selection-start-column="16" selection-end-line="59" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Sets the rate, from 1 to 1000000 queries per second.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.3429673" vertical-offset="0" max-vertical-offset="850">
          <caret line="41" column="57" selection-start-line="41" selection-start-column="57" selection-end-line="41" selection-end-column="57" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.55684006" vertical-offset="527" max-vertical-offset="2771">
          <caret line="51" column="0" selection-start-line="51" selection-start-column="0" selection-end-line="60" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/There are n coins in a line. (Assume n is even). Two players take turns to take a coin from one of the ends of the line until there are no more coins left. The player with the larger amount of money wins.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-1.0564516" vertical-offset="745" max-vertical-offset="1241">
          <caret line="11" column="162" selection-start-line="11" selection-start-column="162" selection-end-line="11" selection-end-column="162" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/有一堆黑格子和白格子，摆成一排，颜色相同的相邻的格子不能超过两个，问有多少种组合方法。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-1.0635839" vertical-offset="705" max-vertical-offset="1224">
          <caret line="9" column="30" selection-start-line="9" selection-start-column="30" selection-end-line="9" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/left growing tree.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.8362235" vertical-offset="212" max-vertical-offset="748">
          <caret line="38" column="24" selection-start-line="38" selection-start-column="24" selection-end-line="38" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a string (1-d array) , find if there is any sub-sequence that repeats itself. Here, sub-sequence can be a non-contiguous pattern, with the same relative order..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.9129511" vertical-offset="0" max-vertical-offset="1003">
          <caret line="52" column="18" selection-start-line="52" selection-start-column="18" selection-end-line="52" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Longest Common Subsequence__increasing Subsequence_  substring.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="340" max-vertical-offset="2516">
          <caret line="31" column="0" selection-start-line="31" selection-start-column="0" selection-end-line="41" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write a program to implement Double Linked List from Stack with min. complexity..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7591093" vertical-offset="254" max-vertical-offset="748">
          <caret line="37" column="24" selection-start-line="37" selection-start-column="24" selection-end-line="37" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Find the 90th percentile of a stream of numbers between 1 and 10^6.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.4473684" vertical-offset="0" max-vertical-offset="494">
          <caret line="12" column="38" selection-start-line="12" selection-start-column="38" selection-end-line="12" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1003">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/rocket_Fuel/Given a number, can you remove k digits from the number so that the new formatted number is smallest possible..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="476" max-vertical-offset="969">
          <caret line="50" column="0" selection-start-line="50" selection-start-column="0" selection-end-line="50" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a number M (N-digit integer) and K-swap operations(a swap operation can swap 2 digits), devise an algorithm to get the maximum possible integer?.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.0467092" vertical-offset="289" max-vertical-offset="2890">
          <caret line="46" column="3" selection-start-line="46" selection-start-column="3" selection-end-line="46" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test9.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="628" max-vertical-offset="1122">
          <caret line="60" column="35" selection-start-line="60" selection-start-column="35" selection-end-line="60" selection-end-column="35" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="986">
          <caret line="8" column="15" selection-start-line="8" selection-start-column="15" selection-end-line="8" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Extend. If you can remove three walls, then what is the shortest path from start to the target.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="289">
          <caret line="9" column="95" selection-start-line="9" selection-start-column="95" selection-end-line="9" selection-end-column="95" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Rearrange array in alternating positive &amp; negative items with O(1) extra space.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="340" max-vertical-offset="1802">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/at most eight servers in a data center. Each server has got a capacity memory limit. There can be at most 8 tasks that need to be scheduled on those servers. Each task requires certain capacity.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.08742" vertical-offset="0" max-vertical-offset="816">
          <caret line="27" column="55" selection-start-line="27" selection-start-column="55" selection-end-line="27" selection-end-column="55" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Find the longest words in a given list of words that can be constructed from a given list of letters..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.9268293" vertical-offset="136" max-vertical-offset="884">
          <caret line="44" column="19" selection-start-line="44" selection-start-column="19" selection-end-line="44" selection-end-column="19" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/trie/Trie_implement.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.036437247" vertical-offset="254" max-vertical-offset="1513">
          <caret line="16" column="30" selection-start-line="16" selection-start-column="30" selection-end-line="16" selection-end-column="30" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7591093" vertical-offset="2498" max-vertical-offset="2992">
          <caret line="159" column="24" selection-start-line="159" selection-start-column="24" selection-end-line="159" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/prime/Write a method to return first five 10 digit prime numbers.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1122">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Output top N positive integer in string comparison order. For example, let's say N=1000, then you need to output in string comparison order as below.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.73570323" vertical-offset="0" max-vertical-offset="647">
          <caret line="27" column="36" selection-start-line="27" selection-start-column="36" selection-end-line="27" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Two Sum.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.15544872" vertical-offset="73" max-vertical-offset="697">
          <caret line="9" column="26" selection-start-line="9" selection-start-column="26" selection-end-line="9" selection-end-column="26" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/You are given a grid of numbers. A snake sequence is made up of adjacent numbers such that for each number.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="629">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/find longest increasing sub sequence in 2d array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.07311828" vertical-offset="0" max-vertical-offset="476">
          <caret line="2" column="0" selection-start-line="2" selection-start-column="0" selection-end-line="2" selection-end-column="49" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a NxN matrix which contains all distinct 1 to n^2 numbers, write code to print sequence of increasing adjacent sequential numbers.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.8606557" vertical-offset="277" max-vertical-offset="799">
          <caret line="40" column="12" selection-start-line="40" selection-start-column="12" selection-end-line="40" selection-end-column="12" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Write an Efficient C Function to Convert a Binary Tree into its Mirror Tree.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.55737704" vertical-offset="0" max-vertical-offset="527">
          <caret line="16" column="0" selection-start-line="16" selection-start-column="0" selection-end-line="16" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Swap 2 nodes in a Binary tree.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.4282787" vertical-offset="0" max-vertical-offset="799">
          <caret line="41" column="27" selection-start-line="41" selection-start-column="27" selection-end-line="41" selection-end-column="27" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Give efficient implementation of the following problem.  An item consist of different keys say k1, k2, k3.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="2.1935484" vertical-offset="0" max-vertical-offset="1139">
          <caret line="54" column="46" selection-start-line="54" selection-start-column="46" selection-end-line="54" selection-end-column="46" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/In an unsorted array of numbers that occurs an odd number of times except one that occurs an even number of times, find the number that occurs an even number of times.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.51403886" vertical-offset="0" max-vertical-offset="510">
          <caret line="13" column="23" selection-start-line="13" selection-start-column="23" selection-end-line="13" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Traveler wants to travel from city “A” to city “D”. There is a path from city “A” to city “D.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.26565874" vertical-offset="404" max-vertical-offset="1037">
          <caret line="31" column="40" selection-start-line="31" selection-start-column="40" selection-end-line="31" selection-end-column="40" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/graph/Detect Cycle in a Directed Graph.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.07343412" vertical-offset="272" max-vertical-offset="1326">
          <caret line="18" column="31" selection-start-line="18" selection-start-column="31" selection-end-line="18" selection-end-column="31" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given an unsorted array of integers, you need to return maximum possible n such that the array consists at least n values greater than or equals to n. Array can contain duplicate values..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="493">
          <caret line="9" column="60" selection-start-line="9" selection-start-column="60" selection-end-line="9" selection-end-column="60" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a Binary Search tree of integers, you need to return the number of nodes having values between two given integers. You can assume that you already have some extra information at each node.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="234" max-vertical-offset="731">
          <caret line="13" column="0" selection-start-line="13" selection-start-column="0" selection-end-line="13" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You are given information about hotels in a country/city. X and Y coordinates of each hotel are known. You need to suggest the list of nearest hotels to a user who is querying from a particular point.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.22030237" vertical-offset="0" max-vertical-offset="463">
          <caret line="4" column="1" selection-start-line="4" selection-start-column="1" selection-end-line="4" selection-end-column="1" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/ImplementLog2UsingSqrt.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.4639376" vertical-offset="0" max-vertical-offset="629">
          <caret line="14" column="46" selection-start-line="14" selection-start-column="46" selection-end-line="14" selection-end-column="46" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Design a two player battleship game to be played over internet.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="170">
          <caret line="4" column="3" selection-start-line="4" selection-start-column="3" selection-end-line="4" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Reverse Linked List II.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="714">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/new_leetcode_new/Reverse Words in a String II.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.795082" vertical-offset="870" max-vertical-offset="1360">
          <caret line="69" column="24" selection-start-line="43" selection-start-column="0" selection-end-line="69" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a string with multiple spaces write a function to in-place trim all spaces leaving a single space between words.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.32903227" vertical-offset="0" max-vertical-offset="465">
          <caret line="9" column="22" selection-start-line="9" selection-start-column="22" selection-end-line="9" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a string (for example: &quot;a?bc?def?g&quot;), write a program to generate all the possible strings by replacing ? with 0 and 1.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.34615386" vertical-offset="68" max-vertical-offset="510">
          <caret line="13" column="23" selection-start-line="13" selection-start-column="23" selection-end-line="13" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Reverse Words in a String.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.045082" vertical-offset="0" max-vertical-offset="969">
          <caret line="30" column="0" selection-start-line="30" selection-start-column="0" selection-end-line="48" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.42307693" vertical-offset="612" max-vertical-offset="1139">
          <caret line="44" column="0" selection-start-line="44" selection-start-column="0" selection-end-line="44" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/given 10 files (text files) each of size of 900 Mb. givena another file named &quot;hello&quot;. match the contents of this file with other 10 file and return the.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.43870968" vertical-offset="0" max-vertical-offset="465">
          <caret line="11" column="33" selection-start-line="11" selection-start-column="33" selection-end-line="11" selection-end-column="33" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Find the peakRAM when the input is a collection of LogEntry objects.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5836735" vertical-offset="360" max-vertical-offset="850">
          <caret line="37" column="22" selection-start-line="37" selection-start-column="22" selection-end-line="37" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/Given an array of meetings, find out the minimum number of conference rooms requiredGiven n intervals  , find the maximum number of overlapping intervals.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="850" max-vertical-offset="2856">
          <caret line="53" column="0" selection-start-line="53" selection-start-column="0" selection-end-line="53" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Determine minimum sequence of adjacent values in the input parameter array that is greater than input parameter sum___minimum sliding window_Smallest subarray with sum greater than a given value.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="619" max-vertical-offset="1479">
          <caret line="46" column="20" selection-start-line="46" selection-start-column="20" selection-end-line="46" selection-end-column="20" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Interviewer expected the list of system-calls made, file-descriptors involved etc..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="467">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>


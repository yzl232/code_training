<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/1000 elements in one bag and 1 million elements in another. how do you find common elements among them. Also give the complexity of your solution..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Complete the below function which takes an arraylist and displays the list in the expected output.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Consider a hash table with M slots. Suppose hash value is uniformly distributed between 1 to M, and it uses linked list to handle conflicts.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Diameter of a Binary Tree.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Explain a load balancer data structure and algorithm..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Find if 2 lists of rectangle are exactly equal. How would you sort the lists?.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Give you an array which has n integers,it has both positive and negative integers.Now you need sort this array in a special way.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given N strings, find the smallest string in lexicographic order which contains all the given strings as subsequences.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a sorted 2D N x N array (where array[i][j] &lt; array[i][j+1] and array[i][j] &lt; array[i+1][j]), can you write a function that converts this to a sorted 1D array.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an array of pairs of the form &lt;a, b&gt;. We have to find a sub-array such that the 1st element in the pairs are in increasing order and the sum of 2nd element of the pairs in the sub-array is maximum possible.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given two aligned sequences `a` and `b`. Write a function &quot;findCommon&quot;, that finds the longest substring of the longer sequence that align to the smaller sequence in such a way that.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/How does a search engine perform exact phrase search? i.e. search for the term &quot;the bees knees&quot; exactly..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/How to find if a number is power of 4 in O(loglogn)..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement Array Class in java..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement a Boolean vector: T, F, F, T, F, … with the following operations.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/In what situations bubble sort, selection sort, insertion sort, merge sort, quick sort and heap sort will have best time complexity. Provide example for each sort and explain.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Input - array of integers size N, integer Threshold. Output - the number of pairs (x, y) of distinct elements with condition x + y &lt;= Threshold. Is that possible to implement it with O(n).py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Suppose I have some (lng, lat) coordinate. I also have a big list of ranges.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Suppose the sub-requests can be queued at each server, and the servers are running all the time. Discuss feasible on-line algorithms that can achieve sub-optimal solutions with N ~ 10000.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Search.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write a class DominoChecker that has a method called addBox(int[]) that takes a box of five dominoes, described as a list of 10 integers (explained after), adds it to a collection,.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write a method to determine if two strings are anagrams of each other.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/You have been given a series of 'n' numbers and the series is in a random order. Write a program to find the median of the series with minimum complexity..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/You have two arrays src, tgt, containing two permutations of the numbers 0..n-1.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/You have two integer arrays. Treat these arrays as if they were big numbers, with one digit in each slot. Perform addition on these two arrays and store the results in a new array.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/You visited a list of places recently, but you do not remember the order in which you visited them.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/individual numbers which could be permuted in 4 factorial ways. permutation of these 4 integers is an 0indexedarray consisting of 4 digits in some order when integers are different..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/modify the file to have a max of 80 characters per line and create a new perl file.py" />
      <change type="MOVED" beforePath="$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project__topological sort.py" />
      <change type="MOVED" beforePath="$PROJECT_DIR$/mianJing111111/Hash_table_Design and implement a hash table which uses chaining (linked lists) to handle collisions.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Hash_table_Design and implement a hash table which uses chaining (linked lists) to handle collisions.py" />
      <change type="MOVED" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n____square_sum.py" />
      <change type="MOVED" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/string/Given a sorted dictionary of an alien language, find order of characters.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/string/Given a sorted dictionary of an alien language, find order of characters_topological_sort.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Add Binary.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Add Binary.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Add Two Numbers .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Add Two Numbers .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Anagrams.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Anagrams.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Balanced Binary Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Balanced Binary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Maximum Path Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Maximum Path Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Postorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Postorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Preorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Preorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Climbing Stairs.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Climbing Stairs.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combination Sum II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combination Sum II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combination Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combination Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combinations.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combinations.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Inorder and Postorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Inorder and Postorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Preorder and Inorder Traversal .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Preorder and Inorder Traversal .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Count the number of possible triangles.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Count the number of possible triangles.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Divide Two Integers.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Divide Two Integers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Evaluate Reverse Polish Notation.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Evaluate Reverse Polish Notation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Generate Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Generate Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Implement strStr().py" afterPath="$PROJECT_DIR$/code_training_leet_code/Implement strStr().py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Insertion Sort List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Insertion Sort List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Integer to Roman.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Integer to Roman.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/LRU Cache.py" afterPath="$PROJECT_DIR$/code_training_leet_code/LRU Cache.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Length of Last Word.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Length of Last Word.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Common Prefix&#10;Longest Common Prefix.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Common Prefix&#10;Longest Common Prefix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Valid Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Valid Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Max Points on a Line.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Max Points on a Line.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximum Product Subarray.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximum Product Subarray.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Depth of Binary Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Depth of Binary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Multiply Strings.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Multiply Strings.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/N-Queens II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/N-Queens II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/N-Queens.py" afterPath="$PROJECT_DIR$/code_training_leet_code/N-Queens.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Next Permutation.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Next Permutation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Partition List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Partition List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Path Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Path Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutations II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutations II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutations.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutations.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Plus One.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Plus One.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" afterPath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Recover Binary Search Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Recover Binary Search Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List&#10;Remove Duplicates from Sorted List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List&#10;Remove Duplicates from Sorted List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reorder List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reorder List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Restore IP Addresses&#10;Restore IP Addresses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Restore IP Addresses&#10;Restore IP Addresses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reverse Integer.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reverse Integer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reverse Linked List II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reverse Linked List II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Roman to Integer.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Roman to Integer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Rotate List .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Rotate List .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Scramble String.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Scramble String.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Search a 2D Matrix.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Search a 2D Matrix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Simplify Path.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Simplify Path.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Single Number II .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Single Number II .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Single Number.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Single Number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sort Colors.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sort Colors.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sqrt(x).py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sqrt(x).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/String to Integer (atoi).py" afterPath="$PROJECT_DIR$/code_training_leet_code/String to Integer (atoi).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Subsets II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Subsets II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sudoku Solver.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sudoku Solver.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sum Root to Leaf Numbers.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sum Root to Leaf Numbers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Surrounded Regions .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Surrounded Regions .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Swap Nodes in Pairs .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Swap Nodes in Pairs .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Symmetric Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Symmetric Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Text Justification.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Text Justification.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Number.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Sudoku.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Sudoku.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Validate Binary Search Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Validate Binary Search Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Wildcard Matching.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Wildcard Matching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Break.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Break.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Ladder ii.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Ladder ii.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Ladder.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Ladder.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/ZigZag Conversion.py" afterPath="$PROJECT_DIR$/code_training_leet_code/ZigZag Conversion.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/min stack.py" afterPath="$PROJECT_DIR$/code_training_leet_code/min stack.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/powerOf3.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/powerOf3.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test.py" afterPath="$PROJECT_DIR$/test.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
    </list>
    <ignored path="code_training.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="code_training" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="Consider a hash table with M slots. Suppose hash value is uniformly distributed between 1 to M, and it uses linked list to handle conflicts.py" pinned="false" current="true" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Consider a hash table with M slots. Suppose hash value is uniformly distributed between 1 to M, and it uses linked list to handle conflicts.py">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.22972973" vertical-offset="0" max-vertical-offset="518">
              <caret line="5" column="8" selection-start-line="5" selection-start-column="8" selection-end-line="5" selection-end-column="8" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="true" />
    </FindUsagesManager>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/mianJing111111/Google/Suppose you have N machines connected to a network. Now you generate a new file on one machine, and want to sync up across all machines. please design a system to accomplish this task and also analyze the error tolerance issue..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given two log files, each with a billion usernames (each username appended to the log file), find the usernames existing in both documents?.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/design a system to return an unique ID for each request. For most of requests, the ID value should increase as time goes, the system should handle 1000 requests per second at least..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Design Short URL..py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given the array of digits (0 is also allowed), what is the minimal sum of two integers that are made of the digits contained in the array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given the array of digits (0 is also allowed), what is the minimal sum of two integers that are made of the digits.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Design a component that will implement web browser history. the user goes to different site and once he press on history button you should display the last 5.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/given a dictionary of wrods,find the pair of word with following property: 1,the two word don't have same letter. 2,the multiple of the two word's length is maximum..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given two aligned sequences `a` and `b`. Write a function &quot;findCommon&quot;, that finds the longest substring of the longer sequence that align to the smaller sequence in such a way that.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given an array of pairs of the form &lt;a, b&gt;. We have to find a sub-array such that the 1st element in the pairs are in increasing order and the sum of 2nd element of the pairs in the sub-array is maximum possible.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given N strings, find the smallest string in lexicographic order which contains all the given strings as subsequences.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Implement Array Class in java..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Suppose I have some (lng, lat) coordinate. I also have a big list of ranges.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/string/Given a sorted dictionary of an alien language, find order of characters.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project__topological sort.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You visited a list of places recently, but you do not remember the order in which you visited them.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/individual numbers which could be permuted in 4 factorial ways. permutation of these 4 integers is an 0indexedarray consisting of 4 digits in some order when integers are different..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You have two integer arrays. Treat these arrays as if they were big numbers, with one digit in each slot. Perform addition on these two arrays and store the results in a new array.py" />
        <option value="$PROJECT_DIR$/test.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/In a language, there are only 4 characters ‘h’, ‘i’,’r’, ‘e’. and we have to write a function which takes a string as input and returns whether the given input string is a “valid word” or not.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Suppose the sub-requests can be queued at each server, and the servers are running all the time. Discuss feasible on-line algorithms that can achieve sub-optimal solutions with N ~ 10000.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/powerOf3.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/How to find if a number is power of 4 in O(loglogn)..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Find if 2 lists of rectangle are exactly equal. How would you sort the lists?.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a sorted 2D N x N array (where array[i][j] &lt; array[i][j+1] and array[i][j] &lt; array[i+1][j]), can you write a function that converts this to a sorted 1D array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Complete the below function which takes an arraylist and displays the list in the expected output.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You have been given a series of 'n' numbers and the series is in a random order. Write a program to find the median of the series with minimum complexity..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Input - array of integers size N, integer Threshold. Output - the number of pairs (x, y) of distinct elements with condition x + y &lt;= Threshold. Is that possible to implement it with O(n) ?.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Count the number of possible triangles.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n____square_sum.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Input - array of integers size N, integer Threshold. Output - the number of pairs (x, y) of distinct elements with condition x + y &lt;= Threshold. Is that possible to implement it with O(n).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/In what situations bubble sort, selection sort, insertion sort, merge sort, quick sort and heap sort will have best time complexity. Provide example for each sort and explain.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/1000 elements in one bag and 1 million elements in another. how do you find common elements among them. Also give the complexity of your solution..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a class DominoChecker that has a method called addBox(int[]) that takes a box of five dominoes, described as a list of 10 integers (explained after), adds it to a collection,.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Input : A Perl program file We need to modify the file to have a max of 80 characters per line and create a new perl file. Problem is we need to use &quot;/&quot; wherever we split the line and also, the split MUST happen at a place with white space. (ASSUMPTION - No is &gt;75 characters).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Explain a load balancer data structure and algorithm..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Implement a Boolean vector: T, F, F, T, F, … with the following operations.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/modify the file to have a max of 80 characters per line and create a new perl file.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/How does a search engine perform exact phrase search? i.e. search for the term &quot;the bees knees&quot; exactly..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/There are n bombs in a big circle,and each bomb has a value and a 'effect range'.If you detonated a bomb,you will get this bomb's value,but a bomb can have effect on the neighbors which the distance(difference between index).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Give you an array which has n integers,it has both positive and negative integers.Now you need sort this array in a special way.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Diameter of a Binary Tree.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a method to determine if two strings are anagrams of each other.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You have two arrays src, tgt, containing two permutations of the numbers 0..n-1.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Consider a hash table with M slots. Suppose hash value is uniformly distributed between 1 to M, and it uses linked list to handle conflicts.py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="298" />
    <option name="y" value="23" />
    <option name="width" value="1015" />
    <option name="height" value="841" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>Buildout</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="2" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="Google" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../courseProjects" />
    <property name="options.lastSelected" value="editor.preferences.completion" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="options.searchVisible" value="true" />
    <property name="SearchEverywhereHistoryKey" value="merge &#9;null&#9;null&#10;Write code to give the character sequence given a word,&#9;null&#9;null&#10;top box&#9;null&#9;null&#10;&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/dp/Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n____square_sum.py&#10;Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality&#9;null&#9;null&#10;Count the number of possible triangles&#9;null&#9;null&#10;number of square&#9;null&#9;null&#10;pairs&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/count_distinct_pairs_k.py&#10;pair &#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/Count all distinct pairs with difference equal to k.py&#10;tree array&#9;null&#9;null&#10;size tree&#9;null&#9;null&#10;power&#9;null&#9;null&#10;tree  swap&#9;null&#9;null&#10;directed&#9;null&#9;null&#10;graph&#9;null&#9;null&#10;dictionary&#9;null&#9;null&#10;project&#9;null&#9;null&#10;hashtable&#9;null&#9;null&#10;snake&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py&#10;merge&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py&#10;longest com&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/dp/Printing Longest Common Subsequence.py&#10;longest comm&#9;null&#9;null&#10;merge  array&#9;null&#9;null&#10;first non &#9;null&#9;null&#10;first non r&#9;null&#9;null&#10;first re&#9;null&#9;null&#10;short&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Design Short URL..py&#10;gcd&#9;null&#9;null&#10;thread&#9;null&#9;null&#10;dict&#9;null&#9;null&#10;major&#9;null&#9;null&#10;majori&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/binarySearch/Check for Majority Element in a sorted array.py&#10;anagram&#9;null&#9;null&#10;url&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Design Short URL..py&#10;set bit&#9;null&#9;null&#10;partition&#9;null&#9;null&#10;iterat&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py&#10;single number&#9;null&#9;null&#10;flatten&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py&#10;deepest&#9;null&#9;null&#10;kth bst&#9;null&#9;null&#10;wall&#9;null&#9;null&#10;ugly&#9;null&#9;null&#10;interval&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Given a set of intervals, find the interval which has the maximum number of intersections.py&#10;equil&#9;null&#9;null&#10;intersect&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/几何多边形polygonConvex/How to check if two given line segments intersect__Vector__slope.py&#10;hit&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/called times function hits gethits.py&#10;timer&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Given a timer time() with nanosecond accuracy and given the interface.py&#10;clust&#9;null&#9;null&#10;merge k sor&#9;null&#9;null" />
    <property name="recentsLimit" value="5" />
    <property name="FullScreen" value="false" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings />
    </option>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <recent name="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <recent name="$PROJECT_DIR$/mianJing111111/facebook" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/Google" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch" />
      <recent name="$PROJECT_DIR$/python" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/graph" />
    </key>
  </component>
  <component name="RunManager" selected="Python.You have two arrays src, tgt, containing two permutations of the numbers 0..n-1">
    <configuration default="false" name="In a language, there are only 4 characters ‘h’, ‘i’,’r’, ‘e’. and we have to write a function which takes a string as input and returns whether the given input string is a “valid word” or not" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/In a language, there are only 4 characters ‘h’, ‘i’,’r’, ‘e’. and we have to write a function which takes a string as input and returns whether the given input string is a “valid word” or not.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="test" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/test.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Find Height of Binary Tree represented by Parent array" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Find Height of Binary Tree represented by Parent array.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Count the number of possible triangles" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Count the number of possible triangles.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="You have two arrays src, tgt, containing two permutations of the numbers 0..n-1" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/You have two arrays src, tgt, containing two permutations of the numbers 0..n-1.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="testToRun" value="" />
      <option name="keywords" value="" />
      <option name="params" value="" />
      <option name="USE_PARAM" value="false" />
      <option name="USE_KEYWORD" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Nosetests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PUREUNITTEST" value="true" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Attests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="false" name="Sliding Window Maximum_Maximum element of all subarrays of size k" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Sliding Window Maximum_Maximum element of all subarrays of size k.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PyDebugRunner" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PyDebugRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel/给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <list size="7">
      <item index="0" class="java.lang.String" itemvalue="Python.Sliding Window Maximum_Maximum element of all subarrays of size k" />
      <item index="1" class="java.lang.String" itemvalue="Python.给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" />
      <item index="2" class="java.lang.String" itemvalue="Python.In a language, there are only 4 characters ‘h’, ‘i’,’r’, ‘e’. and we have to write a function which takes a string as input and returns whether the given input string is a “valid word” or not" />
      <item index="3" class="java.lang.String" itemvalue="Python.test" />
      <item index="4" class="java.lang.String" itemvalue="Python.Find Height of Binary Tree represented by Parent array" />
      <item index="5" class="java.lang.String" itemvalue="Python.Count the number of possible triangles" />
      <item index="6" class="java.lang.String" itemvalue="Python.You have two arrays src, tgt, containing two permutations of the numbers 0..n-1" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="Python.You have two arrays src, tgt, containing two permutations of the numbers 0..n-1" />
        <item index="1" class="java.lang.String" itemvalue="Python.Count the number of possible triangles" />
        <item index="2" class="java.lang.String" itemvalue="Python.Find Height of Binary Tree represented by Parent array" />
        <item index="3" class="java.lang.String" itemvalue="Python.In a language, there are only 4 characters ‘h’, ‘i’,’r’, ‘e’. and we have to write a function which takes a string as input and returns whether the given input string is a “valid word” or not" />
        <item index="4" class="java.lang.String" itemvalue="Python.test" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="" />
      <created>1416632866407</created>
      <updated>1416632866407</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="298" y="23" width="1015" height="841" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.24932249" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.19617707" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.39716312" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.22" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32413793" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
    </layout>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="myTodoPanelSettings">
      <TodoPanelSettings />
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="5" />
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given two aligned sequences `a` and `b`. Write a function &quot;findCommon&quot;, that finds the longest substring of the longer sequence that align to the smaller sequence in such a way that.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.4212766" vertical-offset="822" max-vertical-offset="1292">
          <caret line="53" column="50" selection-start-line="53" selection-start-column="50" selection-end-line="53" selection-end-column="50" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given an array of pairs of the form &lt;a, b&gt;. We have to find a sub-array such that the 1st element in the pairs are in increasing order and the sum of 2nd element of the pairs in the sub-array is maximum possible.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.55172414" vertical-offset="85" max-vertical-offset="578">
          <caret line="19" column="32" selection-start-line="19" selection-start-column="32" selection-end-line="19" selection-end-column="32" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write a function that takes 2 strings , search returns true if any anagram of string1(needle) is present in string2(haystack).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.90425533" vertical-offset="782" max-vertical-offset="1904">
          <caret line="20" column="75" selection-start-line="20" selection-start-column="75" selection-end-line="20" selection-end-column="75" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5704698" vertical-offset="0" max-vertical-offset="447">
          <caret line="13" column="3" selection-start-line="13" selection-start-column="3" selection-end-line="13" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.31346154" vertical-offset="976" max-vertical-offset="2023">
          <caret line="65" column="0" selection-start-line="65" selection-start-column="0" selection-end-line="75" selection-end-column="40" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given N strings, find the smallest string in lexicographic order which contains all the given strings as subsequences.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="179" max-vertical-offset="697">
          <caret line="33" column="51" selection-start-line="33" selection-start-column="51" selection-end-line="33" selection-end-column="51" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Hash_table_Design and implement a hash table which uses chaining (linked lists) to handle collisions.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="117" max-vertical-offset="1479">
          <caret line="15" column="4" selection-start-line="15" selection-start-column="4" selection-end-line="15" selection-end-column="4" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Implement Array Class in java..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="272">
          <caret line="6" column="363" selection-start-line="6" selection-start-column="363" selection-end-line="6" selection-end-column="363" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Suppose I have some (lng, lat) coordinate. I also have a big list of ranges.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="323">
          <caret line="5" column="0" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/string/Given a sorted dictionary of an alien language, find order of characters_topological_sort.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1819">
          <caret line="54" column="0" selection-start-line="54" selection-start-column="0" selection-end-line="54" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/graph/Detect Cycle in a Directed Graph.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="255" max-vertical-offset="1326">
          <caret line="17" column="0" selection-start-line="17" selection-start-column="0" selection-end-line="40" selection-end-column="52" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/graph/clone a directed graph.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="170">
          <caret line="4" column="0" selection-start-line="4" selection-start-column="0" selection-end-line="4" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You visited a list of places recently, but you do not remember the order in which you visited them.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.44423077" vertical-offset="109" max-vertical-offset="629">
          <caret line="20" column="18" selection-start-line="20" selection-start-column="18" selection-end-line="20" selection-end-column="18" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/determine the build order ie. which project needs to be build first, followed by which project__topological sort.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.08103131" vertical-offset="1639" max-vertical-offset="3060">
          <caret line="90" column="1" selection-start-line="90" selection-start-column="1" selection-end-line="90" selection-end-column="1" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given two Binary trees. these trees &quot;may&quot; have right and left branches swapped. Now compare it..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.15653776" vertical-offset="0" max-vertical-offset="543">
          <caret line="5" column="36" selection-start-line="5" selection-start-column="36" selection-end-line="5" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.53222835" vertical-offset="0" max-vertical-offset="544">
          <caret line="17" column="43" selection-start-line="17" selection-start-column="43" selection-end-line="17" selection-end-column="43" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/individual numbers which could be permuted in 4 factorial ways. permutation of these 4 integers is an 0indexedarray consisting of 4 digits in some order when integers are different..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="188" max-vertical-offset="799">
          <caret line="25" column="28" selection-start-line="25" selection-start-column="28" selection-end-line="25" selection-end-column="28" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You have two integer arrays. Treat these arrays as if they were big numbers, with one digit in each slot. Perform addition on these two arrays and store the results in a new array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.82758623" vertical-offset="0" max-vertical-offset="527">
          <caret line="23" column="34" selection-start-line="23" selection-start-column="34" selection-end-line="23" selection-end-column="34" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5884615" vertical-offset="0" max-vertical-offset="1292">
          <caret line="16" column="23" selection-start-line="16" selection-start-column="23" selection-end-line="16" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Suppose the sub-requests can be queued at each server, and the servers are running all the time. Discuss feasible on-line algorithms that can achieve sub-optimal solutions with N ~ 10000.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.55172414" vertical-offset="0" max-vertical-offset="493">
          <caret line="15" column="0" selection-start-line="15" selection-start-column="0" selection-end-line="15" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/powerOf3.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.9310345" vertical-offset="238" max-vertical-offset="816">
          <caret line="38" column="14" selection-start-line="38" selection-start-column="14" selection-end-line="38" selection-end-column="14" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/How to find if a number is power of 4 in O(loglogn)..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="374">
          <caret line="16" column="14" selection-start-line="16" selection-start-column="14" selection-end-line="16" selection-end-column="14" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Find if 2 lists of rectangle are exactly equal. How would you sort the lists?.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.27586207" vertical-offset="0" max-vertical-offset="493">
          <caret line="8" column="3" selection-start-line="8" selection-start-column="3" selection-end-line="8" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a sorted 2D N x N array (where array[i][j] &lt; array[i][j+1] and array[i][j] &lt; array[i+1][j]), can you write a function that converts this to a sorted 1D array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.3448276" vertical-offset="0" max-vertical-offset="493">
          <caret line="8" column="8" selection-start-line="8" selection-start-column="8" selection-end-line="8" selection-end-column="8" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Find Height of Binary Tree represented by Parent array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1717">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Calculate Size of a tree.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="493">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/count_distinct_pairs_k.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="663">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Count all distinct pairs with difference equal to k.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="497">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Complete the below function which takes an arraylist and displays the list in the expected output.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.39637828" vertical-offset="670" max-vertical-offset="1190">
          <caret line="51" column="48" selection-start-line="51" selection-start-column="48" selection-end-line="51" selection-end-column="48" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You have been given a series of 'n' numbers and the series is in a random order. Write a program to find the median of the series with minimum complexity..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.062615104" vertical-offset="0" max-vertical-offset="543">
          <caret line="2" column="73" selection-start-line="2" selection-start-column="67" selection-end-line="2" selection-end-column="73" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/Let's say there is a double square number X, which can be expressed as the sum of two perfect squares, for example, 10 is double square because.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="510">
          <caret line="8" column="0" selection-start-line="8" selection-start-column="0" selection-end-line="8" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Count the number of possible triangles.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="918">
          <caret line="26" column="31" selection-start-line="26" selection-start-column="31" selection-end-line="26" selection-end-column="31" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Count Distinct Non-Negative Integer Pairs (x, y) that Satisfy the Inequality x*x + y*y &lt; n____square_sum.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1003">
          <caret line="27" column="10" selection-start-line="27" selection-start-column="10" selection-end-line="27" selection-end-column="10" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/In what situations bubble sort, selection sort, insertion sort, merge sort, quick sort and heap sort will have best time complexity. Provide example for each sort and explain.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="103" max-vertical-offset="731">
          <caret line="8" column="188" selection-start-line="8" selection-start-column="188" selection-end-line="8" selection-end-column="188" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/1000 elements in one bag and 1 million elements in another. how do you find common elements among them. Also give the complexity of your solution..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="408">
          <caret line="7" column="0" selection-start-line="7" selection-start-column="0" selection-end-line="7" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write a class DominoChecker that has a method called addBox(int[]) that takes a box of five dominoes, described as a list of 10 integers (explained after), adds it to a collection,.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="595">
          <caret line="11" column="23" selection-start-line="11" selection-start-column="23" selection-end-line="11" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="69" max-vertical-offset="850">
          <caret line="21" column="77" selection-start-line="21" selection-start-column="0" selection-end-line="22" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a board made of 2 x n squares, and boards made of 2 x 1 squares, write a function that will calculate the number of possible ways to arrange the 2 x 1 boards on the 2 x n board, in a way that will fill it completely..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="520">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.24861878" vertical-offset="613" max-vertical-offset="1207">
          <caret line="44" column="61" selection-start-line="44" selection-start-column="61" selection-end-line="44" selection-end-column="61" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Explain a load balancer data structure and algorithm..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.1878453" vertical-offset="0" max-vertical-offset="543">
          <caret line="6" column="24" selection-start-line="6" selection-start-column="24" selection-end-line="6" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Implement a Boolean vector: T, F, F, T, F, … with the following operations.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.40699816" vertical-offset="68" max-vertical-offset="731">
          <caret line="16" column="212" selection-start-line="16" selection-start-column="212" selection-end-line="16" selection-end-column="212" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/modify the file to have a max of 80 characters per line and create a new perl file.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.21915285" vertical-offset="0" max-vertical-offset="543">
          <caret line="6" column="54" selection-start-line="6" selection-start-column="54" selection-end-line="6" selection-end-column="54" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/How does a search engine perform exact phrase search? i.e. search for the term &quot;the bees knees&quot; exactly..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.4576923" vertical-offset="0" max-vertical-offset="520">
          <caret line="10" column="293" selection-start-line="10" selection-start-column="293" selection-end-line="10" selection-end-column="293" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Give you an array which has n integers,it has both positive and negative integers.Now you need sort this array in a special way.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="238">
          <caret line="6" column="11" selection-start-line="6" selection-start-column="11" selection-end-line="6" selection-end-column="11" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write a method to determine if two strings are anagrams of each other.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.1878453" vertical-offset="0" max-vertical-offset="543">
          <caret line="6" column="3" selection-start-line="6" selection-start-column="3" selection-end-line="6" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Diameter of a Binary Tree.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.50092083" vertical-offset="0" max-vertical-offset="543">
          <caret line="13" column="29" selection-start-line="13" selection-start-column="29" selection-end-line="13" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You have two arrays src, tgt, containing two permutations of the numbers 0..n-1.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.14671814" vertical-offset="196" max-vertical-offset="748">
          <caret line="12" column="3" selection-start-line="12" selection-start-column="3" selection-end-line="12" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/Merge two BSTs with limited extra space.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1632">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Input - array of integers size N, integer Threshold. Output - the number of pairs (x, y) of distinct elements with condition x + y &lt;= Threshold. Is that possible to implement it with O(n).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.65252525" vertical-offset="0" max-vertical-offset="495">
          <caret line="18" column="47" selection-start-line="18" selection-start-column="47" selection-end-line="18" selection-end-column="47" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Consider a hash table with M slots. Suppose hash value is uniformly distributed between 1 to M, and it uses linked list to handle conflicts.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.22972973" vertical-offset="0" max-vertical-offset="518">
          <caret line="5" column="8" selection-start-line="5" selection-start-column="8" selection-end-line="5" selection-end-column="8" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>


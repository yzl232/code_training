<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Search Tree Iterator.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Give a min and max of an integer array, write a function to randomly return a number inside of this range, but not in the list. Also write a class that contains this function..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a BST and a value x. Find two nodes in the tree whose sum is equal x. Additional space: O(height of the tree). It is not allowed to modify the tree.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a polygon with N vertexes and N edges. There is an int number(could be negative) on every vertex and an operation in set(*,+) on every edge.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a very very very large integer(with 1 million digits, say), how would you convert this integer to an ASCII string.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given two strings containing digits, return the one which represents the largest integer once the digits have been sorted in non-increasing order..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/How does a site like Facebook store &quot;Likes&quot; ?.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/How would you implement an infinite counter?.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Imagine you have a sequence of the form 0123456789101112131415... where each digit is in a position.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement a counter that returns the number of function calls in the past minute.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Tail Recursion__Factorial.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Three coke machines. Each one has two values min &amp; max, which means if you get coke from this machine it will load you a random volume in the range.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/We define C(n) as the number of ways to take n identical objects out of a bucket, where objects may be taken 1, 2, or 3 at a time..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/What is the Minimum Amount not possible using an infinite supply of coins (Unbounded knapsack).py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write a long running program in C. This program should not hog the CPU, use no sleep() _block()_select()_wait(), should not block resources...and should terminate after a very very very long time.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write a method that takes a camilCase string as a parameter and returns underscore_case as output. Assume that input can be null or empty.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write the following function void drawLine.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/You have a sentence with several words with spaces removed and the words have their character order shuffled. You have a dictionary to lookup.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/convex hull.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/python/do_while_代替品.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/implement java iterator interface_count_and_say.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/stream of strings like this &quot;1 3 4 5 6&quot;.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/unsigned char read_byte(); ← side effect that it advances a byte pointer in the stream.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/python/zip.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/两个 collection 的 object 问 这两个 collection.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/假设有许多geographically distributed servers，用户可以向这些server request a ID.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/八进制的plus one.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/写一个树（非二叉树）的iterator,注意不是traversal，并分析复杂度。.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/已经有一个程序使用了标准的一个容器（比如List），现在有一堆第三方容器，怎样尽可能少更改源程序来利用这些新的类。其实就是写一个Wrapper Class.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/数字有重复，比如如果sum是10，{2,2,2,8,8}里面算两个(2,8)pair。求pair总数。.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/有N个node,每个都不停的向外发送timestamps,具体发送哪些timestamp.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/有很多这样的block. 然后问有&quot;foo&quot;的block的个数..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/给你一个File，然后删除它。.py" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a polygon with N vertexes and N edges.py" afterPath="" />
      <change type="MOVED" beforePath="$PROJECT_DIR$/mianJing111111/facebook/matrix_guard_barrier_保安_障碍.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/matrix_guard_barrier_保安_障碍.py" />
      <change type="MOVED" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/iterator/iterator_tree_postOrder.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/0-1 Knapsack Problem.py" />
      <change type="MOVED" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/iterator/iterator_tree_preOrder.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Flip a monochrome bitmap around its centre-line, where input is: char *bytes, int width, int height.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/5) Given a set of n jobs with [start time, end time, cost] find a subset so that no 2 jobs overlap and the cost is maximum ?.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/5) Given a set of n jobs with [start time, end time, cost] find a subset so that no 2 jobs overlap and the cost is maximum ?.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Anagrams.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Anagrams.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Inorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Inorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Build a key-value data structure which can perform following 2 functions.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Build a key-value data structure which can perform following 2 functions.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Design Short URL..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design Short URL..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Fibonacci.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Fibonacci.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Find a pair with given sum in a Balanced BST.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Find a pair with given sum in a Balanced BST.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement Iterator class with peek() functionality in Java..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement Iterator class with peek() functionality in Java..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Minimum Cost Polygon Triangulation.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Minimum Cost Polygon Triangulation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/linkedlist/Sorted insert for circular linked list.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/linkedlist/Sorted insert for circular linked list.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/There are n coins in a line. (Assume n is even). Two players take turns to take a coin from one of the ends of the line until there are no more coins left. The player with the larger amount of money wins.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/There are n coins in a line. (Assume n is even). Two players take turns to take a coin from one of the ends of the line until there are no more coins left. The player with the larger amount of money wins.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/explain and write algorithm that implements and infinite binary counter, where add() takes O(1) time complexity.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/explain and write algorithm that implements and infinite binary counter, where add() takes O(1) time complexity.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/random/randomInStream.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/random/randomInStream.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/remove_comments.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/remove_comments.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/strstr using recursion.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/strstr using recursion.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test.py" afterPath="$PROJECT_DIR$/test.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test9.py" afterPath="$PROJECT_DIR$/test9.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/找出这串数字中长度为‘k’的subsequence（不是subarray, 我专门问了，就是subsequence，不一定挨着的元素序列），使得这串subsequence的和最大.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/找出这串数字中长度为‘k’的subsequence（不是subarray, 我专门问了，就是subsequence，不一定挨着的元素序列），使得这串subsequence的和最大.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/给TreeNode写Iterator，使得以上代码可以in order traversal.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/给TreeNode写Iterator，使得以上代码可以in order traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" />
    </list>
    <ignored path="code_training.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="code_training" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="给你一个File，然后删除它。.py" pinned="false" current="true" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给你一个File，然后删除它。.py">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.27827382" vertical-offset="0" max-vertical-offset="672">
              <caret line="11" column="0" selection-start-line="11" selection-start-column="0" selection-end-line="11" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="true" />
    </FindUsagesManager>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a very very very large integer(with 1 million digits, say), how would you convert this integer to an ASCII string.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a long running program in C. This program should not hog the CPU, use no sleep()/block()/select()/wait(), should not block resources...and should terminate after a very very very long time.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a long running program in C. This program should not hog the CPU, use no sleep() _block()_select()_wait(), should not block resources...and should terminate after a very very very long time.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/How would you implement an infinite counter?.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Minimum Cost Polygon Triangulation.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a polygon with N vertexes and N edges. There is an int number(could be negative) on every vertex and an operation in set(*,+) on every edge.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/How does a site like Facebook store &quot;Likes&quot; ?.py" />
        <option value="$PROJECT_DIR$/python/zip.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a method that takes a camilCase string as a parameter and returns underscore_case as output. Assume that input can be null or empty.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You have a sentence with several words with spaces removed and the words have their character order shuffled. You have a dictionary to lookup.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/unsigned char read_byte(); ← side effect that it advances a byte pointer in the stream.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Fibonacci.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/We define C(n) as the number of ways to take n identical objects out of a bucket, where objects may be taken 1, 2, or 3 at a time..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Give a min and max of an integer array, write a function to randomly return a number inside of this range, but not in the list. Also write a class that contains this function..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Design Short URL..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given two strings containing digits, return the one which represents the largest integer once the digits have been sorted in non-increasing order..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Build a key-value data structure which can perform following 2 functions.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/有很多这样的block. 然后问有&quot;foo&quot;的block的个数..py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/remove_comments.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/两个 collection 的 object 问 这两个 collection.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/strstr using recursion.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/random/randomInStream.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/数字有重复，比如如果sum是10，{2,2,2,8,8}里面算两个(2,8)pair。求pair总数。.py" />
        <option value="$PROJECT_DIR$/test9.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/stream of strings like this &quot;1 3 4 5 6&quot;.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Anagrams.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/有N个node,每个都不停的向外发送timestamps,具体发送哪些timestamp.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/There are n coins in a line. (Assume n is even). Two players take turns to take a coin from one of the ends of the line until there are no more coins left. The player with the larger amount of money wins.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Implement Iterator class with peek() functionality in Java..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/已经有一个程序使用了标准的一个容器（比如List），现在有一堆第三方容器，怎样尽可能少更改源程序来利用这些新的类。其实就是写一个Wrapper Class.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/给TreeNode写Iterator，使得以上代码可以in order traversal.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Binary Search Tree Iterator.py" />
        <option value="$PROJECT_DIR$/test.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/implement java iterator interface_count_and_say.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/how to find median from k sorted array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/八进制的plus one.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/写一个树（非二叉树）的iterator,注意不是traversal，并分析复杂度。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/linkedlist/Sorted insert for circular linked list.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Tail Recursion.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Tail Recursion__Factorial.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this.py" />
        <option value="$PROJECT_DIR$/python/do_while_代替品.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/convex hull.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Implement a counter that returns the number of function calls in the past minute.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/假设有许多geographically distributed servers，用户可以向这些server request a ID.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给你一个File，然后删除它。.py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="476" />
    <option name="y" value="23" />
    <option name="width" value="921" />
    <option name="height" value="841" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>Buildout</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="2" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="python" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="geeksforgeeks" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="geeksforgeeks" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="几何多边形polygonConvex" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="Google" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../courseProjects" />
    <property name="options.lastSelected" value="editor.preferences.completion" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="options.searchVisible" value="true" />
    <property name="SearchEverywhereHistoryKey" value="Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. &#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py&#10;hits&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/called times function hits gethits.py&#10;&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/convex hull.py&#10;next gre&#9;null&#9;null&#10;poly&#9;null&#9;null&#10;保安&#9;null&#9;null&#10;Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this&#9;null&#9;null&#10;circular&#9;null&#9;null&#10;n-ary&#9;null&#9;null&#10;iterator&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/给TreeNode写Iterator，使得以上代码可以in order traversal.py&#10;Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles.&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py&#10;dictionary&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/You have a dictionary which is an array of words and array of strings.  Write two functions  1. Prepare the array of strings to be searched in the dictionary 2. Check if the string contains all valid words or not..py&#10;iterator tr&#9;null&#9;null&#10;itera&#9;null&#9;null&#10;iterat&#9;null&#9;null&#10;peek&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Implement Iterator class with peek() functionality in Java..py&#10;in Java arraylist we have mix of int&#9;null&#9;null&#10;Implement below function.&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py&#10;random   not &#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Give a min and max of an integer array, write a function to randomly return a number inside of this range, but not in the list. Also write a class that contains this function..py&#10;coin  left &#9;null&#9;null&#10;anag&#9;null&#9;null&#10;snake&#9;null&#9;null&#10;power&#9;null&#9;null&#10;randomin&#9;null&#9;null&#10;strstr&#9;null&#9;null&#10;flip coin&#9;null&#9;null&#10;comment&#9;null&#9;null&#10;url&#9;null&#9;null&#10;binary search&#9;null&#9;null&#10;Implement below function&#9;null&#9;null&#10;fibo&#9;null&#9;null&#10;trailing&#9;null&#9;null&#10;polygon&#9;null&#9;null&#10;Minimum Amount not possible &#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/What is the Minimum Amount not possible using an infinite supply of coins (Unbounded knapsack).py&#10;x*x&#9;null&#9;null&#10;coin&#9;null&#9;null&#10;excel&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/Microsoft Excel numbers cells as 1...26 and after that AA, AB.... AAA, AAB...ZZZ and so on.py&#10;balanced&#9;null&#9;null&#10;inorder&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Binary Tree Inorder Traversal.py&#10; Find a pair with given sum in a Balanced BST &#9;null&#9;null&#10;set bits&#9;null&#9;null&#10;design random&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/design/Design data structure: insert, remove, contains, get random element, all at O1.py&#10;prime&#9;null&#9;null&#10;dia&#9;null&#9;null&#10;interval&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/Given an array of meetings, find out the minimum number of conference rooms requiredGiven n intervals  , find the maximum number of overlapping intervals.py&#10;sqrt&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/sqrt_Please write a function that accepts a floating number and returns its square-root.py&#10;overlap&#9;null&#9;null&#10;meeting&#9;null&#9;null&#10;trie&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/trie/Trie_implement.py&#10;remove com&#9;null&#9;null" />
    <property name="recentsLimit" value="5" />
    <property name="FullScreen" value="false" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings />
    </option>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <recent name="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <recent name="$PROJECT_DIR$/mianJing111111/facebook" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/Google" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch" />
      <recent name="$PROJECT_DIR$/python" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/graph" />
    </key>
  </component>
  <component name="RunManager" selected="Python.Given an array, print the Next Greater Element (NGE) for every element">
    <configuration default="false" name="test" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/test.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="implement java iterator interface_count_and_say" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/implement java iterator interface_count_and_say.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Serialize and Deserialize an N-ary Tree" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/facebook" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/facebook/Serialize and Deserialize an N-ary Tree.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Given an array, print the Next Greater Element (NGE) for every element" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Given an array, print the Next Greater Element (NGE) for every element.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="testToRun" value="" />
      <option name="keywords" value="" />
      <option name="params" value="" />
      <option name="USE_PARAM" value="false" />
      <option name="USE_KEYWORD" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Nosetests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PUREUNITTEST" value="true" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Attests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="false" name="Sliding Window Maximum_Maximum element of all subarrays of size k" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Sliding Window Maximum_Maximum element of all subarrays of size k.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PyDebugRunner" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PyDebugRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel/给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <list size="7">
      <item index="0" class="java.lang.String" itemvalue="Python.Sliding Window Maximum_Maximum element of all subarrays of size k" />
      <item index="1" class="java.lang.String" itemvalue="Python.给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" />
      <item index="2" class="java.lang.String" itemvalue="Python.test" />
      <item index="3" class="java.lang.String" itemvalue="Python.implement java iterator interface_count_and_say" />
      <item index="4" class="java.lang.String" itemvalue="Python.Serialize and Deserialize an N-ary Tree" />
      <item index="5" class="java.lang.String" itemvalue="Python.Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this" />
      <item index="6" class="java.lang.String" itemvalue="Python.Given an array, print the Next Greater Element (NGE) for every element" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="Python.Given an array, print the Next Greater Element (NGE) for every element" />
        <item index="1" class="java.lang.String" itemvalue="Python.Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this" />
        <item index="2" class="java.lang.String" itemvalue="Python.Serialize and Deserialize an N-ary Tree" />
        <item index="3" class="java.lang.String" itemvalue="Python.implement java iterator interface_count_and_say" />
        <item index="4" class="java.lang.String" itemvalue="Python.test" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="" />
      <created>1416632866407</created>
      <updated>1416632866407</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="476" y="23" width="921" height="841" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32142857" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.24932249" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.21666667" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.39716312" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.19285715" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
    </layout>
    <layout-to-restore>
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32285714" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.39716312" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.24932249" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.16196014" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.19571428" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="myTodoPanelSettings">
      <TodoPanelSettings />
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="5" />
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Build a key-value data structure which can perform following 2 functions.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.62718445" vertical-offset="0" max-vertical-offset="515">
          <caret line="18" column="3" selection-start-line="18" selection-start-column="3" selection-end-line="18" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/remove_comments.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.45840707" vertical-offset="727" max-vertical-offset="1292">
          <caret line="53" column="9" selection-start-line="53" selection-start-column="9" selection-end-line="53" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/有很多这样的block. 然后问有&quot;foo&quot;的block的个数..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7221239" vertical-offset="0" max-vertical-offset="565">
          <caret line="24" column="18" selection-start-line="24" selection-start-column="18" selection-end-line="24" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/两个 collection 的 object 问 这两个 collection.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.42123893" vertical-offset="0" max-vertical-offset="565">
          <caret line="13" column="27" selection-start-line="13" selection-start-column="27" selection-end-line="13" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/flip Coin.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="510">
          <caret line="7" column="15" selection-start-line="7" selection-start-column="15" selection-end-line="7" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/strstr using recursion.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="289">
          <caret line="5" column="3" selection-start-line="5" selection-start-column="3" selection-end-line="5" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/random/randomInStream.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-1.1433629" vertical-offset="799" max-vertical-offset="1683">
          <caret line="7" column="4" selection-start-line="7" selection-start-column="4" selection-end-line="7" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/数字有重复，比如如果sum是10，{2,2,2,8,8}里面算两个(2,8)pair。求pair总数。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="731">
          <caret line="14" column="0" selection-start-line="14" selection-start-column="0" selection-end-line="14" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test2.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="714">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/bit/Compute modulus division by a power-of-2-number.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="517">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test9.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="605" max-vertical-offset="1190">
          <caret line="64" column="3" selection-start-line="64" selection-start-column="3" selection-end-line="64" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You visited a list of places recently, but you do not remember the order in which you visited them.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="629">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/stream of strings like this &quot;1 3 4 5 6&quot;.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.18148148" vertical-offset="38" max-vertical-offset="646">
          <caret line="8" column="26" selection-start-line="8" selection-start-column="26" selection-end-line="8" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/cracking_the_coding/Implement ajigsaw puzzle. Design the data structuresand explain an algorithm solve the puzzle. Youcan assume that you have a f itsW ith method which, hen passed two puzzle pieces, returns true if the two pieces belong together..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1734">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/cracking_the_coding/Othello is played as follows: Each Othello piece is white on one side and black on the other.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.90715665" vertical-offset="469" max-vertical-offset="1870">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="5" selection-end-column="28" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/queue.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="540">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.27592593" vertical-offset="854" max-vertical-offset="1394">
          <caret line="56" column="57" selection-start-line="56" selection-start-column="57" selection-end-line="56" selection-end-column="57" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Anagrams.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.20238096" vertical-offset="0" max-vertical-offset="672">
          <caret line="8" column="28" selection-start-line="8" selection-start-column="28" selection-end-line="8" selection-end-column="28" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/有N个node,每个都不停的向外发送timestamps,具体发送哪些timestamp.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="350" max-vertical-offset="867">
          <caret line="18" column="23" selection-start-line="18" selection-start-column="23" selection-end-line="18" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/There are n coins in a line. (Assume n is even). Two players take turns to take a coin from one of the ends of the line until there are no more coins left. The player with the larger amount of money wins.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="832" max-vertical-offset="1581">
          <caret line="78" column="24" selection-start-line="78" selection-start-column="24" selection-end-line="78" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Give a min and max of an integer array, write a function to randomly return a number inside of this range, but not in the list. Also write a class that contains this function..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="1348" max-vertical-offset="1819">
          <caret line="83" column="25" selection-start-line="83" selection-start-column="0" selection-end-line="83" selection-end-column="25" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Implement below function. int getRandom(int N, int K[]).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="340" max-vertical-offset="1309">
          <caret line="19" column="70" selection-start-line="19" selection-start-column="70" selection-end-line="19" selection-end-column="70" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Consider in Java arraylist we have mix of int, double, float, string, etc. How will you find if a given index of arraylist have string. No need to worry about generics and type safe..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.20955315" vertical-offset="0" max-vertical-offset="649">
          <caret line="7" column="38" selection-start-line="7" selection-start-column="38" selection-end-line="7" selection-end-column="38" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Implement Iterator class with peek() functionality in Java..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.10119048" vertical-offset="0" max-vertical-offset="672">
          <caret line="4" column="49" selection-start-line="4" selection-start-column="49" selection-end-line="4" selection-end-column="49" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/已经有一个程序使用了标准的一个容器（比如List），现在有一堆第三方容器，怎样尽可能少更改源程序来利用这些新的类。其实就是写一个Wrapper Class.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.052388288" vertical-offset="0" max-vertical-offset="649">
          <caret line="2" column="3" selection-start-line="2" selection-start-column="3" selection-end-line="2" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Binary Search Tree Iterator.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="133" max-vertical-offset="850">
          <caret line="7" column="3" selection-start-line="7" selection-start-column="3" selection-end-line="7" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.09461967" vertical-offset="0" max-vertical-offset="539">
          <caret line="0" column="475" selection-start-line="0" selection-start-column="475" selection-end-line="0" selection-end-column="475" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/implement java iterator interface_count_and_say.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1190">
          <caret line="13" column="8" selection-start-line="13" selection-start-column="8" selection-end-line="13" selection-end-column="8" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a dictionary of words, and a set of characters, judge if all the characters can form the words from the dictionary, without any characters left.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1122">
          <caret line="13" column="28" selection-start-line="13" selection-start-column="28" selection-end-line="13" selection-end-column="28" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/You have a dictionary which is an array of words and array of strings.  Write two functions  1. Prepare the array of strings to be searched in the dictionary 2. Check if the string contains all valid words or not..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1037">
          <caret line="20" column="0" selection-start-line="20" selection-start-column="0" selection-end-line="20" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="238" max-vertical-offset="1088">
          <caret line="24" column="0" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/八进制的plus one.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.39323843" vertical-offset="0" max-vertical-offset="562">
          <caret line="13" column="21" selection-start-line="13" selection-start-column="21" selection-end-line="13" selection-end-column="21" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/写一个树（非二叉树）的iterator,注意不是traversal，并分析复杂度。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5361781" vertical-offset="0" max-vertical-offset="539">
          <caret line="17" column="38" selection-start-line="17" selection-start-column="38" selection-end-line="17" selection-end-column="38" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/给TreeNode写Iterator，使得以上代码可以in order traversal.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.81672597" vertical-offset="238" max-vertical-offset="1445">
          <caret line="41" column="0" selection-start-line="41" selection-start-column="0" selection-end-line="41" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/Serialize and Deserialize an N-ary Tree.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="255" max-vertical-offset="1122">
          <caret line="28" column="0" selection-start-line="10" selection-start-column="0" selection-end-line="28" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/linkedlist/Sorted insert for circular linked list.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="713" max-vertical-offset="1275">
          <caret line="40" column="0" selection-start-line="40" selection-start-column="0" selection-end-line="40" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Tail Recursion__Factorial.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="668" max-vertical-offset="1139">
          <caret line="36" column="0" selection-start-line="36" selection-start-column="0" selection-end-line="36" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/matrix_guard_barrier_保安_障碍.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-1.4904459" vertical-offset="702" max-vertical-offset="1173">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/compress Strings.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="458">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="1450" max-vertical-offset="2465">
          <caret line="87" column="17" selection-start-line="87" selection-start-column="17" selection-end-line="87" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/几何多边形polygonConvex/How to check if a given point lies inside or outside a polygon?.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1156">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/几何多边形polygonConvex/How to check if two given line segments intersect__Vector__slope.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="826" max-vertical-offset="1479">
          <caret line="47" column="0" selection-start-line="47" selection-start-column="0" selection-end-line="57" selection-end-column="38" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/do_while_代替品.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.24089068" vertical-offset="0" max-vertical-offset="494">
          <caret line="7" column="9" selection-start-line="7" selection-start-column="9" selection-end-line="7" selection-end-column="9" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/几何多边形polygonConvex/vector_几何基础.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.8044693" vertical-offset="1384" max-vertical-offset="1921">
          <caret line="56" column="0" selection-start-line="56" selection-start-column="0" selection-end-line="57" selection-end-column="44" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Given an array, print the Next Greater Element (NGE) for every element.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.8361266" vertical-offset="500" max-vertical-offset="1037">
          <caret line="3" column="0" selection-start-line="3" selection-start-column="0" selection-end-line="3" selection-end-column="20" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/convex hull.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7467412" vertical-offset="1095" max-vertical-offset="1632">
          <caret line="82" column="53" selection-start-line="82" selection-start-column="53" selection-end-line="82" selection-end-column="53" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Implement a counter that returns the number of function calls in the past minute.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.05059524" vertical-offset="0" max-vertical-offset="672">
          <caret line="2" column="0" selection-start-line="2" selection-start-column="0" selection-end-line="2" selection-end-column="80" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="2.4884439" vertical-offset="0" max-vertical-offset="2924">
          <caret line="93" column="91" selection-start-line="93" selection-start-column="91" selection-end-line="93" selection-end-column="91" />
          <folding>
            <element signature="e#17#28#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/假设有许多geographically distributed servers，用户可以向这些server request a ID.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.7026194" vertical-offset="0" max-vertical-offset="1207">
          <caret line="39" column="3" selection-start-line="39" selection-start-column="3" selection-end-line="39" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a large network of computers, each keeping log files of visited urls, find the top ten of the most visited urls. (i.e. have many large &lt;string (url) -&gt; int (visits)&gt; maps.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.16517857" vertical-offset="331" max-vertical-offset="1003">
          <caret line="21" column="93" selection-start-line="21" selection-start-column="93" selection-end-line="21" selection-end-column="93" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给你一个File，然后删除它。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.27827382" vertical-offset="0" max-vertical-offset="672">
          <caret line="11" column="0" selection-start-line="11" selection-start-column="0" selection-end-line="11" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>


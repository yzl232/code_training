<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/+1 North America ... +1950 Northern Cal … +44 UK +4420 London +447 UK Mobile +44750 Vodafoned …  and we have a phone number, for instance +447507439854795 +44989045454.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/1. Given a collection of boarding passes, the starting city and the destination city, decide if one can get to the destination from the start city..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/2 给你一个有序数组 和一个X 让你返回数组里所有满足a + b &lt;= X的 tuple。  follow up： 换成 a, b, c三元  满足 a+ b+ c &lt;= X  大概的方法签名如下： int xxxxxx(int[] array, int X).py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/2d rectangular array of positive integers representing the height map of a continent.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Compare Version Numbers.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Dungeon Game.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Explain what happens, step by step, after you type a URL into a browser. Use as much detail as possible..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Factorial Trailing Zeroes.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Fraction to Recurring Decimal.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Friend Suggestion，知道一个人在network里的Friends，求Friends的Friends里和这个人最多common friends的人.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a number n (n&gt;4), return true if n is sum of two odd prime numbers; else return false*.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an integer array, adjust each integers so that the difference of every adjcent integers are not greater than a given number target..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Hailstone 数列，从一个数n开始，如果n是奇数 乘3 +1， 如果是偶数就除以2.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Largest Number.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Matrix Chain Multiplication.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Max Cycle Length.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4 II - Call multiple times.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Ways to paint N fence posts with two colors. One color can be used consecutively for no more than twice..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/cookies.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/final.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/void Schedule(int64 timestamp, function* to_run).py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/when the levels are very deep (such as 50 levels), we cannot manually write the for loop body directly just like above codes.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/乱序的byte collection ， 输出：有序byte 除去dup  说白了就是排序和去重 然后数据结构我说输入输出可以用List么 他说可以 所以大概就是输入一个无序的 List&lt;Byte&gt; 输出一个有序的且无重复元素的 List&lt;Byte&gt;.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/你一个Node class，有getID, setID, getChildren（返回iterator）三个method。 有一个图，图里面有的node有ID，有的没有，怎么在1个pass之内把所有node都set上ID.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/俄罗斯方块，每一个图案都是由4个block组成，现在给定一个N表示N个block，把所有 有效的俄罗斯方块组合都输出出来.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/python/关于python slice.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/algorithms/关于segment tree__union_find.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/数组中每个元素表示他能走的步数，技能向左走 又能向右走，能到A[0]的点有A[1]和A[4].py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/用同样的代码同样的数据跑测试，为啥结果会不一样，有两种可能.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/第一个设计一个API，实现用户A发送消息给B，内容包含一个title和context.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/给定一个自定义的List，长得和ArrayList差不多， 这个List已经有序 只支持一个函数get(index)，复杂度为O(1).py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳/访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳，就留下一个。.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/题目是给一个string，返回含有word的list。word的定义是空格(大于 等于一个）之间的或者引号之间的，如果引号里面有空格要做为一个word返回 根据空格分隔字符串，但是引号内的是整体，不可分割.py" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/数组中每个元素表示他能走的步数，技能向左走 又能向右走，能到A[0]的点有A[1]和A[4]，A[1]可以走3步到A[4] A[4]能走4步道A[0]。.py" afterPath="" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Add Two Numbers .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Add Two Numbers .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Search Tree Iterator.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Search Tree Iterator.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Climbing Stairs.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Climbing Stairs.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Container With Most Water.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Container With Most Water.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Fibonacci.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Fibonacci.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Find Minimum in Rotated Sorted Array II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Find Minimum in Rotated Sorted Array II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Find Minimum in Rotated Sorted Array.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Find Minimum in Rotated Sorted Array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Gray Code.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Gray Code.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Implement Iterator class with peek() functionality in Java..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Implement Iterator class with peek() functionality in Java..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Intersection of Two Linked Lists.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Intersection of Two Linked Lists.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Consecutive Sequence.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Consecutive Sequence.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Palindromic Substring.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Palindromic Substring.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Substring Without Repeating Characters.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Substring Without Repeating Characters.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Majority Element.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Majority Element.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Two Sorted Lists.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Two Sorted Lists.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Minimum Cost Polygon Triangulation.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Minimum Cost Polygon Triangulation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Path Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Path Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py" afterPath="$PROJECT_DIR$/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/One Edit Distance.py" afterPath="$PROJECT_DIR$/code_training_leet_code/One Edit Distance.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Plus One.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Plus One.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" afterPath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Segregate Even and Odd numbers.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Segregate Even and Odd numbers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Sliding Window Maximum_Maximum element of all subarrays of size k.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Sliding Window Maximum_Maximum element of all subarrays of size k.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sort Colors.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sort Colors.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Swap Nodes in Pairs .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Swap Nodes in Pairs .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/Trapping Rain Water.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/Trapping Rain Water.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Unique Paths II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Unique Paths II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Use the shorest unique prefix to represent each word in the array.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Use the shorest unique prefix to represent each word in the array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/python/a=b=c.py" afterPath="$PROJECT_DIR$/python/a=b=c.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/google的 search bar_search suggestion.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/google的 search bar_search suggestion.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/matrix中间一个区域的数目之和，然后我之前看面经看过这个，然后用容斥原理做了，然后他说这是trade off.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/matrix中间一个区域的数目之和，然后我之前看面经看过这个，然后用容斥原理做了，然后他说这是trade off.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/facebook/remove_comments.py" afterPath="$PROJECT_DIR$/mianJing111111/facebook/remove_comments.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test7.py" afterPath="$PROJECT_DIR$/test7.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test9.py" afterPath="$PROJECT_DIR$/test9.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/写出长度小于N的所有旋转对称数.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/写出长度小于N的所有旋转对称数.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/如何找到一个点为出发点 能实现总共取货路径最短？ 每次只能拿一个货物，遇到障碍 需要绕开，拿到以后要放回出发点，然后再取另一个.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/如何找到一个点为出发点 能实现总共取货路径最短？ 每次只能拿一个货物，遇到障碍 需要绕开，拿到以后要放回出发点，然后再取另一个.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/实现一个class LicensePlateAnagramFinder, class的constructor接受一个字典 建立索引，然后实现一个方法，快速找到car plate里面的字母的anagram，如果没有就找最接近的那个.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/实现一个class LicensePlateAnagramFinder, class的constructor接受一个字典 建立索引，然后实现一个方法，快速找到car plate里面的字母的anagram，如果没有就找最接近的那个.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" afterPath="$PROJECT_DIR$/mianJing111111/Google/非编程类的题目.py" />
    </list>
    <ignored path="code_training.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="code_training" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="1596" max-vertical-offset="2091">
              <caret line="8" column="0" selection-start-line="8" selection-start-column="0" selection-end-line="8" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Partition problem.py" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Partition problem.py">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="650" max-vertical-offset="1122">
              <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal..py" pinned="false" current="true" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal..py">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="1.0084746" vertical-offset="0" max-vertical-offset="782">
              <caret line="27" column="7" selection-start-line="27" selection-start-column="7" selection-end-line="27" selection-end-column="7" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="true" />
    </FindUsagesManager>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Gray Code.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Longest Consecutive Sequence.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Find Minimum in Rotated Sorted Array.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Find Minimum in Rotated Sorted Array II.py" />
        <option value="$PROJECT_DIR$/test9.py" />
        <option value="$PROJECT_DIR$/python/a=b=c.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Intersection of Two Linked Lists.py" />
        <option value="$PROJECT_DIR$/python/关于python slice.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/One Edit Distance.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Compare Version Numbers.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4 II - Call multiple times.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Fraction to Recurring Decimal.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Majority Element.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Binary Search Tree Iterator.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Factorial Trailing Zeroes.py" />
        <option value="$PROJECT_DIR$/algorithms/关于segment tree.py" />
        <option value="$PROJECT_DIR$/algorithms/关于segment tree__union_find.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Minimum Cost Polygon Triangulation.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Matrix Chain Multiplication.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/俄罗斯方块，每一个图案都是由4个block组成，现在给定一个N表示N个block，把所有 有效的俄罗斯方块组合都输出出来.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/根据空格分隔字符串，但是引号内的是整体，不可分割.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/如何找到一个点为出发点 能实现总共取货路径最短？ 每次只能拿一个货物，遇到障碍 需要绕开，拿到以后要放回出发点，然后再取另一个.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Hailstone 数列，从一个数n开始，如果n是奇数 乘3 +1， 如果是偶数就除以2.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/你一个Node class，有getID, setID, getChildren（返回iterator）三个method。 有一个图，图里面有的node有ID，有的没有，怎么在1个pass之内把所有node都set上ID.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Segregate Even and Odd numbers.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/+1 North America ... +1950 Northern Cal … +44 UK +4420 London +447 UK Mobile +44750 Vodafoned …  and we have a phone number, for instance +447507439854795 +44989045454.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Sliding Window Maximum_Maximum element of all subarrays of size k.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/乱序的byte collection ， 输出：有序byte 除去dup  说白了就是排序和去重 然后数据结构我说输入输出可以用List么 他说可以 所以大概就是输入一个无序的 List&lt;Byte&gt; 输出一个有序的且无重复元素的 List&lt;Byte&gt;.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/2 给你一个有序数组 和一个X 让你返回数组里所有满足a + b &lt;= X的 tuple。  follow up： 换成 a, b, c三元  满足 a+ b+ c &lt;= X  大概的方法签名如下： int xxxxxx(int[] array, int X).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/matrix中间一个区域的数目之和，然后我之前看面经看过这个，然后用容斥原理做了，然后他说这是trade off.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Use the shorest unique prefix to represent each word in the array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳/访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳，就留下一个。.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/用同样的代码同样的数据跑测试，为啥结果会不一样，有两种可能.py" />
        <option value="$PROJECT_DIR$/test.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/题目是给一个string，返回含有word的list。word的定义是空格(大于 等于一个）之间的或者引号之间的，如果引号里面有空格要做为一个word返回 根据空格分隔字符串，但是引号内的是整体，不可分割.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/给定一个自定义的List，长得和ArrayList差不多， 这个List已经有序 只支持一个函数get(index)，复杂度为O(1).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal..py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="397" />
    <option name="y" value="23" />
    <option name="width" value="1118" />
    <option name="height" value="841" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>Buildout</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="2" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="algorithms" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../courseProjects" />
    <property name="options.lastSelected" value="editor.preferences.completion" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="options.searchVisible" value="true" />
    <property name="SearchEverywhereHistoryKey" value="You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal.&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal..py&#10;Partition problem&#9;null&#9;null&#10;tile&#9;null&#9;null&#10;&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来.py&#10;hangman&#9;null&#9;null&#10;根据空格分隔字符串，但是引号内的是整体，不可分割&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/根据空格分隔字符串，但是引号内的是整体，不可分割.py&#10;Given an 8x8 chess board, you have a bishop that moves from the current to the target position. write a code to find the minimum path from the current to the target position.&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Given an 8x8 chess board, you have a bishop that moves from the current to the target position. write a code to find the minimum path from the current to the target position..py&#10;Use the shorest unique prefix to represent each word in the array&#9;null&#9;null&#10;matrix中间一个区域的数目之和，然后我之前看面经看过这个，然后用容斥原理做了，然后他说这是trade off&#9;null&#9;null&#10;Sliding Window Maximum_Maximum element of all subarrays of size k&#9;null&#9;null&#10;N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner.&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py&#10;Segregate Even and Odd numbers&#9;null&#9;null&#10;topologi&#9;null&#9;null&#10;如何找到一个点为出发点 能实现总共取货路径最短？ 每次只能拿一个货物，遇到障碍 需要绕开，拿到以后要放回出发点，然后再取另一个&#9;null&#9;null&#10;triangul&#9;null&#9;null&#10;factorial&#9;null&#9;null&#10;Binary Search Tree Iterator&#9;null&#9;null&#10;majori&#9;null&#9;null&#10;majority&#9;null&#9;null&#10;frac&#9;null&#9;null&#10;read N&#9;null&#9;null&#10;one edit&#9;null&#9;null&#10;read&#9;null&#9;null&#10;Intersection of Two Linked Lists&#9;null&#9;null&#10;Reverse Words in a String&#9;null&#9;null&#10;Find Minimum in Rotated Sorted Array &#9;null&#9;null&#10;word break&#9;null&#9;null&#10;gas station&#9;null&#9;null&#10;Longest Consecutive Sequence&#9;null&#9;null&#10; Best Time to Buy and Sell Stock III&#9;null&#9;null&#10;decode ways&#9;null&#9;null&#10;gray code&#9;null&#9;null&#10;Merge Sorted Array&#9;null&#9;null&#10;Maximal Rectangle&#9;null&#9;null&#10;concat&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Substring with Concatenation of All Words.py&#10;mini&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Minimum Window Substring&#10;Largest Rectangle in Histogram&#9;null&#9;null&#10;  window&#9;null&#9;null&#10;sort color&#9;null&#9;null&#10;Set Matrix Zeroes &#9;null&#9;null&#10;clim&#9;null&#9;null&#10;pow&#9;null&#9;null&#10;fibona&#9;null&#9;null&#10;merge two &#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Merge Two Sorted Lists.py&#10;minimum path su&#9;null&#9;null&#10;Unique Paths II&#9;null&#9;null&#10;permutat&#9;null&#9;null&#10;spiral&#9;null&#9;null&#10;trapping &#9;null&#9;null&#10;anagram&#9;null&#9;null" />
    <property name="recentsLimit" value="5" />
    <property name="FullScreen" value="false" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings />
    </option>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <recent name="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <recent name="$PROJECT_DIR$/mianJing111111/facebook" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/Google" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch" />
      <recent name="$PROJECT_DIR$/python" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/graph" />
    </key>
  </component>
  <component name="RunManager" selected="Python.hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来">
    <configuration default="false" name="test" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/test.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳，就留下一个。" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳/访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳，就留下一个。.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="题目是给一个string，返回含有word的list。word的定义是空格(大于 等于一个）之间的或者引号之间的，如果引号里面有空格要做为一个word返回 根据空格分隔字符串，但是引号内的是整体，不可分割" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/题目是给一个string，返回含有word的list。word的定义是空格(大于 等于一个）之间的或者引号之间的，如果引号里面有空格要做为一个word返回 根据空格分隔字符串，但是引号内的是整体，不可分割.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="testToRun" value="" />
      <option name="keywords" value="" />
      <option name="params" value="" />
      <option name="USE_PARAM" value="false" />
      <option name="USE_KEYWORD" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Nosetests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PUREUNITTEST" value="true" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Attests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="false" name="Sliding Window Maximum_Maximum element of all subarrays of size k" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Sliding Window Maximum_Maximum element of all subarrays of size k.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PyDebugRunner" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PyDebugRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel/给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <list size="7">
      <item index="0" class="java.lang.String" itemvalue="Python.Sliding Window Maximum_Maximum element of all subarrays of size k" />
      <item index="1" class="java.lang.String" itemvalue="Python.给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" />
      <item index="2" class="java.lang.String" itemvalue="Python.test" />
      <item index="3" class="java.lang.String" itemvalue="Python.访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳，就留下一个。" />
      <item index="4" class="java.lang.String" itemvalue="Python.题目是给一个string，返回含有word的list。word的定义是空格(大于 等于一个）之间的或者引号之间的，如果引号里面有空格要做为一个word返回 根据空格分隔字符串，但是引号内的是整体，不可分割" />
      <item index="5" class="java.lang.String" itemvalue="Python.题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和" />
      <item index="6" class="java.lang.String" itemvalue="Python.hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="Python.hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来" />
        <item index="1" class="java.lang.String" itemvalue="Python.题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和" />
        <item index="2" class="java.lang.String" itemvalue="Python.题目是给一个string，返回含有word的list。word的定义是空格(大于 等于一个）之间的或者引号之间的，如果引号里面有空格要做为一个word返回 根据空格分隔字符串，但是引号内的是整体，不可分割" />
        <item index="3" class="java.lang.String" itemvalue="Python.test" />
        <item index="4" class="java.lang.String" itemvalue="Python.访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳，就留下一个。" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="" />
      <created>1416632866407</created>
      <updated>1416632866407</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="397" y="23" width="1118" height="841" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.24886052" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.17775752" sideWeight="0.4990758" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.39571428" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.20504732" sideWeight="0.5009242" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.22518519" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3213793" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
    </layout>
    <layout-to-restore>
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3213793" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.39586207" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.20504732" sideWeight="0.5009242" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.24932249" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.20504732" sideWeight="0.4990758" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.19851851" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="myTodoPanelSettings">
      <TodoPanelSettings />
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints-dialog>
        <breakpoints-dialog />
      </breakpoints-dialog>
      <option name="time" value="6" />
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Gray Code.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.5454545" vertical-offset="0" max-vertical-offset="952">
          <caret line="49" column="3" selection-start-line="49" selection-start-column="3" selection-end-line="49" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Decode Ways.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.51454544" vertical-offset="640" max-vertical-offset="1190">
          <caret line="21" column="41" selection-start-line="21" selection-start-column="41" selection-end-line="21" selection-end-column="41" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.2890909" vertical-offset="317" max-vertical-offset="867">
          <caret line="27" column="15" selection-start-line="27" selection-start-column="15" selection-end-line="27" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Longest Consecutive Sequence.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="215" max-vertical-offset="782">
          <caret line="30" column="24" selection-start-line="30" selection-start-column="24" selection-end-line="30" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Gas Station.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.4018182" vertical-offset="0" max-vertical-offset="550">
          <caret line="12" column="36" selection-start-line="12" selection-start-column="36" selection-end-line="12" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Find Minimum in Rotated Sorted Array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.38709676" vertical-offset="629" max-vertical-offset="1156">
          <caret line="45" column="68" selection-start-line="45" selection-start-column="36" selection-end-line="45" selection-end-column="68" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Find Minimum in Rotated Sorted Array II.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.41272727" vertical-offset="691" max-vertical-offset="1241">
          <caret line="50" column="67" selection-start-line="50" selection-start-column="67" selection-end-line="50" selection-end-column="67" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Word Break II.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.16545455" vertical-offset="215" max-vertical-offset="765">
          <caret line="17" column="23" selection-start-line="17" selection-start-column="23" selection-end-line="17" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/a=b=c.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="731">
          <caret line="2" column="32" selection-start-line="2" selection-start-column="32" selection-end-line="2" selection-end-column="32" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Reverse Words in a String.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="351" max-vertical-offset="986">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Intersection of Two Linked Lists.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.6451613" vertical-offset="442" max-vertical-offset="1190">
          <caret line="6" column="15" selection-start-line="6" selection-start-column="15" selection-end-line="6" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Compare Version Numbers.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.9354839" vertical-offset="17" max-vertical-offset="612">
          <caret line="29" column="16" selection-start-line="29" selection-start-column="16" selection-end-line="29" selection-end-column="16" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/One Edit Distance.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.38709676" vertical-offset="0" max-vertical-offset="697">
          <caret line="12" column="40" selection-start-line="12" selection-start-column="40" selection-end-line="12" selection-end-column="40" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.83870965" vertical-offset="527" max-vertical-offset="1071">
          <caret line="54" column="3" selection-start-line="54" selection-start-column="3" selection-end-line="54" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Read N Characters Given Read4 II - Call multiple times.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.3870968" vertical-offset="0" max-vertical-offset="1360">
          <caret line="41" column="4" selection-start-line="41" selection-start-column="4" selection-end-line="41" selection-end-column="4" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/read4k_chars_read4096.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.6690909" vertical-offset="578" max-vertical-offset="4471">
          <caret line="81" column="32" selection-start-line="81" selection-start-column="32" selection-end-line="81" selection-end-column="32" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/关于python slice.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.43272728" vertical-offset="0" max-vertical-offset="550">
          <caret line="14" column="10" selection-start-line="14" selection-start-column="10" selection-end-line="14" selection-end-column="10" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Fraction to Recurring Decimal.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.81454545" vertical-offset="79" max-vertical-offset="629">
          <caret line="30" column="49" selection-start-line="30" selection-start-column="49" selection-end-line="30" selection-end-column="49" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test9.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.6490909" vertical-offset="0" max-vertical-offset="550">
          <caret line="21" column="80" selection-start-line="21" selection-start-column="80" selection-end-line="21" selection-end-column="80" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Binary Search Tree Iterator.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.32258064" vertical-offset="323" max-vertical-offset="850">
          <caret line="27" column="28" selection-start-line="27" selection-start-column="28" selection-end-line="27" selection-end-column="28" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Majority Element.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.612663" vertical-offset="946" max-vertical-offset="1802">
          <caret line="59" column="197" selection-start-line="59" selection-start-column="197" selection-end-line="59" selection-end-column="197" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch/Check for Majority Element in a sorted array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.14363636" vertical-offset="79" max-vertical-offset="629">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/algorithms/关于segment tree__union_find.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7418182" vertical-offset="0" max-vertical-offset="550">
          <caret line="24" column="21" selection-start-line="24" selection-start-column="21" selection-end-line="24" selection-end-column="21" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Factorial Trailing Zeroes.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="442">
          <caret line="11" column="74" selection-start-line="11" selection-start-column="74" selection-end-line="11" selection-end-column="74" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Tail Recursion__Factorial.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1122">
          <caret line="6" column="116" selection-start-line="6" selection-start-column="116" selection-end-line="6" selection-end-column="116" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Matrix Chain Multiplication.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.4516129" vertical-offset="0" max-vertical-offset="935">
          <caret line="8" column="208" selection-start-line="8" selection-start-column="208" selection-end-line="8" selection-end-column="208" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Minimum Cost Polygon Triangulation.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.6451613" vertical-offset="85" max-vertical-offset="901">
          <caret line="22" column="0" selection-start-line="22" selection-start-column="0" selection-end-line="22" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/俄罗斯方块，每一个图案都是由4个block组成，现在给定一个N表示N个block，把所有 有效的俄罗斯方块组合都输出出来.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="476">
          <caret line="19" column="38" selection-start-line="19" selection-start-column="38" selection-end-line="19" selection-end-column="38" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/如何找到一个点为出发点 能实现总共取货路径最短？ 每次只能拿一个货物，遇到障碍 需要绕开，拿到以后要放回出发点，然后再取另一个.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="102" max-vertical-offset="2856">
          <caret line="33" column="23" selection-start-line="33" selection-start-column="23" selection-end-line="33" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/string/Given a sorted dictionary of an alien language, find order of characters_topological_sort.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1887">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/你一个Node class，有getID, setID, getChildren（返回iterator）三个method。 有一个图，图里面有的node有ID，有的没有，怎么在1个pass之内把所有node都set上ID.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.22111554" vertical-offset="212" max-vertical-offset="714">
          <caret line="17" column="8" selection-start-line="17" selection-start-column="8" selection-end-line="17" selection-end-column="8" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Hailstone 数列，从一个数n开始，如果n是奇数 乘3 +1， 如果是偶数就除以2.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.4495238" vertical-offset="393" max-vertical-offset="918">
          <caret line="35" column="0" selection-start-line="35" selection-start-column="0" selection-end-line="35" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Segregate Even and Odd numbers.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="138" max-vertical-offset="714">
          <caret line="21" column="7" selection-start-line="21" selection-start-column="7" selection-end-line="21" selection-end-column="7" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/+1 North America ... +1950 Northern Cal … +44 UK +4420 London +447 UK Mobile +44750 Vodafoned …  and we have a phone number, for instance +447507439854795 +44989045454.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="425">
          <caret line="19" column="50" selection-start-line="19" selection-start-column="50" selection-end-line="19" selection-end-column="50" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7265823" vertical-offset="801" max-vertical-offset="1785">
          <caret line="56" column="36" selection-start-line="56" selection-start-column="36" selection-end-line="56" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Sliding Window Maximum_Maximum element of all subarrays of size k.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.58536583" vertical-offset="697" max-vertical-offset="1394">
          <caret line="61" column="23" selection-start-line="61" selection-start-column="23" selection-end-line="61" selection-end-column="23" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/乱序的byte collection ， 输出：有序byte 除去dup  说白了就是排序和去重 然后数据结构我说输入输出可以用List么 他说可以 所以大概就是输入一个无序的 List&lt;Byte&gt; 输出一个有序的且无重复元素的 List&lt;Byte&gt;.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="221">
          <caret line="4" column="6" selection-start-line="4" selection-start-column="6" selection-end-line="4" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/2 给你一个有序数组 和一个X 让你返回数组里所有满足a + b &lt;= X的 tuple。  follow up： 换成 a, b, c三元  满足 a+ b+ c &lt;= X  大概的方法签名如下： int xxxxxx(int[] array, int X).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="391">
          <caret line="6" column="15" selection-start-line="6" selection-start-column="15" selection-end-line="6" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/matrix中间一个区域的数目之和，然后我之前看面经看过这个，然后用容斥原理做了，然后他说这是trade off.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1700">
          <caret line="89" column="43" selection-start-line="89" selection-start-column="43" selection-end-line="89" selection-end-column="43" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Use the shorest unique prefix to represent each word in the array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.81284404" vertical-offset="1036" max-vertical-offset="1581">
          <caret line="83" column="0" selection-start-line="83" selection-start-column="0" selection-end-line="83" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给一堆数，代表时间戳/访问人数，输出整理出如果在相应时间内有时间戳，就输出出来，没有就填NaN。如果在短时间内有多个时间戳，就留下一个。.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.41153845" vertical-offset="585" max-vertical-offset="1105">
          <caret line="45" column="42" selection-start-line="45" selection-start-column="42" selection-end-line="45" selection-end-column="42" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/用同样的代码同样的数据跑测试，为啥结果会不一样，有两种可能.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="578">
          <caret line="18" column="46" selection-start-line="18" selection-start-column="46" selection-end-line="18" selection-end-column="46" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/题目是给一个string，返回含有word的list。word的定义是空格(大于 等于一个）之间的或者引号之间的，如果引号里面有空格要做为一个word返回 根据空格分隔字符串，但是引号内的是整体，不可分割.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.4387528" vertical-offset="0" max-vertical-offset="748">
          <caret line="37" column="13" selection-start-line="37" selection-start-column="13" selection-end-line="37" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="102">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given an 8x8 chess board, you have a bishop that moves from the current to the target position. write a code to find the minimum path from the current to the target position..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.43232325" vertical-offset="262" max-vertical-offset="782">
          <caret line="24" column="28" selection-start-line="24" selection-start-column="28" selection-end-line="24" selection-end-column="28" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/题目是给一个n*m的二维数组返回一个一维数组，这个数组包含之前数组的对角线的和.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.56330276" vertical-offset="407" max-vertical-offset="952">
          <caret line="42" column="31" selection-start-line="42" selection-start-column="31" selection-end-line="42" selection-end-column="31" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/hangman_给你5个空_ _ _ _ _, 每次猜一个字母，这里出题人想让你猜出来clock，假如你猜a，告诉你这里面没有。你又猜c，他把c全写出来，所以你有c _ _ c _。 让你最多猜10次。写一个程序去猜。输入是几个空，要考虑每次猜的反馈，尽量把词猜出来.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="89" max-vertical-offset="918">
          <caret line="28" column="22" selection-start-line="28" selection-start-column="22" selection-end-line="28" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/给定一个自定义的List，长得和ArrayList差不多， 这个List已经有序 只支持一个函数get(index)，复杂度为O(1).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="187">
          <caret line="5" column="19" selection-start-line="5" selection-start-column="19" selection-end-line="5" selection-end-column="19" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given 7 letter tiles and a dictionary of valid words, return the set of words that can be generated using 1-7 of those tiles..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="1596" max-vertical-offset="2091">
          <caret line="8" column="0" selection-start-line="8" selection-start-column="0" selection-end-line="8" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Partition problem.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1122">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.0084746" vertical-offset="0" max-vertical-offset="782">
          <caret line="27" column="7" selection-start-line="27" selection-start-column="7" selection-end-line="27" selection-end-column="7" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>


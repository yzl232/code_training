<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design a component that will implement web browser history. the user goes to different site and once he press on history button you should display the last 5.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given a huge N*N matrix, we need to query the GCD of numbers in any given submatrix range（x1,y1,x2,y2）. Design a way to preprocess the matrix to accelerate the query speed..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given an input file and any criteria write a function that will find the best score line and return it..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given the array of digits (0 is also allowed), what is the minimal sum of two integers that are made of the digits.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Given two log files, each with a billion usernames (each username appended to the log file), find the usernames existing in both documents?.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Question: You are given a CSV file with 3 columns -- all integers:  id,parent,weight.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Suppose you have N machines connected to a network. Now you generate a new file on one machine, and want to sync up across all machines. please design a system to accomplish this task and also analyze the error tolerance issue..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Search.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/Write a function that receives three integer inputs for the lengths of the sides of a triangle and returns one of four values to determine the triangle type (1=scalene, 2=isosceles, 3=equilateral, 4=error).py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/design a system to return an unique ID for each request. For most of requests, the ID value should increase as time goes, the system should handle 1000 requests per second at least..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/given a dictionary of wrods,find the pair of word with following property: 1,the two word don't have same letter. 2,the multiple of the two word's length is maximum..py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/Google/suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Add Binary.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Add Binary.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Add Two Numbers .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Add Two Numbers .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Anagrams.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Anagrams.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Balanced Binary Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Balanced Binary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock III.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Best Time to Buy and Sell Stock.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Level Order Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Maximum Path Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Maximum Path Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Postorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Postorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Preorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Binary Tree Preorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Climbing Stairs.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Climbing Stairs.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combination Sum II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combination Sum II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combination Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combination Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Combinations.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Combinations.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Inorder and Postorder Traversal.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Inorder and Postorder Traversal.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Preorder and Inorder Traversal .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Construct Binary Tree from Preorder and Inorder Traversal .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Count and Say.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Decode Ways.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/Google/Design Short URL..py" afterPath="$PROJECT_DIR$/mianJing111111/Google/Design Short URL..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Divide Two Integers.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Divide Two Integers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Evaluate Reverse Polish Notation.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Evaluate Reverse Polish Notation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Gas Station.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Generate Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Generate Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Implement strStr().py" afterPath="$PROJECT_DIR$/code_training_leet_code/Implement strStr().py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Insertion Sort List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Insertion Sort List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Integer to Roman.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Integer to Roman.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/LRU Cache.py" afterPath="$PROJECT_DIR$/code_training_leet_code/LRU Cache.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Largest Rectangle in Histogram.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Length of Last Word.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Length of Last Word.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Common Prefix&#10;Longest Common Prefix.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Common Prefix&#10;Longest Common Prefix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Longest Valid Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Longest Valid Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Max Points on a Line.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Max Points on a Line.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximal Rectangle.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Maximum Product Subarray.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Maximum Product Subarray.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays&#10;Median of Two Sorted Arrays.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Depth of Binary Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Depth of Binary Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Minimum Window Substring&#10;Minimum Window Substring.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Multiply Strings.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Multiply Strings.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/N-Queens II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/N-Queens II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/N-Queens.py" afterPath="$PROJECT_DIR$/code_training_leet_code/N-Queens.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Next Permutation.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Next Permutation.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Palindrome Partitioning.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Partition List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Partition List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Path Sum.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Path Sum.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutation Sequence .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutations II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutations II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Permutations.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Permutations.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Plus One.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Plus One.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Populating Next Right Pointers in Each Node.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" afterPath="$PROJECT_DIR$/code_training_leet_code/Pow(x, n).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Recover Binary Search Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Recover Binary Search Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Regular Expression Matching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List&#10;Remove Duplicates from Sorted List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List&#10;Remove Duplicates from Sorted List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Remove Duplicates from Sorted List II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reorder List.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reorder List.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Restore IP Addresses&#10;Restore IP Addresses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Restore IP Addresses&#10;Restore IP Addresses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reverse Integer.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reverse Integer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Reverse Linked List II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Reverse Linked List II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Roman to Integer.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Roman to Integer.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Rotate List .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Rotate List .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Scramble String.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Scramble String.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Search a 2D Matrix.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Search a 2D Matrix.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Set Matrix Zeroes.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Simplify Path.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Simplify Path.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Single Number II .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Single Number II .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Single Number.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Single Number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sort Colors.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sort Colors.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sqrt(x).py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sqrt(x).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/String to Integer (atoi).py" afterPath="$PROJECT_DIR$/code_training_leet_code/String to Integer (atoi).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Subsets II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Subsets II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Substring with Concatenation of All Words.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sudoku Solver.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sudoku Solver.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Sum Root to Leaf Numbers.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Sum Root to Leaf Numbers.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Surrounded Regions .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Surrounded Regions .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Swap Nodes in Pairs .py" afterPath="$PROJECT_DIR$/code_training_leet_code/Swap Nodes in Pairs .py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Symmetric Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Symmetric Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Text Justification.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Text Justification.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Trapping Rain Water.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Unique Binary Search Trees.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Number.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Number.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Parentheses.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Parentheses.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Valid Sudoku.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Valid Sudoku.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Validate Binary Search Tree.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Validate Binary Search Tree.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Wildcard Matching.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Wildcard Matching.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Break II.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Break.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Break.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Ladder ii.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Ladder ii.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/Word Ladder.py" afterPath="$PROJECT_DIR$/code_training_leet_code/Word Ladder.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/ZigZag Conversion.py" afterPath="$PROJECT_DIR$/code_training_leet_code/ZigZag Conversion.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/code_training_leet_code/min stack.py" afterPath="$PROJECT_DIR$/code_training_leet_code/min stack.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
    </list>
    <ignored path="code_training.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="code_training" />
  </component>
  <component name="FileEditorManager">
    <leaf />
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="true" />
    </FindUsagesManager>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/mianJing111111/Google/called times function hits gethits.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a timer time() with nanosecond accuracy and given the interface.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a routine that does secret santa in O(N) time.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/We have a list of N nodes with each node pointing to one of the N nodes..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Generate MAX_INT (Max signed int value) using bitwise operators. Should work in 32 and 64 bit processors.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a kernal code in &quot;0&quot;th machine. How soon you can replicate the kernal across N machines. Now if the machines has upload and download bandwidth constraints, how can you impove the copy time..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Consider in Java arraylist we have mix of int, double, float, string, etc. How will you find if a given index of arraylist have string. No need to worry about generics and type safe..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/How would you synchronize a linked list across multiple computers. If nodes are added/removed to a linked list on one computer, all others must reflect this change.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/how to write a connection pool (i.e, a class that returns connections to the user, and if the user is done, returns them back to the pool).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Does a given file name match a single-star pattern? (can't use regex I assume.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a set of intervals, find the interval which has the maximum number of intersections.py" />
        <option value="$PROJECT_DIR$/test.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/prime/ugly_numbers_Design an algorithm to find the kth number such that the only prime factors are 3,5, and 7.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a rope of length n meters, cut the rope in different parts of integer lengths in a way that maximizes product of lengths of all parts. You must make at least one cut. Assume that the length of rope is more than 2 meters..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Extend. If you can remove three walls, then what is the shortest path from start to the target.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/Find the k'th largest element in a binary search tree. Write code for.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Deepest left leaf node in a binary tree.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given two Binary trees. these trees &quot;may&quot; have right and left branches swapped. Now compare it..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/There are 10,000 balls and may be 500 different colors of ball.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/How do you add two numbers that are larger/longer than Integer datatype? I said I would use BigInteger , then he asked how will you add if the number is larger than BigInteger.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/iven a list of integers that fall within a known short but unknown range of values, how to find the median value? Some say we could use selection algorithm..py" />
        <option value="$PROJECT_DIR$/python/exception_raise.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal..py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Partition problem.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Next higher number with same number of set bits.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a function that takes 2 strings , search returns true if any anagram of string1(needle) is present in string2(haystack).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a sorted array of integers, write a function that will return the number with the biggest number of repetitions..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a board made of 2 x n squares, and boards made of 2 x 1 squares, write a function that will calculate the number of possible ways to arrange the 2 x 1 boards on the 2 x n board, in a way that will fill it completely.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a board made of 2 x n squares, and boards made of 2 x 1 squares, write a function that will calculate the number of possible ways to arrange the 2 x 1 boards on the 2 x n board, in a way that will fill it completely..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a program to return list of words (from the given list of words) that can be formed from the list of given characters. This is like Scribble game.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/thread_safe_LRU_Cache.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Implement a circular queue of integers of user-specified size using a simple array. Provide routines to initialize(), enqueue() and dequeue() the queue. Make it thread safe..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given two sorted array in ascending order with same length N, calculate the first K min.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml, then given a number range [min, max], tell if all the numers of water in the range can be generated..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a huge N*N matrix, we need to query the GCD of numbers in any given submatrix range（x1,y1,x2,y2）. Design a way to preprocess the matrix to accelerate the query speed..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Write a function that receives three integer inputs for the lengths of the sides of a triangle and returns one of four values to determine the triangle type (1=scalene, 2=isosceles, 3=equilateral, 4=error).py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given an input file, find the line with the most vowels ( Easy)  Followup: Given an input file and any criteria write a function that will find the best score line and return it. (He told me the best score can be anything, min/max/(anything that can be measured) of the criteria)..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Question: You are given a CSV file with 3 columns -- all integers:  id,parent,weight.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Suppose you have N machines connected to a network. Now you generate a new file on one machine, and want to sync up across all machines. please design a system to accomplish this task and also analyze the error tolerance issue..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given two log files, each with a billion usernames (each username appended to the log file), find the usernames existing in both documents?.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/design a system to return an unique ID for each request. For most of requests, the ID value should increase as time goes, the system should handle 1000 requests per second at least..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Design Short URL..py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given the array of digits (0 is also allowed), what is the minimal sum of two integers that are made of the digits contained in the array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given the array of digits (0 is also allowed), what is the minimal sum of two integers that are made of the digits.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c..py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Design a component that will implement web browser history. the user goes to different site and once he press on history button you should display the last 5.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/given a dictionary of wrods,find the pair of word with following property: 1,the two word don't have same letter. 2,the multiple of the two word's length is maximum..py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="558" />
    <option name="y" value="23" />
    <option name="width" value="795" />
    <option name="height" value="841" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>Buildout</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="2" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="Google" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../courseProjects" />
    <property name="options.lastSelected" value="editor.preferences.completion" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="options.searchVisible" value="true" />
    <property name="SearchEverywhereHistoryKey" value="&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py&#10;merge  array&#9;null&#9;null&#10;first non &#9;null&#9;null&#10;first non r&#9;null&#9;null&#10;first re&#9;null&#9;null&#10;short&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Design Short URL..py&#10;gcd&#9;null&#9;null&#10;thread&#9;null&#9;null&#10;dict&#9;null&#9;null&#10;major&#9;null&#9;null&#10;majori&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/binarySearch/Check for Majority Element in a sorted array.py&#10;anagram&#9;null&#9;null&#10;url&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Design Short URL..py&#10;snake&#9;null&#9;null&#10;set bit&#9;null&#9;null&#10;longest comm&#9;null&#9;null&#10;partition&#9;null&#9;null&#10;iterat&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py&#10;single number&#9;null&#9;null&#10;flatten&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py&#10;deepest&#9;null&#9;null&#10;kth bst&#9;null&#9;null&#10;wall&#9;null&#9;null&#10;ugly&#9;null&#9;null&#10;interval&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Given a set of intervals, find the interval which has the maximum number of intersections.py&#10;equil&#9;null&#9;null&#10;intersect&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/几何多边形polygonConvex/How to check if two given line segments intersect__Vector__slope.py&#10;hit&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/called times function hits gethits.py&#10;timer&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/Google/Given a timer time() with nanosecond accuracy and given the interface.py&#10;clust&#9;null&#9;null&#10;merge k sor&#9;null&#9;null&#10;circle&#9;null&#9;null&#10;flatten &#9;null&#9;null&#10;given preorder traversal &#9;null&#9;null&#10;two sorted &#9;null&#9;null&#10;height&#9;null&#9;null&#10;meeting&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/Given an array of meetings, find out the minimum number of conference rooms requiredGiven n intervals  , find the maximum number of overlapping intervals.py&#10;big small&#9;null&#9;null&#10;diago&#9;null&#9;null&#10;reverse&#9;null&#9;null&#10;excel&#9;null&#9;null&#10;guard&#9;null&#9;null&#10;succes&#9;null&#9;null&#10;circular&#9;null&#9;null&#10;rope&#9;null&#9;null&#10;coin&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/dp/Given a value N, if we want to make change for N cents, and we have infinite supply of each of S = { S1, S2, .. , Sm} valued coins, how many ways can we make the change? The order of coins doesn’t matter.py&#10;coin change&#9;null&#9;null&#10;subset sum&#9;null&#9;null&#10;Determine minimum sequence of adjacent&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/Determine minimum sequence of adjacent values in the input parameter array that is greater than input parameter sum___minimum sliding window_Smallest subarray with sum greater than a given value.py&#10;square&#9;null&#9;null" />
    <property name="recentsLimit" value="5" />
    <property name="FullScreen" value="false" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings />
    </option>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <recent name="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <recent name="$PROJECT_DIR$/mianJing111111/facebook" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/Google" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch" />
      <recent name="$PROJECT_DIR$/python" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/graph" />
    </key>
  </component>
  <component name="RunManager" selected="Python.suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c.">
    <configuration default="false" name="Write a program to return list of words (from the given list of words) that can be formed from the list of given characters. This is like Scribble game" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/Write a program to return list of words (from the given list of words) that can be formed from the list of given characters. This is like Scribble game.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Let the user enter a decimal number_Greatest_Common_Divisor" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/epic" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/epic/Let the user enter a decimal number_Greatest_Common_Divisor.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="mergeKsortedArray" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c." type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/Google" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/Google/suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c..py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="testToRun" value="" />
      <option name="keywords" value="" />
      <option name="params" value="" />
      <option name="USE_PARAM" value="false" />
      <option name="USE_KEYWORD" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Nosetests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PUREUNITTEST" value="true" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Attests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="false" name="Sliding Window Maximum_Maximum element of all subarrays of size k" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Sliding Window Maximum_Maximum element of all subarrays of size k.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PyDebugRunner" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PyDebugRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/rocket_Fuel/给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <list size="7">
      <item index="0" class="java.lang.String" itemvalue="Python.Sliding Window Maximum_Maximum element of all subarrays of size k" />
      <item index="1" class="java.lang.String" itemvalue="Python.给一个unsigned int数组，size为n，数组的sum = a，计算一个k的值，将数组中 所有大于k的数改为k之后，数组的sum变为b。Ex,  [1,2,5,7,7,8] = a = 30, b = 26,                          那么k = 6，因为[1,2,5,6,6,6] = 26。" />
      <item index="2" class="java.lang.String" itemvalue="Python.Write a program to return list of words (from the given list of words) that can be formed from the list of given characters. This is like Scribble game" />
      <item index="3" class="java.lang.String" itemvalue="Python.Let the user enter a decimal number_Greatest_Common_Divisor" />
      <item index="4" class="java.lang.String" itemvalue="Python.A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml" />
      <item index="5" class="java.lang.String" itemvalue="Python.mergeKsortedArray" />
      <item index="6" class="java.lang.String" itemvalue="Python.suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c." />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="Python.suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c." />
        <item index="1" class="java.lang.String" itemvalue="Python.mergeKsortedArray" />
        <item index="2" class="java.lang.String" itemvalue="Python.A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml" />
        <item index="3" class="java.lang.String" itemvalue="Python.Let the user enter a decimal number_Greatest_Common_Divisor" />
        <item index="4" class="java.lang.String" itemvalue="Python.Write a program to return list of words (from the given list of words) that can be formed from the list of given characters. This is like Scribble game" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="" />
      <created>1416632866407</created>
      <updated>1416632866407</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="558" y="23" width="795" height="841" extended-state="0" />
    <editor active="false" />
    <layout>
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.251938" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.39716312" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.22814815" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32413793" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
    </layout>
    <layout-to-restore>
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32689655" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="8" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32965517" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.17663044" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.2557143" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="myTodoPanelSettings">
      <TodoPanelSettings />
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="5" />
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/How would you synchronize a linked list across multiple computers. If nodes are added removed to a linked list on one computer, all others must reflect this change.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="697">
          <caret line="7" column="19" selection-start-line="7" selection-start-column="19" selection-end-line="7" selection-end-column="19" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/how to write a connection pool (i.e, a class that returns connections to the user, and if the user is done, returns them back to the pool).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="476">
          <caret line="16" column="231" selection-start-line="16" selection-start-column="231" selection-end-line="16" selection-end-column="231" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Does a given file name match a single-star pattern? (can't use regex I assume.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="187" max-vertical-offset="629">
          <caret line="31" column="22" selection-start-line="31" selection-start-column="22" selection-end-line="31" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a set of intervals, find the interval which has the maximum number of intersections.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.16624685" vertical-offset="257" max-vertical-offset="782">
          <caret line="17" column="30" selection-start-line="17" selection-start-column="30" selection-end-line="17" selection-end-column="30" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write code to give the character sequence given a word, For example, if the word is &quot;CON&quot;, the function will print this.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.8030888" vertical-offset="587" max-vertical-offset="1207">
          <caret line="59" column="76" selection-start-line="59" selection-start-column="76" selection-end-line="59" selection-end-column="76" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/prime/ugly_numbers_Design an algorithm to find the kth number such that the only prime factors are 3,5, and 7.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.16409266" vertical-offset="0" max-vertical-offset="1343">
          <caret line="5" column="7" selection-start-line="5" selection-start-column="7" selection-end-line="5" selection-end-column="7" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="510">
          <caret line="21" column="24" selection-start-line="21" selection-start-column="24" selection-end-line="21" selection-end-column="24" />
          <folding>
            <marker date="1419230376000" expanded="true" signature="-1:-1" placeholder="..." />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a rope of length n meters, cut the rope in different parts of integer lengths in a way that maximizes product of lengths of all parts. You must make at least one cut. Assume that the length of rope is more than 2 meters..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="168" max-vertical-offset="663">
          <caret line="1" column="15" selection-start-line="1" selection-start-column="15" selection-end-line="1" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Extend. If you can remove three walls, then what is the shortest path from start to the target.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="408">
          <caret line="16" column="45" selection-start-line="16" selection-start-column="45" selection-end-line="16" selection-end-column="45" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Deepest left leaf node in a binary tree.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="311" max-vertical-offset="816">
          <caret line="23" column="9" selection-start-line="23" selection-start-column="9" selection-end-line="23" selection-end-column="9" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given two Binary trees. these trees &quot;may&quot; have right and left branches swapped. Now compare it..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="493">
          <caret line="22" column="0" selection-start-line="22" selection-start-column="0" selection-end-line="22" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/new_leetcode_new/single number k times.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="259" max-vertical-offset="901">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/Find the k'th largest element in a binary search tree. Write code for.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="2091">
          <caret line="16" column="15" selection-start-line="16" selection-start-column="15" selection-end-line="16" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/There are 10,000 balls and may be 500 different colors of ball.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="476">
          <caret line="21" column="3" selection-start-line="21" selection-start-column="3" selection-end-line="21" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/iven a list of integers that fall within a known short but unknown range of values, how to find the median value? Some say we could use selection algorithm..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="187">
          <caret line="2" column="114" selection-start-line="2" selection-start-column="114" selection-end-line="2" selection-end-column="114" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/flatten iterator Flatten an iterator of iterators in Java..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="2040">
          <caret line="110" column="10" selection-start-line="110" selection-start-column="10" selection-end-line="110" selection-end-column="10" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Printing Longest Common Subsequence.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.11389961" vertical-offset="417" max-vertical-offset="935">
          <caret line="27" column="7" selection-start-line="27" selection-start-column="7" selection-end-line="27" selection-end-column="7" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/exception_raise.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="425">
          <caret line="18" column="0" selection-start-line="18" selection-start-column="0" selection-end-line="18" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Partition problem.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.8030888" vertical-offset="587" max-vertical-offset="1105">
          <caret line="59" column="25" selection-start-line="59" selection-start-column="25" selection-end-line="59" selection-end-column="25" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You are given an array, divide it into 2 equal halves such that the sum of those 2 halves are equal..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="43" max-vertical-offset="680">
          <caret line="8" column="0" selection-start-line="8" selection-start-column="0" selection-end-line="8" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/bit/Position of rightmost set bit.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="495">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Next higher number with same number of set bits.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="868" max-vertical-offset="1411">
          <caret line="72" column="12" selection-start-line="72" selection-start-column="12" selection-end-line="72" selection-end-column="12" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/You need to develop the game Snake. What data structures will you use? Code your solution..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="543">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write a function that takes 2 strings , search returns true if any anagram of string1(needle) is present in string2(haystack).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.65384614" vertical-offset="0" max-vertical-offset="1887">
          <caret line="20" column="75" selection-start-line="20" selection-start-column="75" selection-end-line="20" selection-end-column="75" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Majority Element.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.34615386" vertical-offset="483" max-vertical-offset="1003">
          <caret line="32" column="0" selection-start-line="32" selection-start-column="0" selection-end-line="46" selection-end-column="21" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a sorted array of integers, write a function that will return the number with the biggest number of repetitions..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.28176796" vertical-offset="0" max-vertical-offset="543">
          <caret line="9" column="24" selection-start-line="9" selection-start-column="24" selection-end-line="9" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch/Check for Majority Element in a sorted array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.06445672" vertical-offset="52" max-vertical-offset="595">
          <caret line="1" column="3" selection-start-line="1" selection-start-column="3" selection-end-line="1" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/How do you add two numbers that are larger_longer than Integer datatype? I said I would use BigInteger , then he asked how will you add if the number is larger than BigInteger.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.14468086" vertical-offset="0" max-vertical-offset="470">
          <caret line="2" column="175" selection-start-line="2" selection-start-column="175" selection-end-line="2" selection-end-column="175" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a board made of 2 x n squares, and boards made of 2 x 1 squares, write a function that will calculate the number of possible ways to arrange the 2 x 1 boards on the 2 x n board, in a way that will fill it completely..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="629">
          <caret line="7" column="94" selection-start-line="7" selection-start-column="94" selection-end-line="7" selection-end-column="94" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a dictionary of words, and a set of characters, judge if all the characters can form the words from the dictionary, without any characters left.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.2953668" vertical-offset="391" max-vertical-offset="1037">
          <caret line="31" column="0" selection-start-line="31" selection-start-column="0" selection-end-line="36" selection-end-column="16" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write a program to return list of words (from the given list of words) that can be formed from the list of given characters. This is like Scribble game.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.36969697" vertical-offset="4" max-vertical-offset="663">
          <caret line="9" column="50" selection-start-line="9" selection-start-column="50" selection-end-line="9" selection-end-column="50" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Implement a circular queue of integers of user-specified size using a simple array. Provide routines to initialize(), enqueue() and dequeue() the queue. Make it thread safe..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.34893617" vertical-offset="176" max-vertical-offset="646">
          <caret line="18" column="52" selection-start-line="18" selection-start-column="52" selection-end-line="18" selection-end-column="52" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/thread_safe_LRU_Cache.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.31034482" vertical-offset="714" max-vertical-offset="1207">
          <caret line="33" column="14" selection-start-line="33" selection-start-column="14" selection-end-line="33" selection-end-column="14" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given a huge N*N matrix, we need to query the GCD of numbers in any given submatrix range（x1,y1,x2,y2）. Design a way to preprocess the matrix to accelerate the query speed..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.30289534" vertical-offset="0" max-vertical-offset="449">
          <caret line="5" column="11" selection-start-line="5" selection-start-column="11" selection-end-line="5" selection-end-column="11" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Write a function that receives three integer inputs for the lengths of the sides of a triangle and returns one of four values to determine the triangle type (1=scalene, 2=isosceles, 3=equilateral, 4=error).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.1440678" vertical-offset="0" max-vertical-offset="472">
          <caret line="2" column="205" selection-start-line="2" selection-start-column="205" selection-end-line="2" selection-end-column="205" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/Let the user enter a decimal number_Greatest_Common_Divisor.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.39361703" vertical-offset="185" max-vertical-offset="680">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given an input file and any criteria write a function that will find the best score line and return it..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="20" max-vertical-offset="578">
          <caret line="5" column="0" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="103" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/A soda water machine,press button A can generate 300-310ml, button B can generate 400-420ml and button C can generate 500-515ml.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.8377282" vertical-offset="80" max-vertical-offset="646">
          <caret line="26" column="29" selection-start-line="26" selection-start-column="29" selection-end-line="26" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Question: You are given a CSV file with 3 columns -- all integers:  id,parent,weight.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.9310345" vertical-offset="374" max-vertical-offset="969">
          <caret line="47" column="39" selection-start-line="47" selection-start-column="39" selection-end-line="47" selection-end-column="39" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Suppose you have N machines connected to a network. Now you generate a new file on one machine, and want to sync up across all machines. please design a system to accomplish this task and also analyze the error tolerance issue..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.9310345" vertical-offset="136" max-vertical-offset="714">
          <caret line="22" column="288" selection-start-line="22" selection-start-column="288" selection-end-line="22" selection-end-column="288" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given two log files, each with a billion usernames (each username appended to the log file), find the usernames existing in both documents?.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="204">
          <caret line="5" column="24" selection-start-line="5" selection-start-column="24" selection-end-line="5" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/design a system to return an unique ID for each request. For most of requests, the ID value should increase as time goes, the system should handle 1000 requests per second at least..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.88438135" vertical-offset="584" max-vertical-offset="1139">
          <caret line="45" column="119" selection-start-line="45" selection-start-column="119" selection-end-line="45" selection-end-column="119" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Find the first repeating element in an array of integers.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="510">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/stream/Given a string, find its first non-repeating character.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="680">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Given a string, find its first non-repeating character.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="493">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Design Short URL..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="1938" max-vertical-offset="2873">
          <caret line="15" column="12" selection-start-line="15" selection-start-column="12" selection-end-line="15" selection-end-column="12" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="834" max-vertical-offset="2040">
          <caret line="76" column="10" selection-start-line="76" selection-start-column="10" selection-end-line="76" selection-end-column="10" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Given the array of digits (0 is also allowed), what is the minimal sum of two integers that are made of the digits.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.8453039" vertical-offset="0" max-vertical-offset="561">
          <caret line="23" column="8" selection-start-line="23" selection-start-column="8" selection-end-line="23" selection-end-column="8" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/suppose a string is consists of a, b, and c Now given a integer N, output the amount of all possible strings of length N that don't of have consecutive a,b,c..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.1724138" vertical-offset="153" max-vertical-offset="901">
          <caret line="12" column="4" selection-start-line="12" selection-start-column="4" selection-end-line="12" selection-end-column="4" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/Design a component that will implement web browser history. the user goes to different site and once he press on history button you should display the last 5.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="323">
          <caret line="6" column="86" selection-start-line="6" selection-start-column="86" selection-end-line="6" selection-end-column="86" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/given a dictionary of wrods,find the pair of word with following property: 1,the two word don't have same letter. 2,the multiple of the two word's length is maximum..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.31034482" vertical-offset="1326" max-vertical-offset="1819">
          <caret line="72" column="18" selection-start-line="72" selection-start-column="18" selection-end-line="72" selection-end-column="18" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>


<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/code_training_leet_code/Find Peak Element.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/__init__.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/__init__.py" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/__init__.py" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/code_training_leet_code/cracking_the_coding/ugly_numbers_Design an algorithm to find the kth number such that the only prime factors are 3,5, and 7.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/Google/Write a method to return first five 10 digit prime numbers.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/epic/Given a number check whether it is equal to its sum of its factors or not (excluding the number itself).py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/epic/Given a password in number : Write an algorithm to print all possible combinations of that password..py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/epic/Write a function which takes a number as input, verify if is an even number greater than 2 and also print atleast one pair of prime numbers..py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/epic/Write a program to generate all prime numbers from 2 to N for any N value_prime_sieve.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/epic/dates_year.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/facebook/Write a function that takes 2 strings , search returns true if any anagram of string1(needle) is present in string2(haystack).py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/杂/Count trailing zeroes in factorial of a number.py" afterPath="" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/python/List Comprehension.py" afterPath="" />
      <change type="MOVED" beforePath="$PROJECT_DIR$/mianJing111111/epic/How to convert a binary tree to binary search tree in-place.py" afterPath="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/How to convert a binary tree to binary search tree in-place.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/An additive sequence number is which when splitted in two different number forms additive seq..py" afterPath="$PROJECT_DIR$/mianJing111111/epic/An additive sequence number is which when splitted in two different number forms additive seq..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/Convert string into new string e.g. &quot;abcD&quot;-&gt;&quot;cdeF&quot; and &quot;plxY&quot; -&gt; &quot;rnzA&quot;.py" afterPath="$PROJECT_DIR$/mianJing111111/epic/Convert string into new string e.g. &quot;abcD&quot;-&gt;&quot;cdeF&quot; and &quot;plxY&quot; -&gt; &quot;rnzA&quot;.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/Find the seed of a number. Eg : 1716 = 143*1*4*3 =1716 so 143 is the seed of 1716. find all possible seed for a given number..py" afterPath="$PROJECT_DIR$/mianJing111111/epic/Find the seed of a number. Eg : 1716 = 143*1*4*3 =1716 so 143 is the seed of 1716. find all possible seed for a given number..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/Given number of digits of a phone number and number of disallowed digits as input.py" afterPath="$PROJECT_DIR$/mianJing111111/epic/Given number of digits of a phone number and number of disallowed digits as input.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/I have a log that consists of more than 100 million lines. Each line is just a data about user login, login time.py" afterPath="$PROJECT_DIR$/mianJing111111/epic/I have a log that consists of more than 100 million lines. Each line is just a data about user login, login time.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/In 1-9 keypad one key is not working. If some one enters a password then not working key will not be entered.py" afterPath="$PROJECT_DIR$/mianJing111111/epic/In 1-9 keypad one key is not working. If some one enters a password then not working key will not be entered.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py" afterPath="$PROJECT_DIR$/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/check_Valid.py" afterPath="$PROJECT_DIR$/mianJing111111/epic/check_Valid.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/clock_We are given a specific time(like 02:23), we need to get the angle between hour and minute(less than 180).py" afterPath="$PROJECT_DIR$/mianJing111111/epic/clock_We are given a specific time(like 02:23), we need to get the angle between hour and minute(less than 180).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/colorfulNumber.py" afterPath="$PROJECT_DIR$/mianJing111111/epic/colorfulNumber.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/invalid; 1. must be 5-12 characters long 2. must contain atleast one number and one lowercase character 3. a sequence must not be followed by the same sequence (like 123123qs is invalid, 123qs123 is valid).py" afterPath="$PROJECT_DIR$/mianJing111111/epic/invalid; 1. must be 5-12 characters long 2. must contain atleast one number and one lowercase character 3. a sequence must not be followed by the same sequence (like 123123qs is invalid, 123qs123 is valid).py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/mianJing111111/epic/jumper_find the longest ways for each players.py" afterPath="$PROJECT_DIR$/mianJing111111/epic/jumper_find the longest ways for each players.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/test.py" afterPath="$PROJECT_DIR$/test.py" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
    </list>
    <ignored path="code_training.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DaemonCodeAnalyzer">
    <disable_hints />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="code_training" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py" pinned="false" current="true" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.49203187" vertical-offset="263" max-vertical-offset="765">
              <caret line="26" column="0" selection-start-line="26" selection-start-column="0" selection-end-line="26" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="test.py" pinned="false" current="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/test.py">
          <provider selected="true" editor-type-id="text-editor">
            <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="510">
              <caret line="1" column="3" selection-start-line="1" selection-start-column="3" selection-end-line="1" selection-end-column="3" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindManager">
    <FindUsagesManager>
      <setting name="OPEN_NEW_TAB" value="true" />
    </FindUsagesManager>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="changedFiles">
      <list>
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/Shortest _ path _  twon _ nodes _ Find distance between two given keys of a Binary Tree.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/Given a N*N Matrix. All rows are sorted, and all columns are sorted. Find the Kth Largest element of the matrix..py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/flatten array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/The Celebrity Problem.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/Give a set of objects and a function. Pass two objects to that function and it can tell you whether one object points to another one..py" />
        <option value="$PROJECT_DIR$/test9.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/One Edit Distance.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Intersection of Two Linked Lists.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Merge Intervals.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Insert Interval.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/Given a list of ranges, find whether the target range is in the union of the given intervals.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/Given an array of numbers, they are arranged so that the a[0] is in the 1st bucket, a[1]a[2] are in the 2nd bucket, a[3]a[4]a[5] is in the 3rd bucket and so o.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/You have 2 sparse vectors (large number of 0’s). First tell me a way to represent and store them, and then find the dot product..py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/design/Implement two stacks in an array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/Find a minimum range contain a number from each row. For above array it should be (1000-1002) range.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch/Count the number of occurrences in a sorted array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Majority Element.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Search for a Range.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/prime/Efficient program to print all prime factors of a given number.py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Gray Code.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/flatten Convert a given Binary Tree to Double Linked List.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/5) Given a set of n jobs with [start time, end time, cost] find a subset so that no 2 jobs overlap and the cost is maximum ?.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/write a function that takes a list of binary numbers and returns the sum of the hamming distances for each pair.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/Reverse a doubly linked list.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/Write a function that calculates input strings with operators +,-,*,.py" />
        <option value="$PROJECT_DIR$/mianJing111111/facebook/Find the k'th largest element in a binary search tree. Write code for.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/count inversions in an unordered array.py" />
        <option value="$PROJECT_DIR$/mianJing111111/Google/balanced parenthesis O(1) space.py" />
        <option value="$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch/Given an array of integers. Find a peak element in it. An array element is peak if it is NOT smaller than its neighbors. For corner elements, we need to consider only one neighbor..py" />
        <option value="$PROJECT_DIR$/code_training_leet_code/Find Peak Element.py" />
        <option value="$PROJECT_DIR$/algorithms/Counting_Sort/counting_sort.py" />
        <option value="$PROJECT_DIR$/algorithms/binary_search_tree.py" />
        <option value="$PROJECT_DIR$/algorithms/quickSort.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/25, 5, 10, 15.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/A number is called as a stepping number if the adjacent digits are having a difference of 1.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/An additive sequence number is which when splitted in two different number forms additive seq..py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/check_Valid.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/clock_We are given a specific time(like 02:23), we need to get the angle between hour and minute(less than 180).py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/colorfulNumber.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/Convert string into new string e.g. &quot;abcD&quot;-&gt;&quot;cdeF&quot; and &quot;plxY&quot; -&gt; &quot;rnzA&quot;.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/Find all the possible passwords, given the length of the password and that it is a well ordered number.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/Find the seed of a number. Eg : 1716 = 143*1*4*3 =1716 so 143 is the seed of 1716. find all possible seed for a given number..py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/Given a number check whether it is equal to its sum of its factors or not (excluding the number itself).py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/Given a password in number : Write an algorithm to print all possible combinations of that password..py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/Given number of digits of a phone number and number of disallowed digits as input.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/I have a log that consists of more than 100 million lines. Each line is just a data about user login, login time.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/In 1-9 keypad one key is not working. If some one enters a password then not working key will not be entered.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/invalid; 1. must be 5-12 characters long 2. must contain atleast one number and one lowercase character 3. a sequence must not be followed by the same sequence (like 123123qs is invalid, 123qs123 is valid).py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/jumper_find the longest ways for each players.py" />
        <option value="$PROJECT_DIR$/test.py" />
        <option value="$PROJECT_DIR$/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="410" />
    <option name="y" value="23" />
    <option name="width" value="1185" />
    <option name="height" value="841" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>Buildout</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="2" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectReloadState">
    <option name="STATE" value="0" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="python" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="geeksforgeeks" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="code_training" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="mianJing111111" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="epic" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../courseProjects" />
    <property name="options.lastSelected" value="reference.settingsdialog.IDE.editor.colors.Python" />
    <property name="options.splitter.main.proportions" value="0.3" />
    <property name="options.splitter.details.proportions" value="0.2" />
    <property name="options.searchVisible" value="true" />
    <property name="SearchEverywhereHistoryKey" value="prime&#9;null&#9;null&#10;rime&#9;null&#9;null&#10;primes&#9;null&#9;null&#10;date&#9;null&#9;null&#10;peak&#9;null&#9;null&#10;decimal&#9;null&#9;null&#10;merge k&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py&#10;merge &#9;null&#9;null&#10;lar&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/Find the k'th largest element in a binary search tree. Write code for.py&#10;Count smaller elements on right side&#9;null&#9;null&#10;largest&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/Find the k'th largest element in a binary search tree. Write code for.py&#10;calculate&#9;null&#9;null&#10;reverse&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/Reverse a doubly linked list.py&#10;&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/5) Given a set of n jobs with [start time, end time, cost] find a subset so that no 2 jobs overlap and the cost is maximum ?.py&#10;flatten&#9;null&#9;null&#10;gray code&#9;null&#9;null&#10;atof&#9;null&#9;null&#10;search&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Search for a Range.py&#10;majority&#9;null&#9;null&#10;search range&#9;null&#9;null&#10;range&#9;null&#9;null&#10; contain a number from each row&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/Find a minimum range contain a number from each row. For above array it should be (1000-1002) range.py&#10;queue&#9;null&#9;null&#10;stack&#9;null&#9;null&#10;sparse&#9;null&#9;null&#10;merge&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Merge Intervals.py&#10;insert in&#9;null&#9;null&#10;interval&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/Given a list of ranges, find whether the target range is in the union of the given intervals.py&#10;mer&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Merge Intervals.py&#10;merge in&#9;null&#9;null&#10;cele&#9;null&#9;null&#10;sorted  matrix&#9;null&#9;null&#10;shortest&#9;null&#9;null&#10;kth&#9;null&#9;null&#10;next &#9;null&#9;null&#10;sink&#9;null&#9;null&#10;delete&#9;null&#9;null&#10;divide&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/code_training_leet_code/Divide Two Integers.py&#10;add&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/bit/Add two numbers without using arithmetic operators.py&#10;flatt&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/linkedlist/Flatten a multilevel linked list.py&#10;add tw&#9;null&#9;null&#10;multil&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/geeksforgeeks/linkedlist/Flatten a multilevel linked list.py&#10;flatte&#9;null&#9;null&#10;subset&#9;null&#9;null&#10;rectangle&#9;null&#9;null&#10;itera&#9;FILE&#9;file:///Users/zhenglinyu/PycharmProjects/code_training/mianJing111111/facebook/给TreeNode写Iterator，使得以上代码可以in order traversal.py&#10;inorder&#9;null&#9;null&#10;word break&#9;null&#9;null&#10;move ze&#9;null&#9;null&#10;quick&#9;null&#9;null" />
    <property name="recentsLimit" value="5" />
    <property name="FullScreen" value="false" />
  </component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings />
    </option>
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree" />
      <recent name="$PROJECT_DIR$/python" />
      <recent name="$PROJECT_DIR$/algorithms" />
      <recent name="$PROJECT_DIR$/mianJing111111/facebook" />
      <recent name="$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp" />
    </key>
  </component>
  <component name="RunManager" selected="Python.Let the user enter a decimal number_Greatest_Common_Divisor">
    <configuration default="false" name="Find the seed of a number. Eg : 1716 = 143*1*4*3 =1716 so 143 is the seed of 1716. find all possible seed for a given number." type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/epic" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/epic/Find the seed of a number. Eg : 1716 = 143*1*4*3 =1716 so 143 is the seed of 1716. find all possible seed for a given number..py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Given a password in number : Write an algorithm to print all possible combinations of that password." type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/epic" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/epic/Given a password in number : Write an algorithm to print all possible combinations of that password..py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Given number of digits of a phone number and number of disallowed digits as input" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/epic" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/epic/Given number of digits of a phone number and number of disallowed digits as input.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="In 1-9 keypad one key is not working. If some one enters a password then not working key will not be entered" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/epic" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/epic/In 1-9 keypad one key is not working. If some one enters a password then not working key will not be entered.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="false" name="Let the user enter a decimal number_Greatest_Common_Divisor" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/mianJing111111/epic" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/mianJing111111/epic/Let the user enter a decimal number_Greatest_Common_Divisor.py" />
      <option name="PARAMETERS" value="" />
      <RunnerSettings RunnerId="PythonRunner" />
      <ConfigurationWrapper RunnerId="PythonRunner" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="testToRun" value="" />
      <option name="keywords" value="" />
      <option name="params" value="" />
      <option name="USE_PARAM" value="false" />
      <option name="USE_KEYWORD" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Nosetests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PUREUNITTEST" value="true" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Attests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="code_training" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <list size="5">
      <item index="0" class="java.lang.String" itemvalue="Python.Find the seed of a number. Eg : 1716 = 143*1*4*3 =1716 so 143 is the seed of 1716. find all possible seed for a given number." />
      <item index="1" class="java.lang.String" itemvalue="Python.Given a password in number : Write an algorithm to print all possible combinations of that password." />
      <item index="2" class="java.lang.String" itemvalue="Python.Given number of digits of a phone number and number of disallowed digits as input" />
      <item index="3" class="java.lang.String" itemvalue="Python.In 1-9 keypad one key is not working. If some one enters a password then not working key will not be entered" />
      <item index="4" class="java.lang.String" itemvalue="Python.Let the user enter a decimal number_Greatest_Common_Divisor" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="Python.Let the user enter a decimal number_Greatest_Common_Divisor" />
        <item index="1" class="java.lang.String" itemvalue="Python.In 1-9 keypad one key is not working. If some one enters a password then not working key will not be entered" />
        <item index="2" class="java.lang.String" itemvalue="Python.Given number of digits of a phone number and number of disallowed digits as input" />
        <item index="3" class="java.lang.String" itemvalue="Python.Given a password in number : Write an algorithm to print all possible combinations of that password." />
        <item index="4" class="java.lang.String" itemvalue="Python.Find the seed of a number. Eg : 1716 = 143*1*4*3 =1716 so 143 is the seed of 1716. find all possible seed for a given number." />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0520e970-349b-4e5e-87ea-597afa187170" name="Default" comment="" />
      <created>1416632866407</created>
      <updated>1416632866407</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="410" y="23" width="1185" height="841" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.1580756" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.23724137" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32825485" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
    </layout>
    <layout-to-restore>
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32825485" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="9" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.21084337" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Run" active="true" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.18620689" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="myTodoPanelSettings">
      <TodoPanelSettings />
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="2" />
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/Write atof in Java, which converts a string representation of a float (like &quot;342.18E-10&quot;) to an actual float without using any built-in parsing functions..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="530" max-vertical-offset="1054">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Gray Code.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="43" max-vertical-offset="544">
          <caret line="15" column="0" selection-start-line="15" selection-start-column="0" selection-end-line="15" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/flatten Convert a given Binary Tree to Double Linked List.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="559" max-vertical-offset="1054">
          <caret line="48" column="69" selection-start-line="48" selection-start-column="69" selection-end-line="48" selection-end-column="69" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/write a function that takes a list of binary numbers and returns the sum of the hamming distances for each pair.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.0179641" vertical-offset="0" max-vertical-offset="663">
          <caret line="28" column="20" selection-start-line="28" selection-start-column="20" selection-end-line="28" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/Reverse a doubly linked list.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="271" max-vertical-offset="799">
          <caret line="21" column="18" selection-start-line="21" selection-start-column="18" selection-end-line="21" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/dp/Maximum sum such that no two elements are adjacent.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="649" max-vertical-offset="1173">
          <caret line="54" column="35" selection-start-line="54" selection-start-column="0" selection-end-line="55" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/Count smaller elements on right side.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="408" max-vertical-offset="850">
          <caret line="35" column="13" selection-start-line="35" selection-start-column="13" selection-end-line="35" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/Write a function that calculates input strings with operators +,-,*,.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.8816794" vertical-offset="0" max-vertical-offset="1088">
          <caret line="58" column="3" selection-start-line="58" selection-start-column="3" selection-end-line="58" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Merge Sorted Array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="-0.18762475" vertical-offset="94" max-vertical-offset="595">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/Find the k'th largest element in a binary search tree. Write code for.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.8083832" vertical-offset="1125" max-vertical-offset="1649">
          <caret line="84" column="48" selection-start-line="84" selection-start-column="48" selection-end-line="84" selection-end-column="48" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/count inversions in an unordered array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0705036" vertical-offset="70" max-vertical-offset="765">
          <caret line="6" column="130" selection-start-line="6" selection-start-column="130" selection-end-line="6" selection-end-column="130" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/mergeKsortedArray.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.70647484" vertical-offset="920" max-vertical-offset="1615">
          <caret line="81" column="20" selection-start-line="81" selection-start-column="20" selection-end-line="81" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/decimal representation of the rational number.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.73046875" vertical-offset="0" max-vertical-offset="867">
          <caret line="20" column="18" selection-start-line="20" selection-start-column="8" selection-end-line="20" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/Google/balanced parenthesis O(1) space.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.46341464" vertical-offset="0" max-vertical-offset="697">
          <caret line="19" column="21" selection-start-line="19" selection-start-column="21" selection-end-line="19" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/code_training_leet_code/Find Peak Element.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.50445104" vertical-offset="0" max-vertical-offset="674">
          <caret line="20" column="18" selection-start-line="20" selection-start-column="18" selection-end-line="20" selection-end-column="18" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/array/binarySearch/Given an array of integers. Find a peak element in it. An array element is peak if it is NOT smaller than its neighbors. For corner elements, we need to consider only one neighbor..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.46341464" vertical-offset="0" max-vertical-offset="2278">
          <caret line="17" column="15" selection-start-line="17" selection-start-column="15" selection-end-line="17" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/facebook/5) Given a set of n jobs with [start time, end time, cost] find a subset so that no 2 jobs overlap and the cost is maximum ?.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="731">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="16" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/algorithms/counting_sort.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="502">
          <caret line="0" column="16" selection-start-line="0" selection-start-column="16" selection-end-line="0" selection-end-column="16" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test9.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.71238095" vertical-offset="0" max-vertical-offset="525">
          <caret line="22" column="18" selection-start-line="22" selection-start-column="18" selection-end-line="22" selection-end-column="18" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/algorithms/BFS_DFS.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="731">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/algorithms/binary_search_tree.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.25904763" vertical-offset="0" max-vertical-offset="1122">
          <caret line="8" column="41" selection-start-line="8" selection-start-column="41" selection-end-line="8" selection-end-column="41" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/algorithms/queue.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.35619047" vertical-offset="0" max-vertical-offset="680">
          <caret line="11" column="26" selection-start-line="0" selection-start-column="0" selection-end-line="34" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/algorithms/heap.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.32380953" vertical-offset="0" max-vertical-offset="525">
          <caret line="10" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="10" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/algorithms/quickSort.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7733333" vertical-offset="342" max-vertical-offset="867">
          <caret line="44" column="45" selection-start-line="44" selection-start-column="45" selection-end-line="44" selection-end-column="45" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/singleton.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="525">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/25, 5, 10, 15.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.64761907" vertical-offset="0" max-vertical-offset="663">
          <caret line="20" column="53" selection-start-line="20" selection-start-column="53" selection-end-line="20" selection-end-column="53" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/A number is called as a stepping number if the adjacent digits are having a difference of 1.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5418327" vertical-offset="0" max-vertical-offset="502">
          <caret line="15" column="36" selection-start-line="15" selection-start-column="36" selection-end-line="15" selection-end-column="36" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/An additive sequence number is which when splitted in two different number forms additive seq..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="1.3276191" vertical-offset="0" max-vertical-offset="799">
          <caret line="40" column="0" selection-start-line="40" selection-start-column="0" selection-end-line="40" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/python/strings.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="595">
          <caret line="0" column="12" selection-start-line="0" selection-start-column="0" selection-end-line="1" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/check_Valid.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.35619047" vertical-offset="0" max-vertical-offset="612">
          <caret line="8" column="0" selection-start-line="8" selection-start-column="0" selection-end-line="8" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/clock_We are given a specific time(like 02:23), we need to get the angle between hour and minute(less than 180).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="289">
          <caret line="11" column="26" selection-start-line="11" selection-start-column="26" selection-end-line="11" selection-end-column="26" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/colorfulNumber.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5790476" vertical-offset="36" max-vertical-offset="595">
          <caret line="18" column="46" selection-start-line="18" selection-start-column="46" selection-end-line="18" selection-end-column="46" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/Convert string into new string e.g. &quot;abcD&quot;-&gt;&quot;cdeF&quot; and &quot;plxY&quot; -&gt; &quot;rnzA&quot;.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.35619047" vertical-offset="0" max-vertical-offset="525">
          <caret line="11" column="21" selection-start-line="11" selection-start-column="21" selection-end-line="11" selection-end-column="21" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/Write a program to generate all palindrome dates by taking the beginning and the ending dates as an input from the user. The format of the date is given as MMDDYYYY.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="663">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/Find all the possible passwords, given the length of the password and that it is a well ordered number.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.71238095" vertical-offset="0" max-vertical-offset="525">
          <caret line="21" column="17" selection-start-line="21" selection-start-column="17" selection-end-line="21" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/find longest increasing sub sequence in 2d array.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="525">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/Find the seed of a number. Eg : 1716 = 143*1*4*3 =1716 so 143 is the seed of 1716. find all possible seed for a given number..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="425">
          <caret line="14" column="22" selection-start-line="14" selection-start-column="15" selection-end-line="14" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/prime/Efficient program to print all prime factors of a given number.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.034" vertical-offset="663" max-vertical-offset="1819">
          <caret line="38" column="19" selection-start-line="38" selection-start-column="19" selection-end-line="38" selection-end-column="19" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/prime/primeNumDecide.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="447" max-vertical-offset="901">
          <caret line="35" column="30" selection-start-line="0" selection-start-column="0" selection-end-line="45" selection-end-column="30" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/prime/100以内prime.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="454">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/generate all possible well-ordered word that can be generated by those numbers of given character sequences.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5079681" vertical-offset="0" max-vertical-offset="595">
          <caret line="13" column="32" selection-start-line="13" selection-start-column="32" selection-end-line="13" selection-end-column="32" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/Given number of digits of a phone number and number of disallowed digits as input.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.9028571" vertical-offset="274" max-vertical-offset="850">
          <caret line="42" column="32" selection-start-line="42" selection-start-column="32" selection-end-line="42" selection-end-column="32" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/geeksforgeeks/tree/How to convert a binary tree to binary search tree in-place.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.25904763" vertical-offset="0" max-vertical-offset="525">
          <caret line="8" column="3" selection-start-line="8" selection-start-column="3" selection-end-line="8" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/I have a log that consists of more than 100 million lines. Each line is just a data about user login, login time.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.68" vertical-offset="0" max-vertical-offset="525">
          <caret line="18" column="21" selection-start-line="18" selection-start-column="21" selection-end-line="18" selection-end-column="21" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/implementRandom.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.32380953" vertical-offset="0" max-vertical-offset="525">
          <caret line="10" column="0" selection-start-line="10" selection-start-column="0" selection-end-line="10" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/In 1-9 keypad one key is not working. If some one enters a password then not working key will not be entered.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.7631027" vertical-offset="61" max-vertical-offset="629">
          <caret line="24" column="16" selection-start-line="24" selection-start-column="16" selection-end-line="24" selection-end-column="16" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/invalid; 1. must be 5-12 characters long 2. must contain atleast one number and one lowercase character 3. a sequence must not be followed by the same sequence (like 123123qs is invalid, 123qs123 is valid).py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="214" max-vertical-offset="714">
          <caret line="27" column="14" selection-start-line="27" selection-start-column="13" selection-end-line="27" selection-end-column="14" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/jumper_find the longest ways for each players.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.796" vertical-offset="265" max-vertical-offset="765">
          <caret line="37" column="39" selection-start-line="0" selection-start-column="0" selection-end-line="37" selection-end-column="39" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/Let the user enter a decimal number_Greatest_Common_Divisor.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.5790476" vertical-offset="138" max-vertical-offset="663">
          <caret line="25" column="21" selection-start-line="25" selection-start-column="20" selection-end-line="25" selection-end-column="21" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test.py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="510">
          <caret line="1" column="3" selection-start-line="1" selection-start-column="3" selection-end-line="1" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/mianJing111111/epic/N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner..py">
      <provider selected="true" editor-type-id="text-editor">
        <state vertical-scroll-proportion="0.49203187" vertical-offset="263" max-vertical-offset="765">
          <caret line="26" column="0" selection-start-line="26" selection-start-column="0" selection-end-line="26" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>

